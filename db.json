{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/next/source/ads.txt","path":"ads.txt","modified":1,"renderable":1},{"_id":"themes/next/source/baidu_verify_codeva-Sqhqqo5bXf.html","path":"baidu_verify_codeva-Sqhqqo5bXf.html","modified":1,"renderable":1},{"_id":"themes/next/source/robots.txt","path":"robots.txt","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/binance.jpg","path":"images/binance.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechat_channel.jpg","path":"images/wechat_channel.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","path":"lib/canvas-ribbon/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","path":"lib/canvas-ribbon/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/51单片机入门-点亮LED.md","hash":"ead02ea67d927cf7bf225544b05e52021d2a9c59","modified":1756968247216},{"_id":"source/_posts/51单片机的学习笔记.md","hash":"d6ce2c0d41b35a7055eaf0b6e63bcd1a2739d0ea","modified":1756968247219},{"_id":"source/_posts/DELL报错The-PERC1-battery-is-low.md","hash":"d91f0e9331e291754784ad74571445b91d4eb98f","modified":1757469461879},{"_id":"source/_posts/Debian基础知识【持续更新】.md","hash":"f06787e4e2a1946ec17009bbe1970c05f9a4b102","modified":1756968247220},{"_id":"source/_posts/IT基础知识百科.md","hash":"0b266c309e303c09e005e4b13a23d9cd06c95a7d","modified":1756968247221},{"_id":"source/_posts/Debian安装教程.md","hash":"df03c2ff357c69e0148da7c45d61705ae501b2d7","modified":1756968247220},{"_id":"source/_posts/Debian-x86-64平台搭建arm-docker环境.md","hash":"9949f87de37a1ec76d208e8d30c5dad41a7d09c9","modified":1756968247219},{"_id":"source/_posts/Linux技巧【随时更新】.md","hash":"3bc8dab2339b251d09712b39e3ea3e4b1f059d7e","modified":1756968247221},{"_id":"source/_posts/Linux查询ssh日志判断是否被入侵及加强ssh安全的办法.md","hash":"bef7c39e5f6745a506f9d4441821e9848766f8c7","modified":1756968247221},{"_id":"source/_posts/Proxmox-VE-导入SylixOS-VMware版.md","hash":"bcbf0d18ef92cafd2fbfe8fbc3a7a753a31001ec","modified":1756968247222},{"_id":"source/_posts/Python实现自动将GFWList规则转换为Clash规则.md","hash":"e33ea169067f80126b19bc8cd30c36f42fef5a1d","modified":1756968247222},{"_id":"source/_posts/apt等各种源列表（持续更新）.md","hash":"d5a2b86e5e0f3a5b7a4e564d96e9becb36ec08fd","modified":1756968247223},{"_id":"source/_posts/Ubuntu安装教程.md","hash":"9c638e0e645d2c67f45e7fbf1b044119a2c51d8d","modified":1756968247223},{"_id":"source/_posts/Proxmox-VE批量加集群、批量克隆、批量设置并同步时间、批量清除集群残留、批量创建网卡等一站式解决方案！（本教程采用YgeCloud实测）.md","hash":"3b5a152d5ab6492ea87177486662031a76407164","modified":1756968247222},{"_id":"source/_posts/cpp编写fio测试工具，我在发疯.md","hash":"f015b26627053ae71d9959d174aeac8165a271bd","modified":1756968247224},{"_id":"source/_posts/vscode编写markdown的插件推荐.md","hash":"09b0e4d6cf4856e0bebf652a844d8bb3fa0dac0e","modified":1756968247224},{"_id":"source/_posts/关于磁盘残留lvm的解决办法.md","hash":"31ce7bf0659f914adc0127c0898830d56dc7b3d5","modified":1756968247225},{"_id":"source/_posts/关于DELL-PowerEdge报错Correctable-memory-error-logging-disabled-for-a-memory-device的说明.md","hash":"ec6030d272147949d9f87427762096af3c29a8c4","modified":1757472670759},{"_id":"source/_posts/关于Proxmox-VE系统创建UEFI虚拟机需要单独添加EFI磁盘的问题.md","hash":"085ef45e825922fdcfb1b92dc86003741cdd3294","modified":1756968247224},{"_id":"source/_posts/如何搭建具有GPGkey验证的可信任apt源.md","hash":"bd4be381a007e91d85d03544873a6cd0fdb088ae","modified":1756968247225},{"_id":"source/_posts/将二进制可执行程序构建为deb包.md","hash":"835505fd47e9497cb24d7af1311dc1cabc1b2af7","modified":1756968247226},{"_id":"source/_posts/国内docker-hub无法使用的解决办法.md","hash":"ee3f380210dc13b12931ef030e0aff6051b488f2","modified":1756968247225},{"_id":"source/_posts/异地组网加Nginx反代实现计算资源本地化.md","hash":"062c32d3c13d6a38e7fbe949887a328af4ec8505","modified":1756968247226},{"_id":"source/_posts/未整理的随手技术笔记（实时更新，各种乱七八糟的技术都会记录在这儿）.md","hash":"585a2dcd2c4c0e42b5c615ed130db777f5ddbb20","modified":1756968247226},{"_id":"source/_posts/本站上线私有apt源仓库及自制实用deb包.md","hash":"0050142a5ef69128a004ea79699a4ab71dfd706c","modified":1756968247227},{"_id":"source/_posts/相片硅脂片知识.md","hash":"3cbc0b98ee812c2962dd1ecc303f4e5961c2fa73","modified":1756968247227},{"_id":"source/_posts/记录Proxmox-VE虚拟机网卡的一次坑.md","hash":"89808a31ae82f000572c2202f7262f73a2e66fd7","modified":1756968247228},{"_id":"source/_posts/记录一下我的Debian配置v2ray-config-json.md","hash":"f0fcac8488f3ffe2e4a09f366e10c674a0b792a6","modified":1756968247228},{"_id":"source/_posts/直接编写crontab使用一行命令完成Proxmox-VE所有虚拟机的安全关机.md","hash":"fd158b1d8766b3da79d456388d10cf1cd7b8fcfc","modified":1756968247227},{"_id":"source/_posts/记录一次分析-服务器SSD报故障随后自行恢复正常现象.md","hash":"ee80c9228dac8c2ad6616fe75f3185541da3d989","modified":1757482864548},{"_id":"source/_posts/记录一次构建armv8平台vsftpd-Docker镜像的过程.md","hash":"7f193f957bdfe2c1c398351a3b5f397cdffe0f4c","modified":1756968247229},{"_id":"source/_posts/记录初学Python开发fio测试工具.md","hash":"31b11e3a6df6d2e4d764015f6e4293bc919bbc4c","modified":1756968247229},{"_id":"source/_posts/记录用docker部署nextcloud及配套mariadb、redis和持久化存储.md","hash":"b91d548e99cae2414aa4cae006ae7cb545ba25e4","modified":1756968247229},{"_id":"source/_posts/飞腾arm平台使用docker部署ftp教程.md","hash":"1145b67a5cd19f1da45302b29827f560ac5eb6c7","modified":1756968247232},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1756968247233},{"_id":"themes/next/.gitattributes","hash":"aeeca2f1e987d83232d7870d1435a4e3ed66b648","modified":1756968247233},{"_id":"themes/next/.eslintrc.json","hash":"611e15c3fcb41dc68fa8532ee595a1262a1b5a8a","modified":1756968247233},{"_id":"themes/next/.stylelintrc","hash":"c6b473cc7337d35b278cd9d85855c60ee2fead3e","modified":1756968247242},{"_id":"themes/next/.gitignore","hash":"087b7677078303acb2acb47432165950e4d29b43","modified":1756968247241},{"_id":"themes/next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1756968247242},{"_id":"themes/next/_config.yml","hash":"1fbd680e9c421ca808209de911590a0c15399211","modified":1756968247243},{"_id":"themes/next/README.md","hash":"fe1761cb3eab07a1742296c5976c30f2346073b7","modified":1756968247242},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1756968247243},{"_id":"themes/next/_vendors.yml","hash":"cc947ac76aeef69ee3b4ed4ea33d338d58b9ebab","modified":1756968247243},{"_id":"themes/next/package.json","hash":"a013d59b9368d58001e7fbf979e7fda888e215e9","modified":1756968247275},{"_id":"themes/next/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1756968247276},{"_id":"themes/next/.githooks/install.js","hash":"305c2a269818466eed9e381b866c6cd1ad7f8afd","modified":1756968247234},{"_id":"themes/next/.githooks/pre-commit","hash":"b69b9d0b51e27d5d4c87c3242f5067c2cda26e44","modified":1756968247234},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"2fdca1040427cabfe27cae6754ec5e027ec7092e","modified":1756968247235},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"593ae64e72d43c020a697eac65b1f9c3483ff097","modified":1756968247235},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"009b397b686bba7b63885da59d904144ff59b24e","modified":1756968247237},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1756968247238},{"_id":"themes/next/.github/config.yml","hash":"0956bf71b6f36632b63b14d26580458041a5abd2","modified":1756968247238},{"_id":"themes/next/.github/labeler.yml","hash":"ff76a903609932a867082b8ccced906e9910533a","modified":1756968247238},{"_id":"themes/next/.github/label-commenter-config.yml","hash":"a1aa85a2fc66ff0c52c65bd97b0fa282e297a73f","modified":1756968247238},{"_id":"themes/next/.github/release.yml","hash":"83b4dae3f8d76619e208d2110a247b3ccadd64d8","modified":1756968247239},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1756968247243},{"_id":"themes/next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1756968247245},{"_id":"themes/next/languages/zh-CN.yml","hash":"8c2166c891f136529ae2aa09412bdcdc2ce3acba","modified":1757484328096},{"_id":"themes/next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1756968247245},{"_id":"themes/next/layout/_layout.njk","hash":"c2590e09f572f425eba8ff29f1d13306881af242","modified":1756968247248},{"_id":"themes/next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1756968247274},{"_id":"themes/next/layout/category.njk","hash":"82f541452cae76a94ee15cb8d8a888f44260a0fd","modified":1756968247274},{"_id":"themes/next/layout/index.njk","hash":"fa52c3049871e879980cb6abccdea3792ca4ce70","modified":1756968247274},{"_id":"themes/next/layout/page.njk","hash":"6d2f7e7cd9fe868e96765b82d17df49081379e27","modified":1756968247274},{"_id":"themes/next/layout/post.njk","hash":"6767de9702a07a2a4e16a8a6bc9c5919536c1e3f","modified":1756968247275},{"_id":"themes/next/layout/tag.njk","hash":"b6c017d30d08ddd30d66e9c6f3a71aa65d214eac","modified":1756968247275},{"_id":"themes/next/source/ads.txt","hash":"0f78c8f5f03678ecea6a78eb3a455c6e365b6eb0","modified":1756968247289},{"_id":"themes/next/source/baidu_verify_codeva-Sqhqqo5bXf.html","hash":"c4bed9075ffcf4dcdd0976b1d7fb20ed3c757dcd","modified":1756968247289},{"_id":"themes/next/source/robots.txt","hash":"bb167fc8604213337b7474f316e67957fcd0ff46","modified":1756968247347},{"_id":"themes/next/test/index.js","hash":"983a505399796b9d9e174ba46d89abbdde38f8ee","modified":1756968247348},{"_id":"themes/next/.github/ISSUE_TEMPLATE/config.yml","hash":"daeedc5da2ee74ac31cf71846b766ca6499e9fc6","modified":1756968247236},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.yml","hash":"3f19cbf0c2b2fee6bf3788870b842c9ccc1425ca","modified":1756968247236},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.yml","hash":"fbc3062cd4591c8329fab9db72803746f0d11920","modified":1756968247237},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.yml","hash":"10eca518b91a19984f6a5a912d41222042f61d63","modified":1756968247237},{"_id":"themes/next/.github/workflows/label-commenter.yml","hash":"b87ffaf40820461159c891d0d41c87e00e312ff3","modified":1756968247239},{"_id":"themes/next/.github/workflows/labeler.yml","hash":"bfea9b04e3ea7da31a2095277c4c23ae6bd14baa","modified":1756968247240},{"_id":"themes/next/.github/workflows/linter.yml","hash":"74ecdd99cc20a8f5103579210353de33536aa45c","modified":1756968247240},{"_id":"themes/next/.github/workflows/codeql.yml","hash":"1e4e4a7ea522b76d6fc5947ddd07260f9fecbcf4","modified":1756968247239},{"_id":"themes/next/.github/workflows/lock.yml","hash":"ea346568ab811fea4dacc69081af2d6177b5aafb","modified":1756968247241},{"_id":"themes/next/.github/workflows/pr-reminder.yml","hash":"7d9f270dda6b28688b68118d9001ceaa4991d965","modified":1756968247241},{"_id":"themes/next/.github/workflows/tester.yml","hash":"dda18899fe62652c633f60c300a93df18f58862f","modified":1756968247241},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7befb4325b107dd668d9eae3d7e86a34910ce3f2","modified":1756968247246},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a09ceb82b45dd8b7da76c227f3d0bb7eebe7d5d1","modified":1756968247246},{"_id":"themes/next/docs/zh-CN/README.md","hash":"5500b0c6db58bf2e93e8ace98ae8da65de7e8318","modified":1756968247247},{"_id":"themes/next/docs/ru/README.md","hash":"caf25da442d08b3d0a4e4503c6f4d6b68b1ac2f2","modified":1756968247246},{"_id":"themes/next/layout/_macro/post.njk","hash":"fefa9d5f56607dbcbfd9b8d57b3f32c07167d847","modified":1756968247249},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"b9fc0a6b02f0380de939d1ea2a7c7d2e6be9f462","modified":1756968247249},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"d9d8e6d7a6a8c80009dd5334cc17fd3e4977a008","modified":1756968247248},{"_id":"themes/next/layout/_partials/comments.njk","hash":"60f4620dd479da6d86d1d493440e9e2a28b6e132","modified":1756968247250},{"_id":"themes/next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1756968247253},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"c55167bc0dbe7e104d4f4d782e98fcabc7e07a35","modified":1756968247255},{"_id":"themes/next/layout/_partials/footer.njk","hash":"c57feb10d5fbfbe5225ffef6927a72ca74395a4a","modified":1756968247250},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"9471c4f3aeee101b9b9a8c2aae7d21ec7277574e","modified":1756968247260},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"53ad3c31762b74e5d29787b37d5e494cc4fded9b","modified":1756968247268},{"_id":"themes/next/layout/_third-party/index.njk","hash":"489d0cd36c75555fafa9551cf58ff35cb75a91f4","modified":1756968247269},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"13b2a77b4858a127f458ea092b6f713b052befac","modified":1756968247270},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1756968247270},{"_id":"themes/next/layout/_scripts/index.njk","hash":"4eb65641b47ea9b23ed2ddfd69b18f21d7d8f214","modified":1756968247260},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"0a1470440f11362df2b1cd6b6228e273d9f999d6","modified":1756968247260},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"8618f3976d74246b40edadb177e0a5b8a84a88a4","modified":1756968247326},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1756968247327},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"46bfd23362c80779299705e9e8ffbd6bbc0f4c2d","modified":1756968247328},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"fa85c583ae4315f394ec84eed6e4cd953aa00c77","modified":1756968247328},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1756968247329},{"_id":"themes/next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1756968247329},{"_id":"themes/next/source/css/_colors.styl","hash":"a88430865c99f47ce1d8240f8895819b8b7b0c06","modified":1756968247290},{"_id":"themes/next/source/css/_mixins.styl","hash":"f8cb41a5a280e872fe9d52a3d94b77abe27f7e38","modified":1756968247314},{"_id":"themes/next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1756968247331},{"_id":"themes/next/source/css/noscript.styl","hash":"64b378a4d2f0b36bf666fba13b57c59da3a8ac83","modified":1756968247325},{"_id":"themes/next/source/css/main.styl","hash":"c326550ce8b4deaa9b647bcfe3cdc04c100644e6","modified":1756968247325},{"_id":"themes/next/source/js/bookmark.js","hash":"1457291a7244b7786ec35b949d97183e4fbd181d","modified":1756968247331},{"_id":"themes/next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1756968247332},{"_id":"themes/next/source/js/motion.js","hash":"d4c01d5317d45444e91a52236b751c9e9ab1bc16","modified":1756968247332},{"_id":"themes/next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1756968247332},{"_id":"themes/next/source/js/pjax.js","hash":"88d333c5ee821b2b07558c83c1007929e891e4e0","modified":1756968247333},{"_id":"themes/next/source/js/next-boot.js","hash":"da11083557070d947da48d29d2d60988c8d628e9","modified":1756968247333},{"_id":"themes/next/source/js/schedule.js","hash":"4858233224756e3cadfabd8135f7c4b1e3673b44","modified":1756968247334},{"_id":"themes/next/source/js/utils.js","hash":"e6f6dbf96df5650216dfaa84612af32f21b24ccd","modified":1756968247343},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1756968247282},{"_id":"themes/next/scripts/filters/locals.js","hash":"87f3bff03fa9fd96cf0787a6442464a7ff57f76b","modified":1756968247282},{"_id":"themes/next/scripts/events/index.js","hash":"8ae618d4436dab49928c2bebc0837e5310dbe7de","modified":1756968247276},{"_id":"themes/next/scripts/filters/post.js","hash":"e6cf4c94fc2291215a3345134ddbbc74d5091b00","modified":1756968247283},{"_id":"themes/next/scripts/filters/minify.js","hash":"997fc7153a7055bdf278e93d16a17c2d0bd62b8f","modified":1756968247283},{"_id":"themes/next/scripts/helpers/engine.js","hash":"43568a872a93259fc1c497724a53914474ef83ae","modified":1756968247283},{"_id":"themes/next/scripts/helpers/font.js","hash":"0a6fa582a0890ecaf5f03f758a730936e48aeca1","modified":1756968247284},{"_id":"themes/next/scripts/helpers/navigation.js","hash":"82f6e81bacf23d10cac71b09cff8708e47891ef3","modified":1756968247284},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"ad764d48715c5da87d33f048ad5f1ae8b4e2eb52","modified":1756968247284},{"_id":"themes/next/scripts/helpers/next-paginator.js","hash":"2e8dcc12a52517bb4e00ea611720bcd298624112","modified":1756968247285},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"483d75522e76c7e67c7e0dfd5cac8ab04784a04c","modified":1756968247285},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"52acbc74c1ead8a77cd3bbcba4e033053683f7d0","modified":1756968247285},{"_id":"themes/next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1756968247286},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1756968247286},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1c609312a71d47f838226346aad5c2e1c35f15dd","modified":1756968247287},{"_id":"themes/next/scripts/tags/index.js","hash":"255dd1090e8319b557eeca43571f0e4f8aab013b","modified":1756968247287},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1756968247286},{"_id":"themes/next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1756968247287},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"b3844e168b51a99d495ca05562ffac47677f5728","modified":1756968247288},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1756968247287},{"_id":"themes/next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1756968247288},{"_id":"themes/next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1756968247288},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1756968247289},{"_id":"themes/next/test/helpers/font.js","hash":"6f5076bd3f2724e47b46ca69028393a9b6275cd1","modified":1756968247347},{"_id":"themes/next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1756968247289},{"_id":"themes/next/test/helpers/index.js","hash":"2fb58dca3df2fe53116ee2b1232fa26ebe7b2ce5","modified":1756968247348},{"_id":"themes/next/test/helpers/next-url.js","hash":"08e84781f1cd54e5634b86877ad9cefae4a78e95","modified":1756968247348},{"_id":"themes/next/test/tags/button.js","hash":"a50ca44eaec3d91c2958e3157d624cd3e68828c7","modified":1756968247349},{"_id":"themes/next/test/tags/center-quote.js","hash":"2ac4b5a358681691a17e736de06fce0b640a7023","modified":1756968247349},{"_id":"themes/next/test/tags/caniuse.js","hash":"2852be850d9103c25114253a45e6c62e32517de4","modified":1756968247349},{"_id":"themes/next/test/tags/group-pictures.js","hash":"8f66d3c6f03fb11d85aa2ab05c9b3c9aa2b4e994","modified":1756968247349},{"_id":"themes/next/test/tags/index.js","hash":"5cad001936a694bf32d59751cc2b68a66199f976","modified":1756968247350},{"_id":"themes/next/test/tags/label.js","hash":"6cad7d84c42511459a89cda3971e8ea5cdee0125","modified":1756968247350},{"_id":"themes/next/test/tags/link-grid.js","hash":"41730266306c02362258384cd73659223928361f","modified":1756968247351},{"_id":"themes/next/test/tags/mermaid.js","hash":"f718a3d0e303d842e2ca5a3b162539a49e45a520","modified":1756968247351},{"_id":"themes/next/test/tags/note.js","hash":"161a81ce749e239d2403681372d48ecc1b51d7b9","modified":1756968247351},{"_id":"themes/next/test/tags/pdf.js","hash":"2d114596a8a180b2f3cd2a9c6528a328961f12d4","modified":1756968247351},{"_id":"themes/next/test/tags/tabs.js","hash":"b19d2592347eae5d6a7a97ca7e8cec03e8f25b51","modified":1756968247352},{"_id":"themes/next/test/tags/video.js","hash":"88db9a3a26cd35525c43c0339fcd1c5965ec9518","modified":1756968247352},{"_id":"themes/next/test/validate/index.js","hash":"560862194991c5963da5a411629d8e6c71d20ee2","modified":1756968247353},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"12f457cedaa77323283d054d1b72fca462172a87","modified":1756968247251},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"fd75652957c1c3668874fdfd16f4f56027be0d8b","modified":1756968247250},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"1b2ae17f3c394ce310fe2d9ed5f4d07d8cc74ae7","modified":1756968247251},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"7bf2b6ab499775355bbf8f3ae597ff7bc00e89e4","modified":1756968247251},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"828700af2a2f273d3e3e0554ffc60706d889d539","modified":1756968247252},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"20cb9c39bcdcfa3f710df7bc5838d6e62d4dd674","modified":1756968247252},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"62513f08e9e7f4abeaeedca91fd0af0861a2540f","modified":1756968247252},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"1fe44a1e156cd30e3e9fd8313e1011ad30970f83","modified":1756968247253},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1756968247254},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"6ec9c97e91c793cc2eb5ac0f7c3c36fdaaf637d1","modified":1756968247255},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1756968247254},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1756968247255},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"9766852e72c1809d8c1eea71ac6116b4cc0886d2","modified":1756968247259},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"93fbb449fbd599cb4315d7eb0daeb239811b233f","modified":1756968247258},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"f73d25a8ccfdd5d4ca2953dc434ff8ce36034c57","modified":1756968247259},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"0ebc0142abebbeef4278e32abb543c7d7fa75d88","modified":1756968247255},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"ebe45ab38ace03ea74eed3f676ec1cb5805a3c8a","modified":1756968247255},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"9a9c4fb7e7c4fe4b7d474bdfdb4ed2b0a5423df2","modified":1756968247257},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"9a7eda45ad0753d5f624c51a56e00277ba97c93d","modified":1756968247257},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"84d0f376105ba84abc5ddd1196cc636d1e1ae86e","modified":1756968247257},{"_id":"themes/next/layout/_partials/post/post-share.njk","hash":"d251532b76d4b44e84732f78e774b18e2415d7d9","modified":1756968247258},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"3de5c9676aaf6a2f7d837db275c56d15f9b74fb8","modified":1756968247259},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1756968247261},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"17173c45f0b740669ef45aaae1fe96eeb0a0ff52","modified":1756968247262},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1756968247262},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1756968247263},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"81abcf790cf97395cde9e3cd6d5d1aa5656bd134","modified":1756968247263},{"_id":"themes/next/layout/_third-party/analytics/matomo.njk","hash":"43238bc1bc2e88d707f8097814ef3ff830cbe641","modified":1756968247263},{"_id":"themes/next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"24719266662fcff63e88a21ee9b5b284abb8b37c","modified":1756968247264},{"_id":"themes/next/layout/_third-party/analytics/plausible.njk","hash":"64ed6fecae79f9f9c61e956d2bd077792473e069","modified":1756968247264},{"_id":"themes/next/layout/_third-party/analytics/umami.njk","hash":"724a58f5296ab4a12910c81f2e619e607b2b21a6","modified":1756968247264},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1756968247265},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1756968247266},{"_id":"themes/next/layout/_third-party/chat/gitter.njk","hash":"375a86f0b19e130cfa7707007e3a53d9ae7c9b64","modified":1756968247265},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1756968247266},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1756968247265},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1756968247266},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1756968247267},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1756968247267},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1756968247267},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1756968247268},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1756968247269},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"1df65b1390add93b86ae3f9423d96a130b0ece04","modified":1756968247270},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1756968247270},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"67f67a77f27103177b9940446f43610229536d82","modified":1756968247271},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1756968247273},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"210c32b654adae3d8076c4417d370b42af258cea","modified":1756968247271},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1756968247273},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"d97790e4b442a1e3ded7d7b4f84b8ee6cdb6e8ea","modified":1756968247272},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1756968247272},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1756968247273},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1756968247272},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1756968247323},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5092cacdfbc482996d0bee9fdf2c37d8d3ae863c","modified":1756968247323},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"d3a8f6e71c86926d0c2a247a31d7446d829736d5","modified":1756968247324},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"77d9c468897283223cdc922eb7e146ca7a83420c","modified":1756968247324},{"_id":"themes/next/source/css/_variables/base.styl","hash":"5d23140d14f2f5694a3a15f3b3def3b75022502f","modified":1756968247324},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"8a847a7bbdbc0086dd1de12b82107a854b43f5e5","modified":1756968247340},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ebee77b2307bf4b260afb06c060171ef42b7141","modified":1756968247341},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"5b0197e061f57e00875be3636ba372a67693abe0","modified":1756968247341},{"_id":"themes/next/source/js/schemes/muse.js","hash":"9ea371e8b8ed950344bf8945c710355b0914f361","modified":1756968247334},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","hash":"da243fc43315d5953438dab71eb59dc3961c33e3","modified":1756968247345},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"62ff1ba692f3153d0288c514c42c6c92cc17e9b6","modified":1756968247345},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1756968247345},{"_id":"themes/next/scripts/events/lib/config.js","hash":"7c29184a37222d6499c5220264fda6942afc03a9","modified":1756968247277},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"00cec6980cafd417def885f496371856cd524a25","modified":1756968247277},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1756968247277},{"_id":"themes/next/scripts/events/lib/navigation.js","hash":"0a2df7d40d64c61ce7e730bb8269b848b03526d1","modified":1756968247277},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"a96050b0a9bcb49f1f6897660efc77991024790a","modified":1756968247278},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"65825c37e473c942095df05183424003d7263df5","modified":1756968247278},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"550cc7f57bc3ab3d093e34741e7860222851d4d4","modified":1756968247279},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"761760031e49edb77277bd4a8582774959240d6b","modified":1756968247279},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1756968247280},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1756968247280},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"4dbe9652ae53a181c86eb7e9005a5255f0540055","modified":1756968247280},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1756968247281},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1756968247281},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1756968247282},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1756968247282},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"7782dfae7a0f8cd61b936fa8ac980440a7bbd3bb","modified":1756968247303},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"969c3797d4315a2873aa143d0674d251fa0c5703","modified":1756968247291},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"2db4462e9cb87b8aef3f50f850fed407de16da3e","modified":1756968247303},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"49c3063b46d65796003a822deed971abee41675e","modified":1756968247291},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"f3defd56be33dba4866a695396d96c767ce63182","modified":1756968247298},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e728caca94567b4d4215402d01e449e23969e7e1","modified":1756968247314},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"1239f1b432a6932b2bb9ebcfbaabf724b8f4e59a","modified":1756968247307},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1756968247307},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1756968247308},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1756968247307},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1756968247310},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"fd4a2d2303f107a021837aa6e3d977c2f9d14c42","modified":1756968247310},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1756968247310},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"aa34abe71ad476922a0371bcac82cd8e5b45d383","modified":1756968247314},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"2db5ada757f7ffb9a36b06400cf30d80ec039b6e","modified":1756968247315},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"a28f0858a0f4c3aac5496c693893696d5ac12372","modified":1756968247315},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"82311a531e26ca5a6ad17cf14959da75d4ac6106","modified":1756968247315},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"68f8d30071516913a7a958e01d010e8a93f7aa24","modified":1756968247317},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1756968247317},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"8ece7c8d3f95b7db3588465faff66adeff4d406e","modified":1756968247317},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8edf8fc4bc4a3913822fa4f8cf5abf3bcf011f56","modified":1756968247317},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"888eb961c844a2e9aebc03ab777c6994de7c8948","modified":1756968247318},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"ec5d4e8ffe74722a092a69ace2f8dec7776466a8","modified":1756968247318},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1756968247319},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1756968247319},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"6630a642ad2311ec09466c962963c006c4df4c38","modified":1756968247319},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"507179f9d5648089e3b4da0e17cca74acc20e38a","modified":1756968247320},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1d29eca70fa686d895f8e98a283e4a159e40905a","modified":1756968247320},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1756968247321},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e06e0fd44e39838ce22ac7829a2421f8c9e1b12d","modified":1756968247320},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1756968247321},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1756968247336},{"_id":"themes/next/source/js/third-party/chat/gitter.js","hash":"14b024c920a8b359777d79dd8e1a849387f8f3ad","modified":1756968247337},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1756968247337},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1756968247335},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"d77d4934d959e7125128754b568f1d041c3fbfff","modified":1756968247335},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1756968247336},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","hash":"f24604710002234f18a7b5cfe9ccdf3ed6e725a8","modified":1756968247336},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"b4cb06fdf531292e2361398a98d75a4ca2b8473a","modified":1756968247337},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"07e0038b221b9a4fd8ccac75093de3dee1f8315e","modified":1756968247337},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1756968247338},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"5673d28509a8e837a512da490a88b7bf5162fc49","modified":1756968247338},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1756968247338},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1756968247339},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1756968247339},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1756968247340},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"d93556184b2c0aa1dbc4a6fb892d2f77b80d7d9f","modified":1756968247341},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"e927000b375e79e2d173bdc6b8b45e67364fad4a","modified":1756968247342},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"e6361ed3d5fa959e11e90f7dab8fdaff398b4425","modified":1756968247342},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"ce12b5007c9aa997738641c06a1c081c357e27bd","modified":1756968247342},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"e9fffe2a14751e86aed5e84a5e96514413eac2dc","modified":1756968247343},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1756968247343},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"7db3233f0b33870943ce1547326a67f9e628b411","modified":1756968247343},{"_id":"themes/next/source/lib/canvas-ribbon/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1756968247344},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"ad3bda94b36272d1ef0238b4563b5540019eca1c","modified":1756968247300},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"038625515ba4760e4dda6792549bddc0db5a3d20","modified":1756968247301},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"c8648c8ea3105556be0068d9fb2735261d0d94bc","modified":1756968247301},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"05af22f3edc2383a3d97ec4c05e9ac43b014bead","modified":1756968247301},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"dce8ea62d7d7b08a0444fbb2f617be30bfcfc152","modified":1756968247302},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"06d551ef6e26d426bb3ffb4638714488c7cbce66","modified":1756968247302},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1756968247302},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"bdfef8d2363bc199dfbcc23ee833edca27cc9fcf","modified":1756968247304},{"_id":"themes/next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b3689beb90cda64cafecaf6b25981fe8a9525992","modified":1756968247304},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2c2bfbc34b6f19d262ae7c041474985e12f4f4ad","modified":1756968247304},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1756968247305},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"f8a97aad14e0b16b555ee0048da5402f818f9693","modified":1756968247305},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"63d8f5f169c2b1c969928fc79244c5fe89ee484e","modified":1756968247305},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f8cbf47ee2a35565cb35969af52487758b982740","modified":1756968247305},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"509bad7d1d6b5c6f24a3f205b2ed7b65a2326dd4","modified":1756968247306},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"081345490271840855d1238b969dbf2e0a2bba8f","modified":1756968247306},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2de038def2cb91da143b14696366c14a66e0e569","modified":1756968247306},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"aa04527f76de7646573ea327d4f6145200d6070d","modified":1756968247295},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"268e0a4cf638b9ce4db07268031ab34c5f31ac65","modified":1756968247295},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"7245d8364092c2d184e658e801ba94815a2a1f81","modified":1756968247296},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"eebe3013a9a976011570dce2d04dfeae4c31d790","modified":1756968247295},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"4790d37a40b80f7278ec55274f017dad21791038","modified":1756968247296},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1756968247296},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"4d29b6ae7ed3dc44b10df851a4128b6441efa8be","modified":1756968247297},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"777efaacbabb623f1d77fac5dd784401f8dea4cd","modified":1756968247297},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"65dde3ba925ac19b0bfcb7fa70cf4157bec02576","modified":1756968247297},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1756968247297},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1756968247291},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"80595d274f593b321c0b644a06f3165fe07b16f5","modified":1756968247291},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1756968247292},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1756968247293},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1756968247293},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"047bf8176ea24e277b1a4f6e6ad599033f1d1a44","modified":1756968247308},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"a3ea8e3d2347f417ec163d191c9d7c1e9d606c1e","modified":1756968247308},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"6b3680e0dbea8e14c1cec24ef63b7fae5e37f7ef","modified":1756968247311},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1756968247311},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"e22fde6f1657d311d46f64d868c4491d535c8caa","modified":1756968247311},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1756968247312},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"c7754dc6c866928b538f0863a05b96ec44b5e986","modified":1756968247312},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7075dd32dd70da1e161e4bd14b46f1e8be62fa3c","modified":1756968247312},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"3324e9d09faf3903bc9815358bda4000bbb691fa","modified":1756968247313},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"77122986509a6b4968bae2729417b7016137534c","modified":1756968247313},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f71b2022094c5bc8c74b4ed049639f7262e0b182","modified":1756968247313},{"_id":"themes/next/source/css/_common/components/third-party/disqusjs.styl","hash":"a2ffaa06c963514a79fda52665e707af6e8e2f5e","modified":1756968247298},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"406c03be3cf8a8411227bc1fecf942ca368f7e2a","modified":1756968247298},{"_id":"themes/next/source/css/_common/components/third-party/gitter.styl","hash":"7b36f776c41fbb744572c5de2c8d49b35656ec21","modified":1756968247299},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"08d609b0534b9a5151cab7e6d54c0dec6a8dad8c","modified":1756968247299},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"1e5776ad4c5c8bcf7596ac74dcabc30704b3f5a0","modified":1756968247299},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"49c26184580fde8a732899a4de5aae8662e289b8","modified":1756968247300},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"d28856f365a9373c4ae6fe1e5673d63df2dfd65f","modified":1756968247300},{"_id":"themes/next/source/images/alipay.jpg","hash":"ea7bfbeb29a4f7e4541582e43694c725c5fd46db","modified":1757484187420},{"_id":"themes/next/source/images/binance.jpg","hash":"6f5592e098d1ac6cfb058d62089ce48f479366f1","modified":1757484228254},{"_id":"themes/next/source/images/wechat_channel.jpg","hash":"b1a3d877dbd0ccb7d344387c11ec826ee34b7eed","modified":1757484389631},{"_id":"themes/next/source/images/wechatpay.png","hash":"5c2abd7218bcf33981d99669c6f96789a2850c19","modified":1757484208036},{"_id":"public/search.xml","hash":"e5186431d250cac114deaded93433bc87db6b705","modified":1757484439350},{"_id":"public/baidusitemap.xml","hash":"1515d9d9a1546c012358dd2bec49a672c1e67c2f","modified":1757484439350},{"_id":"public/sitemap.xml","hash":"a319523d4ca73df630f2290f518650247c658216","modified":1757484439350},{"_id":"public/记录一次分析-服务器SSD报故障随后自行恢复正常现象.html","hash":"e25cdc735d8eef8e1f81e1470349c0356e7a85f6","modified":1757484439350},{"_id":"public/关于DELL-PowerEdge报错Correctable-memory-error-logging-disabled-for-a-memory-device的说明.html","hash":"a9058c8847e1f287c72896009d60a64e05432c42","modified":1757484439350},{"_id":"public/DELL报错The-PERC1-battery-is-low.html","hash":"bb442f0cb821c3400020ca51887d6f25d9d25343","modified":1757484439350},{"_id":"public/Python实现自动将GFWList规则转换为Clash规则.html","hash":"0da372500dcf255fac00964cf9a27ef265961251","modified":1757484439350},{"_id":"public/cpp编写fio测试工具，我在发疯.html","hash":"6021f7a5302a9af65ead91db9f0cd41f9b1ce267","modified":1757484439350},{"_id":"public/关于磁盘残留lvm的解决办法.html","hash":"d40f05f164fbaaa2302e1a5df25212fcc927815f","modified":1757484439350},{"_id":"public/异地组网加Nginx反代实现计算资源本地化.html","hash":"1cc4bd649c10ed9447f782cf1be77cdc9febd6cf","modified":1757484439350},{"_id":"public/直接编写crontab使用一行命令完成Proxmox-VE所有虚拟机的安全关机.html","hash":"546574ac44568a498fa904f6057610c205ba2033","modified":1757484439350},{"_id":"public/如何搭建具有GPGkey验证的可信任apt源.html","hash":"1d47350a92636efa7371dcf678f424563b86a33a","modified":1757484439350},{"_id":"public/记录Proxmox-VE虚拟机网卡的一次坑.html","hash":"4528a4c00bdc3f3c7effeab1982f2e0c0f411221","modified":1757484439350},{"_id":"public/记录一下我的Debian配置v2ray-config-json.html","hash":"5e33a76643ffe9ddfe2b31fe8416d802c5fbf05b","modified":1757484439350},{"_id":"public/Debian安装教程.html","hash":"dc3a9fbf24f9627a8ac99e165eada04b476fd2e9","modified":1757484439350},{"_id":"public/Ubuntu安装教程.html","hash":"691a1c744af8d42a404102ba448706ec5392badb","modified":1757484439350},{"_id":"public/IT基础知识百科.html","hash":"4d4e6f41ce3ffddb5f2155bbbae148b46f615fee","modified":1757484439350},{"_id":"public/相片硅脂片知识.html","hash":"91947d987a76211cded33c8d42e3760154d098bc","modified":1757484439350},{"_id":"public/未整理的随手技术笔记（实时更新，各种乱七八糟的技术都会记录在这儿）.html","hash":"eced3ade459d35174bdb7f222dd09a18319f216f","modified":1757484439350},{"_id":"public/Linux查询ssh日志判断是否被入侵及加强ssh安全的办法.html","hash":"dfd8d25e268d1ad499e9d06cb0db3f44e8f87d9e","modified":1757484439350},{"_id":"public/apt等各种源列表（持续更新）.html","hash":"6f163fc56922c31538e7d114273b8b19f9fc159d","modified":1757484439350},{"_id":"public/Proxmox-VE批量加集群、批量克隆、批量设置并同步时间、批量清除集群残留、批量创建网卡等一站式解决方案！（本教程采用YgeCloud实测）.html","hash":"4add9ba52f59b70968d9cf904fbaa0f3819fe703","modified":1757484439350},{"_id":"public/本站上线私有apt源仓库及自制实用deb包.html","hash":"80f13fbd089cd7f6ed15367d876971bb359fb1fc","modified":1757484439350},{"_id":"public/将二进制可执行程序构建为deb包.html","hash":"2965518b6a262e288f34cdc1f7ffdad5ba9e0a5a","modified":1757484439350},{"_id":"public/51单片机入门-点亮LED.html","hash":"c0df9cc7ccb4c609f597da87d004abdd20b1dd2c","modified":1757484439350},{"_id":"public/记录一次构建armv8平台vsftpd-Docker镜像的过程.html","hash":"2bfac3fe0a044e1e39a33195fcd446770a6adb7f","modified":1757484439350},{"_id":"public/Debian-x86-64平台搭建arm-docker环境.html","hash":"2c096ccc6a895fca2604652a52e605d7c6c86db6","modified":1757484439350},{"_id":"public/飞腾arm平台使用docker部署ftp教程.html","hash":"21813c8323fe4cb0a587da6ccc25be356e524b07","modified":1757484439350},{"_id":"public/记录初学Python开发fio测试工具.html","hash":"e0ccdc665c9b7f4e7f09263a96aae6dd7a257ff5","modified":1757484439350},{"_id":"public/Debian基础知识【持续更新】.html","hash":"2fed3cd736cf74fbe65053e52a1eacbb00038f73","modified":1757484439350},{"_id":"public/关于Proxmox-VE系统创建UEFI虚拟机需要单独添加EFI磁盘的问题.html","hash":"a17cede18e8c7f464c2d861982c4af93d7c448fe","modified":1757484439350},{"_id":"public/Proxmox-VE-导入SylixOS-VMware版.html","hash":"9867086a19e182b862a734848c05e005f1b32dee","modified":1757484439350},{"_id":"public/51单片机的学习笔记.html","hash":"670199e1e6103aed2c432462a618238ef1de1fdd","modified":1757484439350},{"_id":"public/Linux技巧【随时更新】.html","hash":"a6d0d0b47f5ba652ce716913afb0b0f61c64c014","modified":1757484439350},{"_id":"public/vscode编写markdown的插件推荐.html","hash":"f63fb4319376f5045b1f395c810731c55db2f4a9","modified":1757484439350},{"_id":"public/categories/知识库/index.html","hash":"03cf0e7e4081706f5a750f5e8288be010f7165fa","modified":1757484439350},{"_id":"public/categories/知识库/page/2/index.html","hash":"f5ceefb6e253f2029ee4b4b386374f1de1493773","modified":1757484439350},{"_id":"public/categories/知识库/page/3/index.html","hash":"840b159ce26317b2b451776a49aa1a09e7560437","modified":1757484439350},{"_id":"public/categories/知识库/page/4/index.html","hash":"3a27b27a4ac925a5134aab6380b849e8cac755a2","modified":1757484439350},{"_id":"public/categories/伟大的知识库/index.html","hash":"ef0c4b340aff6c30d62b4fffe710d647f99389b1","modified":1757484439350},{"_id":"public/categories/资源/index.html","hash":"1de210c63720b9cf47196ab28979dfcec5931164","modified":1757484439350},{"_id":"public/categories/软件开发/index.html","hash":"83f90c4903c3d82d8595fb316d0d6fc1edc14dee","modified":1757484439350},{"_id":"public/archives/index.html","hash":"324752f351b45f7d4c4a1a8d607c9e9ced469c1e","modified":1757484439350},{"_id":"public/archives/page/2/index.html","hash":"3f754b8ddd3a757b1a27e741f12831671edb6a67","modified":1757484439350},{"_id":"public/archives/page/3/index.html","hash":"f5285767f8948279876df8cd7e3c5ca9f895a622","modified":1757484439350},{"_id":"public/archives/page/4/index.html","hash":"9f74197bf857fe755e0141fbbfabb482cf5ad1d2","modified":1757484439350},{"_id":"public/archives/2022/index.html","hash":"ef9d8c70a0663161b059e1da29320df246f10259","modified":1757484439350},{"_id":"public/archives/2022/10/index.html","hash":"5a926dcf6448293bfdd2cc35a700bd5a9444961e","modified":1757484439350},{"_id":"public/archives/2022/11/index.html","hash":"ba05ed8dd3dc872495da85b8fe11d85d2193f5f6","modified":1757484439350},{"_id":"public/archives/2023/index.html","hash":"03c37e083f166914decd1071262cad4d990fc882","modified":1757484439350},{"_id":"public/archives/2023/01/index.html","hash":"a24d4f02195877ac0b7a613f4f51fc029b7a4a9e","modified":1757484439350},{"_id":"public/archives/2023/02/index.html","hash":"50557de21cc579ba9f3755484d94ca4187447fa9","modified":1757484439350},{"_id":"public/archives/2023/03/index.html","hash":"cc6633b0976ce851eacbf274d1616e9c316fc23e","modified":1757484439350},{"_id":"public/archives/2023/09/index.html","hash":"faefd329d95727303bfe210573ddd77f75448308","modified":1757484439350},{"_id":"public/archives/2023/10/index.html","hash":"917e339b5dc6d1939984ea5623146f5c659a513d","modified":1757484439350},{"_id":"public/archives/2024/index.html","hash":"4291c7f91d48d34b16bf6f26e1caa13df0246dce","modified":1757484439350},{"_id":"public/archives/2024/page/2/index.html","hash":"fbdcb5e10594433af566deb9f7c33af9e789e6c5","modified":1757484439350},{"_id":"public/archives/2024/01/index.html","hash":"389f0180562a7b2dffb228c66759c7814fef5040","modified":1757484439350},{"_id":"public/archives/2024/02/index.html","hash":"927d4734cba1caae0c2229f3bbbd8d9e99f0e34e","modified":1757484439350},{"_id":"public/archives/2024/03/index.html","hash":"0baea8309f6c1a52dfd6265a0d7c1b8308724189","modified":1757484439350},{"_id":"public/archives/2024/04/index.html","hash":"deaadfad4160a2b3524426e1b9db15bcec50f631","modified":1757484439350},{"_id":"public/archives/2024/05/index.html","hash":"467cc3a7c39479dbc1bc80d59c1a8b960305526e","modified":1757484439350},{"_id":"public/archives/2024/06/index.html","hash":"7d2cc7b310d78a489d3e457aa1a1aac2a76f0223","modified":1757484439350},{"_id":"public/archives/2024/09/index.html","hash":"c3da74c14101659095b94f2c2a3ea103e53f1025","modified":1757484439350},{"_id":"public/archives/2024/11/index.html","hash":"697017d97a2947f28fc2b50b0364533bd1dad738","modified":1757484439350},{"_id":"public/archives/2025/index.html","hash":"91c6936f6ab9a9a3b9ac7d6d2aa291bbcca8cf0a","modified":1757484439350},{"_id":"public/archives/2025/02/index.html","hash":"060554f9447ee4563fd16b6c59864f904f0aa77e","modified":1757484439350},{"_id":"public/archives/2025/03/index.html","hash":"1f4547c8ed8958849da55cb69a7b9e2a71aff216","modified":1757484439350},{"_id":"public/archives/2025/09/index.html","hash":"6dbd889efdf18787c7cad74301e8c12cc522d9fd","modified":1757484439350},{"_id":"public/tags/嵌入式开发/index.html","hash":"22554481540a355fbb17aabb4ea9edf00e54ef08","modified":1757484439350},{"_id":"public/tags/DELL/index.html","hash":"fd2abfffcffe13351bacb28faa40f99e6381411a","modified":1757484439350},{"_id":"public/tags/PERC/index.html","hash":"07fd9d33755daf3b68ebdd0d80aa8f5eccc48e3b","modified":1757484439350},{"_id":"public/tags/IT知识/index.html","hash":"2fac82822c0c97d6d783f7de48cbd91beaf8c622","modified":1757484439350},{"_id":"public/tags/百科/index.html","hash":"ea58b05e858a0ebc1e742b27cf29cd0f0c756dc5","modified":1757484439350},{"_id":"public/tags/BBU/index.html","hash":"66a41cd2b77dbfbbe2f5fe6fc571fc4dc6a789ba","modified":1757484439350},{"_id":"public/tags/阵列卡/index.html","hash":"20f3819e870913640f8d6d00b350a46e0538c63b","modified":1757484439350},{"_id":"public/tags/Linux/index.html","hash":"33edac9365eb9eb252ae66a7025876f24014d7d1","modified":1757484439350},{"_id":"public/tags/Debian/index.html","hash":"83fd6a33c70e7d20f10acc7167c88ccf16c70047","modified":1757484439350},{"_id":"public/tags/基础/index.html","hash":"112d48e3a556583a869fd83fec7fcc6b3e6cf055","modified":1757484439350},{"_id":"public/tags/Debian安装/index.html","hash":"9176b24e5602fd9c759a630d80d466bfeabe49fd","modified":1757484439350},{"_id":"public/tags/Linux安装/index.html","hash":"f67c23483ab08ff2a8a9d0209c33e11595059a01","modified":1757484439350},{"_id":"public/tags/Debian服务器/index.html","hash":"d7d8e2fc237d3a64a3a437e35ad73343a2205769","modified":1757484439350},{"_id":"public/tags/Docker/index.html","hash":"fc99e65ffa20d2bc830ad1d7d956c8549eaac87a","modified":1757484439350},{"_id":"public/tags/ARM/index.html","hash":"5e9df79f64f29a04faadc92b530a6087243d684d","modified":1757484439350},{"_id":"public/tags/ssh/index.html","hash":"513516c71fe977c98d9a05bb217ac94d4e573d48","modified":1757484439350},{"_id":"public/tags/网络安全/index.html","hash":"6ae443655af7dc2f9996b00af08f780b9be2eaf9","modified":1757484439350},{"_id":"public/tags/ssh爆破/index.html","hash":"a50ca2427e9e80a0f9e28ba6d95560ee050e84e6","modified":1757484439350},{"_id":"public/tags/Proxmox-VE/index.html","hash":"cf70384f91ff54d09e114cd211cfb4fe9c75c287","modified":1757484439350},{"_id":"public/tags/SylixOS/index.html","hash":"b576a92e35b6c05f1e4456532eee2988de67ec73","modified":1757484439350},{"_id":"public/tags/apt源/index.html","hash":"c49c4d9501298af41659cea7cba32a14e631bd0e","modified":1757484439350},{"_id":"public/tags/docker源/index.html","hash":"1edf40d484e3c92c39249781958cfc0aac252df6","modified":1757484439350},{"_id":"public/tags/Python/index.html","hash":"7f42b1e8ffe2e62f2eca6c2044bd22cb9a51833f","modified":1757484439350},{"_id":"public/tags/Clash/index.html","hash":"341cd614d9207e205c8bb15db12176eb79f95c55","modified":1757484439350},{"_id":"public/tags/代理/index.html","hash":"b5b166bf2f235174dbd755fcb3da74cd372cbea7","modified":1757484439350},{"_id":"public/tags/GFWList/index.html","hash":"23b9276b195bf61a07492c5954fa25f80796fe1d","modified":1757484439350},{"_id":"public/tags/GEO/index.html","hash":"3dee3914ad4e7ff50b7a3e90a8e879f4209ef762","modified":1757484439350},{"_id":"public/tags/分流/index.html","hash":"817bb8a1f4fa175bb7f5f65cb800c9231fdcdf99","modified":1757484439350},{"_id":"public/tags/Ubuntu/index.html","hash":"ad123d9f8e3457b03c3d054d00b81f9e34dacbda","modified":1757484439350},{"_id":"public/tags/Ubuntu安装/index.html","hash":"443805e3455ccd6c7115e0a44e9604222971e461","modified":1757484439350},{"_id":"public/tags/Ubuntu服务器/index.html","hash":"5cde109064639d218c259f11fa26b80fe03953cc","modified":1757484439350},{"_id":"public/tags/批量/index.html","hash":"9b4d9a0f7e8dfe3df1973575da40a1271a86c98b","modified":1757484439350},{"_id":"public/tags/C-C-fio-脚本/index.html","hash":"3f344bfc13621457e9d01b304e820dffc17b19b5","modified":1757484439350},{"_id":"public/tags/markdown/index.html","hash":"0beffcd98c5afb3e834dd84b4bda9d6e7682b29d","modified":1757484439350},{"_id":"public/tags/lvm/index.html","hash":"86aec6f88026d578a2f06ec5cb711f7ee8a5a831","modified":1757484439350},{"_id":"public/tags/磁盘/index.html","hash":"231f95c65b1bcc049f4f2d417e5048ba6ba7865e","modified":1757484439350},{"_id":"public/tags/解决办法/index.html","hash":"20b7c607017797e36f73d44706388ceb49a3055f","modified":1757484439350},{"_id":"public/tags/dmsetup/index.html","hash":"86058a95bc8c42490b1fd25ee1f0491af69522dc","modified":1757484439350},{"_id":"public/tags/虚拟机/index.html","hash":"a0a5e9d5210cb816dfc6781aa65f9749ea03772c","modified":1757484439350},{"_id":"public/tags/apt/index.html","hash":"8a53cb8924c49daf0382d224ca170b9013f69a42","modified":1757484439350},{"_id":"public/tags/GPG-key/index.html","hash":"7be99ec8383d0f645300785772fba7c1f9d64273","modified":1757484439350},{"_id":"public/tags/可信任apt源/index.html","hash":"5aa98fda2e7ca341f25cb6fe42937bdf1391cfe4","modified":1757484439350},{"_id":"public/tags/docker/index.html","hash":"dffad4a5c445afae79b4117fbadfe5118e1165d2","modified":1757484439350},{"_id":"public/tags/docker-hub/index.html","hash":"323106b84fe3afdea10dc743d32fe97dd3a7fb06","modified":1757484439350},{"_id":"public/tags/docker-pull/index.html","hash":"a5c5ddeef4e6873b2f0727d5ba1b2bbcba5f2b71","modified":1757484439350},{"_id":"public/tags/docker-代理/index.html","hash":"7880e0e7c52342ecb58face1e1487298c0937e7c","modified":1757484439350},{"_id":"public/tags/deb/index.html","hash":"234d6d0f30244dd3687b2442da8516fa06a5b7c4","modified":1757484439350},{"_id":"public/tags/wireguard/index.html","hash":"d1b2d10501ebfb0da24ff1c23bdc19b989cb11b3","modified":1757484439350},{"_id":"public/tags/局域网/index.html","hash":"b808813f7c7da8a8f225bc31291caff5dcc6f199","modified":1757484439350},{"_id":"public/tags/云计算/index.html","hash":"4500dae3d003c37e2d57cc24b503439497f43837","modified":1757484439350},{"_id":"public/tags/计算资源本地化/index.html","hash":"f2f1b722dd1634060a593747496ba9a0789a6571","modified":1757484439350},{"_id":"public/tags/异地组网/index.html","hash":"a9f50eafd43e9b6c21f6c109bed05cacd19b2928","modified":1757484439350},{"_id":"public/tags/Nginx/index.html","hash":"34f5ba6714de30c50d9006634c4cbf463e11f696","modified":1757484439350},{"_id":"public/tags/反向代理/index.html","hash":"b0a8e60ddaaa4a14ac7590724ac53a45df393edd","modified":1757484439350},{"_id":"public/tags/IT技术/index.html","hash":"746acb8df997b97e10399d5667184a449c474a57","modified":1757484439350},{"_id":"public/tags/知识库/index.html","hash":"2faf022fcc237014bba5f16613553aa0a56856cd","modified":1757484439350},{"_id":"public/tags/随手记/index.html","hash":"116af1ddc74db7a040a4b56943ce22ece1b69c1f","modified":1757484439350},{"_id":"public/tags/NAS/index.html","hash":"a3153be3f982a03d8504785ed9a5d178be95f2db","modified":1757484439350},{"_id":"public/tags/存储/index.html","hash":"60e70fa872763cfcd4445cb2f44c96117d33ff69","modified":1757484439350},{"_id":"public/tags/网络/index.html","hash":"b678e999387d77b1a14182b3249aec1ca3a42341","modified":1757484439350},{"_id":"public/tags/虚拟化/index.html","hash":"a6132632df3cfe3cc4395ba46ac74dd72555bfc3","modified":1757484439350},{"_id":"public/tags/Shell/index.html","hash":"38b5607e9c4fec6176a39cdbede71375d8408b81","modified":1757484439350},{"_id":"public/tags/DDNS/index.html","hash":"723edb847b7734884edf84117c2bf2db5a6a4b1d","modified":1757484439350},{"_id":"public/tags/zfs/index.html","hash":"ed82d7c82082796d9655a769c7ac8b37e91e54fa","modified":1757484439350},{"_id":"public/tags/RAID/index.html","hash":"2f0ae98042cffda7892637cc319f39f85e6222ef","modified":1757484439350},{"_id":"public/tags/磁盘阵列/index.html","hash":"2bfeaffefdf02e1e37bb911ac29c3a931d754d77","modified":1757484439350},{"_id":"public/tags/aptdownloader/index.html","hash":"a97008a343af92826c78f173c4ad6c9e848bf5b7","modified":1757484439350},{"_id":"public/tags/相变/index.html","hash":"4a96cc30a73a44b29f3bf3105ea4a771e1e12791","modified":1757484439350},{"_id":"public/tags/相变硅脂/index.html","hash":"677da88d0915e4a8ece1feee9c40f092a15b343f","modified":1757484439350},{"_id":"public/tags/虚拟网卡/index.html","hash":"92046668615d094c9b0372f7723f9baeb18b9a42","modified":1757484439350},{"_id":"public/tags/qemu/index.html","hash":"9c7f1e04090f764390143663498bd19c9574ddda","modified":1757484439350},{"_id":"public/tags/ECC/index.html","hash":"5d60e3c18f001842b94c3ee80943f4c603169f94","modified":1757484439350},{"_id":"public/tags/内存/index.html","hash":"1c9177ffb0822106b7b9cf0c8aa8c966bc84e0e7","modified":1757484439350},{"_id":"public/tags/iDRAC/index.html","hash":"6bec5e9a1f57ecb7278a0df98aba7f168f993eee","modified":1757484439350},{"_id":"public/tags/debian/index.html","hash":"da78a2aa579ea0b5d895a1d8a6a3028691549333","modified":1757484439350},{"_id":"public/tags/v2ray/index.html","hash":"f4469ff785837e6271900a9176c603155f26ee54","modified":1757484439350},{"_id":"public/tags/v2ray客户端/index.html","hash":"227511f39af3d802ee884f18639e2f3bed8cf254","modified":1757484439350},{"_id":"public/tags/config-json/index.html","hash":"0003eff44b4d4abfb01ad4df246d306b0c4a06bb","modified":1757484439350},{"_id":"public/tags/Inspur/index.html","hash":"4f6d87978e476c582c76eed4830941b8bc1dc163","modified":1757484439350},{"_id":"public/tags/浪潮/index.html","hash":"3e5d66d30d965e9f8ed637650ae4e87a5e6a1740","modified":1757484439350},{"_id":"public/tags/硬盘/index.html","hash":"d895fa1ee37e5e574615c97cd44b250138547967","modified":1757484439350},{"_id":"public/tags/带外/index.html","hash":"5cd9851bab39c86d960907d5dfa5219e2611b751","modified":1757484439350},{"_id":"public/tags/BMC/index.html","hash":"d3e53ff5d0a57108c3217e0b5175ad2eb5e868b8","modified":1757484439350},{"_id":"public/tags/armv8/index.html","hash":"b1bcc8ef852d554db3b06fc4fec19b738e6fee48","modified":1757484439350},{"_id":"public/tags/vsftpd/index.html","hash":"f2183452ef2862a31fae1fa23ac5299c5e1c4d1a","modified":1757484439350},{"_id":"public/tags/python/index.html","hash":"753b524edfb530800ed96f38065c681fdd7323b8","modified":1757484439350},{"_id":"public/tags/nextcloud/index.html","hash":"fe3920a46c4cdd0aadfdafd40a3a0cba2aa02f18","modified":1757484439350},{"_id":"public/tags/docker-compose/index.html","hash":"ccd6524d73bb4d482709bae8242098643ef819d9","modified":1757484439350},{"_id":"public/tags/mariadb/index.html","hash":"e777e664d588de791208c71f9a66a78b503522e6","modified":1757484439350},{"_id":"public/tags/redis/index.html","hash":"a32a6d070c7cad4d82e88f9ea481dddc22f83525","modified":1757484439350},{"_id":"public/index.html","hash":"25d70ab09afb2b439a9bf291d140b0caf6e3a18c","modified":1757484439350},{"_id":"public/page/2/index.html","hash":"a7f1557bdc500636ab8c59de1d99606f6dc385ba","modified":1757484439350},{"_id":"public/page/3/index.html","hash":"ed35354bfcf4b7f6ee04825502dcf99e5bd3275f","modified":1757484439350},{"_id":"public/page/4/index.html","hash":"0e119bdf468091d7c2eca80982cb417635a13ff1","modified":1757484439350},{"_id":"public/记录用docker部署nextcloud及配套mariadb、redis和持久化存储.html","hash":"880e4a101e5852131da739835671aab3ef6552a9","modified":1757484439350},{"_id":"public/国内docker-hub无法使用的解决办法.html","hash":"5b9f344eda8972d4bd58b908da6533dab922645e","modified":1757484439350},{"_id":"public/ads.txt","hash":"0f78c8f5f03678ecea6a78eb3a455c6e365b6eb0","modified":1757484439350},{"_id":"public/robots.txt","hash":"bb167fc8604213337b7474f316e67957fcd0ff46","modified":1757484439350},{"_id":"public/images/apple-touch-icon-next.png","hash":"8618f3976d74246b40edadb177e0a5b8a84a88a4","modified":1757484439350},{"_id":"public/images/favicon-16x16-next.png","hash":"46bfd23362c80779299705e9e8ffbd6bbc0f4c2d","modified":1757484439350},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1757484439350},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1757484439350},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1757484439350},{"_id":"public/images/favicon-32x32-next.png","hash":"fa85c583ae4315f394ec84eed6e4cd953aa00c77","modified":1757484439350},{"_id":"public/lib/canvas-ribbon/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1757484439350},{"_id":"public/css/main.css","hash":"06982fa484ab98f1b5f7153e181b0edfbf8d3d20","modified":1757484439350},{"_id":"public/baidu_verify_codeva-Sqhqqo5bXf.html","hash":"c4bed9075ffcf4dcdd0976b1d7fb20ed3c757dcd","modified":1757484439350},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1757484439350},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1757484439350},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1757484439350},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1757484439350},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1757484439350},{"_id":"public/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1757484439350},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1757484439350},{"_id":"public/js/pjax.js","hash":"90fb7f346f777434ea68ab4e4be1d7b999ad63ac","modified":1757484439350},{"_id":"public/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1757484439350},{"_id":"public/js/utils.js","hash":"af59257e46d25dda62967c35a65e2efcbd90d3bc","modified":1757484439350},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1757484439350},{"_id":"public/images/alipay.jpg","hash":"ea7bfbeb29a4f7e4541582e43694c725c5fd46db","modified":1757484439350},{"_id":"public/images/binance.jpg","hash":"6f5592e098d1ac6cfb058d62089ce48f479366f1","modified":1757484439350},{"_id":"public/images/wechat_channel.jpg","hash":"b1a3d877dbd0ccb7d344387c11ec826ee34b7eed","modified":1757484439350},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1757484439350},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1757484439350},{"_id":"public/lib/canvas-ribbon/README.html","hash":"1b6d10c79836d002d90f4bcf35f498f1bf38c7ee","modified":1757484439350},{"_id":"public/js/schemes/muse.js","hash":"0c490e9ba82efbb8bdf8465e6b537fafd51e1ed7","modified":1757484439350},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1757484439350},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1757484439350},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1757484439350},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1757484439350},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1757484439350},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"65b1a8f12d04b15d7ed6eeb9d11dec760a799c5f","modified":1757484439350},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1757484439350},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1757484439350},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1757484439350},{"_id":"public/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1757484439350},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1757484439350},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1757484439350},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1757484439350},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1757484439350},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1757484439350},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1757484439350},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1757484439350},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1757484439350},{"_id":"public/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1757484439350},{"_id":"public/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1757484439350},{"_id":"public/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1757484439350},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1757484439350},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1757484439350},{"_id":"public/images/wechatpay.png","hash":"5c2abd7218bcf33981d99669c6f96789a2850c19","modified":1757484439350}],"Category":[{"name":"知识库","_id":"cmfdkuwtj00029szwab9h2g13"},{"name":"伟大的知识库","_id":"cmfdkuwtu000z9szw1cmc5216"},{"name":"资源","_id":"cmfdkuwu5001x9szwg3uo7g9t"},{"name":"软件开发","_id":"cmfdkuwu9002j9szw8nqde9qc"}],"Data":[],"Page":[],"Post":[{"title":"51单片机的学习笔记","comments":1,"date":"2022-11-20T18:39:29.000Z","keywords":"51单片机","_content":"\n## 51单片机的学习及其关联知识\n\n<!-- more -->\n\n**开始前的一段话：**\n\n求知欲是人类进步的源泉，每接触一项新的知识就像是一滴墨滴在了宣纸上，向着四周疯狂扩散，这种极度的求知欲深深地刺激着我，撕裂我的思维向四周辐射，贪婪地、疯狂地汲取着接触到的每一项知识，这种知识爆炸的感觉带给我成瘾的快感！\n\n对于单片机的起步，始于我小时候的梦想，我想有高度智能的科技、机械围绕着我的生活，我想拥有一个高度智能的工厂，想要无数无数乃至我甚至不知如何形容的科技，我痴迷着这些技术，我疯狂的汲取各种知识，每一次突破一个新的知识面就像是进入一个未知的宇宙！偶然间，我发现我我的梦想可以从两个两个方面入手：\n\n1. 软件层面的技术：编程，人工智能等\n2. 硬件层面的技术：机械，电路开发等\n\n于是我有了方向，向着我想要的极力冲刺！\n\n我于2022.11.21日凌晨开始了51单片机的学习，从茫然无知，到那一滴墨滴在了宣纸上，围绕着单片机开始的知识爆炸让我无比亢奋！从一块小小的51单片机，知识开始爆炸开来，我从未接触过的领域，芯片，电路，逻辑......无数的知识冲刷着我的大脑，无法抑制的激动，发现未知的知识宇宙，我疯狂的汲取着无穷无尽的知识，感叹着人类智慧的结晶！\n\n越是学习，越是发觉自己的无知，知识是无穷无尽的，我永远不可能学完，真的太多太多了！\n\n人生的价值是集体利益，这些伟大的知识我无论学习多少，若不能将其贡献出来，则是对知识、对智慧、对人类乃至对我人生意义的亵渎！\n\n我将尽可能的将我所学的一切，用通俗易懂的语言描述出来，为同样渴望知识、同样有着疯狂求知欲的人们尽一份绵薄之力！\n\n如果你也有着相同的想法，同样渴望知识并为此痴迷，欢迎加入！\n\n如开头所述，求知欲是人类进步的源泉，所以在此，请允许我以**探索者**尊称各位渴望知识的道友，并欢迎您加入到我们，您可以在本页底部找到我的联系方式，因某些原因，建议您使用Telegram进行交流。\n\n---\n\n**注意：由于我是边学习边完善文章，所以文章可能存在大量错误，我个人的力量有限，恳请各位探索者开放交流、互换知识，以集体的力量弥补个人的缺陷**\n\n---\n\n## 我使用的单片机\n\n品牌：普中(PRECHIN)\n型号：普中51-实验版\n官方教程：[https://www.bilibili.com/video/BV1RB4y1i71i](https://www.bilibili.com/video/BV1RB4y1i71i)\n\n在官方教程中，介绍了该开发板的部分元器件：\n\n|名称|作用|备注|\n|---|---|---|\n|4位一体数码管|数字显示|两个4位一体共阴数码管|\n|LCD1602液晶屏|用于简单内容显示|开发板提供了LCD1602/9648/12864/TFT接口|\n|8*8LED矩阵|常应用于LED广告牌等|在矩阵旁边提供了编号J24的GND/OE/VCC三针引脚，跳线帽短接OE/VCC可以关闭矩阵节省电源（OE我搜索出来的解释为*输出使能控制信号*，还请大佬科普补充一下，谢谢）|\n|LED流水灯|可以用于心形流水灯表白（误）|该开发板提供了8个流水灯|\n|74HC595A芯片|该芯片用于扩展开发板IO口，驱动8\\*8点阵|专业名称*高速 CMOS 8 位串行移位寄存器*其具体资料后续将专门设立电路知识栏目进行解释|\n|4*4键盘|计算器啥的，挺实用|普普通通|\n|红外接受|红外遥控嘛，套餐给了遥控器|NEC解码|\n|DS18B20温度传感器|略|略|\n|NRF24L01扩展接口|该扩展接口可以用于扩展2.4G无线通信模块|相当NICE的远程通信，几百米的遥控器？|\n|ASM1117稳压芯片|提供3.3V稳定电压|如视频中所述，大部分传感器为3.3V，所以嘛...|\n|CH340C芯片|用于USB转TTL通信，该芯片内置晶振|该板设计了4个引脚，分别是UTX->P30，RTX->P31，该设计十分优秀！在需要使用串口调试模块时，可以将U/RTX针脚接到模块对应引脚，直接使用开发板MicroUSB进行调试，大赞！|\n\n## 晶振临时科普栏\n\n因我在学习过程中，对晶振的求知难度较大，特此临时记录！\n晶振，全称石英晶体振荡器，英文名（quartz oscillator）\n石英晶振具有高精度高稳度的特性，十分适合用于数字电路的时钟，是数字电路的心脏！\n\n**时钟这个概念比较抽象，我尝试将其描述的更加朴素一些：**\n\n在计算机中，关和开分别可以代表0和1，在最最原始的逻辑电路中，还没有晶振时，可以通过人工控制开关实现逻辑电路的控制，比如[异或门](https://baike.baidu.com/item/%E5%BC%82%E6%88%96%E9%97%A8/9036416)\n\n|A开关|B开关|计算结果|\n|---|---|---|\n|关|关|0|\n|开|关|1|\n|关|开|1|\n|开|开|0|\n\n于是我们可以通过这种简单逻辑的叠加，做出一些复杂的计算，如加法：x+y\n设定，检测到**A开B关**一次设定x数值增加1，**A关B开**y数值增加1，那么我们要计算3+2，则需要进行一下操作：\n\n|给出X值|给出B值|\n|---|---|\n|A开B关重复3次|A关B开重复2次|\n\n由此可以看出，哪怕是及其简单的逻辑处理，也需要非常庞大的开关操作量。\n因此，懒得一批的人类找到了晶振这玩意儿，[晶振的原理](https://zh.wikipedia.org/zh-cn/%E7%9F%B3%E8%8B%B1%E6%99%B6%E4%BD%93%E8%B0%90%E6%8C%AF%E5%99%A8)解释起来有些许复杂，在此我们只需了解，晶振在电路板中工作的原理即可：\n晶振可以在一定时间内以一定频率发出脉冲，脉冲一词仍有一些难以理解，而有些资料中对此的描述为高低电平的转换，对于一个初学者来说，最讨厌的无非就是看到这些难以理解的名词，在此我将其解释的更加直白一些，不过低电平并不等于0V，低电平只是一个相对较低的电压：\n低电平：0V电压\n高电平：5V电压\n那么脉冲（高低电平转换）在电路中则是，打开开关：低电平（0V=没电）转换为高电平（5V=来电了），于是，就如我们上文所述，这就像是打开了A开关，利用晶振的这种脉冲，我们便可以在一定时间内实现一定次数的自动开关操作。\n如果你仔细阅读并理解了，便会发现这真的是一个十分伟大的发明！从此让人类走上了废物(bushi)的道路，躺平~\n\n**文章亦是我的笔记，先暂时记录到这里，仍在学习总结中**\n","source":"_posts/51单片机的学习笔记.md","raw":"---\ntitle: 51单片机的学习笔记\ncategories: [知识库]\ntags:\n  - 嵌入式开发\ncomments: true\ndate: 2022-11-21 02:39:29\nkeywords: 51单片机\n---\n\n## 51单片机的学习及其关联知识\n\n<!-- more -->\n\n**开始前的一段话：**\n\n求知欲是人类进步的源泉，每接触一项新的知识就像是一滴墨滴在了宣纸上，向着四周疯狂扩散，这种极度的求知欲深深地刺激着我，撕裂我的思维向四周辐射，贪婪地、疯狂地汲取着接触到的每一项知识，这种知识爆炸的感觉带给我成瘾的快感！\n\n对于单片机的起步，始于我小时候的梦想，我想有高度智能的科技、机械围绕着我的生活，我想拥有一个高度智能的工厂，想要无数无数乃至我甚至不知如何形容的科技，我痴迷着这些技术，我疯狂的汲取各种知识，每一次突破一个新的知识面就像是进入一个未知的宇宙！偶然间，我发现我我的梦想可以从两个两个方面入手：\n\n1. 软件层面的技术：编程，人工智能等\n2. 硬件层面的技术：机械，电路开发等\n\n于是我有了方向，向着我想要的极力冲刺！\n\n我于2022.11.21日凌晨开始了51单片机的学习，从茫然无知，到那一滴墨滴在了宣纸上，围绕着单片机开始的知识爆炸让我无比亢奋！从一块小小的51单片机，知识开始爆炸开来，我从未接触过的领域，芯片，电路，逻辑......无数的知识冲刷着我的大脑，无法抑制的激动，发现未知的知识宇宙，我疯狂的汲取着无穷无尽的知识，感叹着人类智慧的结晶！\n\n越是学习，越是发觉自己的无知，知识是无穷无尽的，我永远不可能学完，真的太多太多了！\n\n人生的价值是集体利益，这些伟大的知识我无论学习多少，若不能将其贡献出来，则是对知识、对智慧、对人类乃至对我人生意义的亵渎！\n\n我将尽可能的将我所学的一切，用通俗易懂的语言描述出来，为同样渴望知识、同样有着疯狂求知欲的人们尽一份绵薄之力！\n\n如果你也有着相同的想法，同样渴望知识并为此痴迷，欢迎加入！\n\n如开头所述，求知欲是人类进步的源泉，所以在此，请允许我以**探索者**尊称各位渴望知识的道友，并欢迎您加入到我们，您可以在本页底部找到我的联系方式，因某些原因，建议您使用Telegram进行交流。\n\n---\n\n**注意：由于我是边学习边完善文章，所以文章可能存在大量错误，我个人的力量有限，恳请各位探索者开放交流、互换知识，以集体的力量弥补个人的缺陷**\n\n---\n\n## 我使用的单片机\n\n品牌：普中(PRECHIN)\n型号：普中51-实验版\n官方教程：[https://www.bilibili.com/video/BV1RB4y1i71i](https://www.bilibili.com/video/BV1RB4y1i71i)\n\n在官方教程中，介绍了该开发板的部分元器件：\n\n|名称|作用|备注|\n|---|---|---|\n|4位一体数码管|数字显示|两个4位一体共阴数码管|\n|LCD1602液晶屏|用于简单内容显示|开发板提供了LCD1602/9648/12864/TFT接口|\n|8*8LED矩阵|常应用于LED广告牌等|在矩阵旁边提供了编号J24的GND/OE/VCC三针引脚，跳线帽短接OE/VCC可以关闭矩阵节省电源（OE我搜索出来的解释为*输出使能控制信号*，还请大佬科普补充一下，谢谢）|\n|LED流水灯|可以用于心形流水灯表白（误）|该开发板提供了8个流水灯|\n|74HC595A芯片|该芯片用于扩展开发板IO口，驱动8\\*8点阵|专业名称*高速 CMOS 8 位串行移位寄存器*其具体资料后续将专门设立电路知识栏目进行解释|\n|4*4键盘|计算器啥的，挺实用|普普通通|\n|红外接受|红外遥控嘛，套餐给了遥控器|NEC解码|\n|DS18B20温度传感器|略|略|\n|NRF24L01扩展接口|该扩展接口可以用于扩展2.4G无线通信模块|相当NICE的远程通信，几百米的遥控器？|\n|ASM1117稳压芯片|提供3.3V稳定电压|如视频中所述，大部分传感器为3.3V，所以嘛...|\n|CH340C芯片|用于USB转TTL通信，该芯片内置晶振|该板设计了4个引脚，分别是UTX->P30，RTX->P31，该设计十分优秀！在需要使用串口调试模块时，可以将U/RTX针脚接到模块对应引脚，直接使用开发板MicroUSB进行调试，大赞！|\n\n## 晶振临时科普栏\n\n因我在学习过程中，对晶振的求知难度较大，特此临时记录！\n晶振，全称石英晶体振荡器，英文名（quartz oscillator）\n石英晶振具有高精度高稳度的特性，十分适合用于数字电路的时钟，是数字电路的心脏！\n\n**时钟这个概念比较抽象，我尝试将其描述的更加朴素一些：**\n\n在计算机中，关和开分别可以代表0和1，在最最原始的逻辑电路中，还没有晶振时，可以通过人工控制开关实现逻辑电路的控制，比如[异或门](https://baike.baidu.com/item/%E5%BC%82%E6%88%96%E9%97%A8/9036416)\n\n|A开关|B开关|计算结果|\n|---|---|---|\n|关|关|0|\n|开|关|1|\n|关|开|1|\n|开|开|0|\n\n于是我们可以通过这种简单逻辑的叠加，做出一些复杂的计算，如加法：x+y\n设定，检测到**A开B关**一次设定x数值增加1，**A关B开**y数值增加1，那么我们要计算3+2，则需要进行一下操作：\n\n|给出X值|给出B值|\n|---|---|\n|A开B关重复3次|A关B开重复2次|\n\n由此可以看出，哪怕是及其简单的逻辑处理，也需要非常庞大的开关操作量。\n因此，懒得一批的人类找到了晶振这玩意儿，[晶振的原理](https://zh.wikipedia.org/zh-cn/%E7%9F%B3%E8%8B%B1%E6%99%B6%E4%BD%93%E8%B0%90%E6%8C%AF%E5%99%A8)解释起来有些许复杂，在此我们只需了解，晶振在电路板中工作的原理即可：\n晶振可以在一定时间内以一定频率发出脉冲，脉冲一词仍有一些难以理解，而有些资料中对此的描述为高低电平的转换，对于一个初学者来说，最讨厌的无非就是看到这些难以理解的名词，在此我将其解释的更加直白一些，不过低电平并不等于0V，低电平只是一个相对较低的电压：\n低电平：0V电压\n高电平：5V电压\n那么脉冲（高低电平转换）在电路中则是，打开开关：低电平（0V=没电）转换为高电平（5V=来电了），于是，就如我们上文所述，这就像是打开了A开关，利用晶振的这种脉冲，我们便可以在一定时间内实现一定次数的自动开关操作。\n如果你仔细阅读并理解了，便会发现这真的是一个十分伟大的发明！从此让人类走上了废物(bushi)的道路，躺平~\n\n**文章亦是我的笔记，先暂时记录到这里，仍在学习总结中**\n","slug":"51单片机的学习笔记","published":1,"updated":"2025-09-04T06:44:07.219Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtg00009szw49v815qm","content":"<h2 id=\"51单片机的学习及其关联知识\"><a href=\"#51单片机的学习及其关联知识\" class=\"headerlink\" title=\"51单片机的学习及其关联知识\"></a>51单片机的学习及其关联知识</h2><span id=\"more\"></span>\n\n<p><strong>开始前的一段话：</strong></p>\n<p>求知欲是人类进步的源泉，每接触一项新的知识就像是一滴墨滴在了宣纸上，向着四周疯狂扩散，这种极度的求知欲深深地刺激着我，撕裂我的思维向四周辐射，贪婪地、疯狂地汲取着接触到的每一项知识，这种知识爆炸的感觉带给我成瘾的快感！</p>\n<p>对于单片机的起步，始于我小时候的梦想，我想有高度智能的科技、机械围绕着我的生活，我想拥有一个高度智能的工厂，想要无数无数乃至我甚至不知如何形容的科技，我痴迷着这些技术，我疯狂的汲取各种知识，每一次突破一个新的知识面就像是进入一个未知的宇宙！偶然间，我发现我我的梦想可以从两个两个方面入手：</p>\n<ol>\n<li>软件层面的技术：编程，人工智能等</li>\n<li>硬件层面的技术：机械，电路开发等</li>\n</ol>\n<p>于是我有了方向，向着我想要的极力冲刺！</p>\n<p>我于2022.11.21日凌晨开始了51单片机的学习，从茫然无知，到那一滴墨滴在了宣纸上，围绕着单片机开始的知识爆炸让我无比亢奋！从一块小小的51单片机，知识开始爆炸开来，我从未接触过的领域，芯片，电路，逻辑……无数的知识冲刷着我的大脑，无法抑制的激动，发现未知的知识宇宙，我疯狂的汲取着无穷无尽的知识，感叹着人类智慧的结晶！</p>\n<p>越是学习，越是发觉自己的无知，知识是无穷无尽的，我永远不可能学完，真的太多太多了！</p>\n<p>人生的价值是集体利益，这些伟大的知识我无论学习多少，若不能将其贡献出来，则是对知识、对智慧、对人类乃至对我人生意义的亵渎！</p>\n<p>我将尽可能的将我所学的一切，用通俗易懂的语言描述出来，为同样渴望知识、同样有着疯狂求知欲的人们尽一份绵薄之力！</p>\n<p>如果你也有着相同的想法，同样渴望知识并为此痴迷，欢迎加入！</p>\n<p>如开头所述，求知欲是人类进步的源泉，所以在此，请允许我以<strong>探索者</strong>尊称各位渴望知识的道友，并欢迎您加入到我们，您可以在本页底部找到我的联系方式，因某些原因，建议您使用Telegram进行交流。</p>\n<hr>\n<p><strong>注意：由于我是边学习边完善文章，所以文章可能存在大量错误，我个人的力量有限，恳请各位探索者开放交流、互换知识，以集体的力量弥补个人的缺陷</strong></p>\n<hr>\n<h2 id=\"我使用的单片机\"><a href=\"#我使用的单片机\" class=\"headerlink\" title=\"我使用的单片机\"></a>我使用的单片机</h2><p>品牌：普中(PRECHIN)<br>型号：普中51-实验版<br>官方教程：<a href=\"https://www.bilibili.com/video/BV1RB4y1i71i\">https://www.bilibili.com/video/BV1RB4y1i71i</a></p>\n<p>在官方教程中，介绍了该开发板的部分元器件：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>4位一体数码管</td>\n<td>数字显示</td>\n<td>两个4位一体共阴数码管</td>\n</tr>\n<tr>\n<td>LCD1602液晶屏</td>\n<td>用于简单内容显示</td>\n<td>开发板提供了LCD1602&#x2F;9648&#x2F;12864&#x2F;TFT接口</td>\n</tr>\n<tr>\n<td>8*8LED矩阵</td>\n<td>常应用于LED广告牌等</td>\n<td>在矩阵旁边提供了编号J24的GND&#x2F;OE&#x2F;VCC三针引脚，跳线帽短接OE&#x2F;VCC可以关闭矩阵节省电源（OE我搜索出来的解释为<em>输出使能控制信号</em>，还请大佬科普补充一下，谢谢）</td>\n</tr>\n<tr>\n<td>LED流水灯</td>\n<td>可以用于心形流水灯表白（误）</td>\n<td>该开发板提供了8个流水灯</td>\n</tr>\n<tr>\n<td>74HC595A芯片</td>\n<td>该芯片用于扩展开发板IO口，驱动8*8点阵</td>\n<td>专业名称<em>高速 CMOS 8 位串行移位寄存器</em>其具体资料后续将专门设立电路知识栏目进行解释</td>\n</tr>\n<tr>\n<td>4*4键盘</td>\n<td>计算器啥的，挺实用</td>\n<td>普普通通</td>\n</tr>\n<tr>\n<td>红外接受</td>\n<td>红外遥控嘛，套餐给了遥控器</td>\n<td>NEC解码</td>\n</tr>\n<tr>\n<td>DS18B20温度传感器</td>\n<td>略</td>\n<td>略</td>\n</tr>\n<tr>\n<td>NRF24L01扩展接口</td>\n<td>该扩展接口可以用于扩展2.4G无线通信模块</td>\n<td>相当NICE的远程通信，几百米的遥控器？</td>\n</tr>\n<tr>\n<td>ASM1117稳压芯片</td>\n<td>提供3.3V稳定电压</td>\n<td>如视频中所述，大部分传感器为3.3V，所以嘛…</td>\n</tr>\n<tr>\n<td>CH340C芯片</td>\n<td>用于USB转TTL通信，该芯片内置晶振</td>\n<td>该板设计了4个引脚，分别是UTX-&gt;P30，RTX-&gt;P31，该设计十分优秀！在需要使用串口调试模块时，可以将U&#x2F;RTX针脚接到模块对应引脚，直接使用开发板MicroUSB进行调试，大赞！</td>\n</tr>\n</tbody></table>\n<h2 id=\"晶振临时科普栏\"><a href=\"#晶振临时科普栏\" class=\"headerlink\" title=\"晶振临时科普栏\"></a>晶振临时科普栏</h2><p>因我在学习过程中，对晶振的求知难度较大，特此临时记录！<br>晶振，全称石英晶体振荡器，英文名（quartz oscillator）<br>石英晶振具有高精度高稳度的特性，十分适合用于数字电路的时钟，是数字电路的心脏！</p>\n<p><strong>时钟这个概念比较抽象，我尝试将其描述的更加朴素一些：</strong></p>\n<p>在计算机中，关和开分别可以代表0和1，在最最原始的逻辑电路中，还没有晶振时，可以通过人工控制开关实现逻辑电路的控制，比如<a href=\"https://baike.baidu.com/item/%E5%BC%82%E6%88%96%E9%97%A8/9036416\">异或门</a></p>\n<table>\n<thead>\n<tr>\n<th>A开关</th>\n<th>B开关</th>\n<th>计算结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>关</td>\n<td>关</td>\n<td>0</td>\n</tr>\n<tr>\n<td>开</td>\n<td>关</td>\n<td>1</td>\n</tr>\n<tr>\n<td>关</td>\n<td>开</td>\n<td>1</td>\n</tr>\n<tr>\n<td>开</td>\n<td>开</td>\n<td>0</td>\n</tr>\n</tbody></table>\n<p>于是我们可以通过这种简单逻辑的叠加，做出一些复杂的计算，如加法：x+y<br>设定，检测到<strong>A开B关</strong>一次设定x数值增加1，<strong>A关B开</strong>y数值增加1，那么我们要计算3+2，则需要进行一下操作：</p>\n<table>\n<thead>\n<tr>\n<th>给出X值</th>\n<th>给出B值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A开B关重复3次</td>\n<td>A关B开重复2次</td>\n</tr>\n</tbody></table>\n<p>由此可以看出，哪怕是及其简单的逻辑处理，也需要非常庞大的开关操作量。<br>因此，懒得一批的人类找到了晶振这玩意儿，<a href=\"https://zh.wikipedia.org/zh-cn/%E7%9F%B3%E8%8B%B1%E6%99%B6%E4%BD%93%E8%B0%90%E6%8C%AF%E5%99%A8\">晶振的原理</a>解释起来有些许复杂，在此我们只需了解，晶振在电路板中工作的原理即可：<br>晶振可以在一定时间内以一定频率发出脉冲，脉冲一词仍有一些难以理解，而有些资料中对此的描述为高低电平的转换，对于一个初学者来说，最讨厌的无非就是看到这些难以理解的名词，在此我将其解释的更加直白一些，不过低电平并不等于0V，低电平只是一个相对较低的电压：<br>低电平：0V电压<br>高电平：5V电压<br>那么脉冲（高低电平转换）在电路中则是，打开开关：低电平（0V&#x3D;没电）转换为高电平（5V&#x3D;来电了），于是，就如我们上文所述，这就像是打开了A开关，利用晶振的这种脉冲，我们便可以在一定时间内实现一定次数的自动开关操作。<br>如果你仔细阅读并理解了，便会发现这真的是一个十分伟大的发明！从此让人类走上了废物(bushi)的道路，躺平~</p>\n<p><strong>文章亦是我的笔记，先暂时记录到这里，仍在学习总结中</strong></p>\n","site":{"data":{}},"length":1861,"excerpt":"<h2 id=\"51单片机的学习及其关联知识\"><a href=\"#51单片机的学习及其关联知识\" class=\"headerlink\" title=\"51单片机的学习及其关联知识\"></a>51单片机的学习及其关联知识</h2>","more":"<p><strong>开始前的一段话：</strong></p>\n<p>求知欲是人类进步的源泉，每接触一项新的知识就像是一滴墨滴在了宣纸上，向着四周疯狂扩散，这种极度的求知欲深深地刺激着我，撕裂我的思维向四周辐射，贪婪地、疯狂地汲取着接触到的每一项知识，这种知识爆炸的感觉带给我成瘾的快感！</p>\n<p>对于单片机的起步，始于我小时候的梦想，我想有高度智能的科技、机械围绕着我的生活，我想拥有一个高度智能的工厂，想要无数无数乃至我甚至不知如何形容的科技，我痴迷着这些技术，我疯狂的汲取各种知识，每一次突破一个新的知识面就像是进入一个未知的宇宙！偶然间，我发现我我的梦想可以从两个两个方面入手：</p>\n<ol>\n<li>软件层面的技术：编程，人工智能等</li>\n<li>硬件层面的技术：机械，电路开发等</li>\n</ol>\n<p>于是我有了方向，向着我想要的极力冲刺！</p>\n<p>我于2022.11.21日凌晨开始了51单片机的学习，从茫然无知，到那一滴墨滴在了宣纸上，围绕着单片机开始的知识爆炸让我无比亢奋！从一块小小的51单片机，知识开始爆炸开来，我从未接触过的领域，芯片，电路，逻辑……无数的知识冲刷着我的大脑，无法抑制的激动，发现未知的知识宇宙，我疯狂的汲取着无穷无尽的知识，感叹着人类智慧的结晶！</p>\n<p>越是学习，越是发觉自己的无知，知识是无穷无尽的，我永远不可能学完，真的太多太多了！</p>\n<p>人生的价值是集体利益，这些伟大的知识我无论学习多少，若不能将其贡献出来，则是对知识、对智慧、对人类乃至对我人生意义的亵渎！</p>\n<p>我将尽可能的将我所学的一切，用通俗易懂的语言描述出来，为同样渴望知识、同样有着疯狂求知欲的人们尽一份绵薄之力！</p>\n<p>如果你也有着相同的想法，同样渴望知识并为此痴迷，欢迎加入！</p>\n<p>如开头所述，求知欲是人类进步的源泉，所以在此，请允许我以<strong>探索者</strong>尊称各位渴望知识的道友，并欢迎您加入到我们，您可以在本页底部找到我的联系方式，因某些原因，建议您使用Telegram进行交流。</p>\n<hr>\n<p><strong>注意：由于我是边学习边完善文章，所以文章可能存在大量错误，我个人的力量有限，恳请各位探索者开放交流、互换知识，以集体的力量弥补个人的缺陷</strong></p>\n<hr>\n<h2 id=\"我使用的单片机\"><a href=\"#我使用的单片机\" class=\"headerlink\" title=\"我使用的单片机\"></a>我使用的单片机</h2><p>品牌：普中(PRECHIN)<br>型号：普中51-实验版<br>官方教程：<a href=\"https://www.bilibili.com/video/BV1RB4y1i71i\">https://www.bilibili.com/video/BV1RB4y1i71i</a></p>\n<p>在官方教程中，介绍了该开发板的部分元器件：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>4位一体数码管</td>\n<td>数字显示</td>\n<td>两个4位一体共阴数码管</td>\n</tr>\n<tr>\n<td>LCD1602液晶屏</td>\n<td>用于简单内容显示</td>\n<td>开发板提供了LCD1602&#x2F;9648&#x2F;12864&#x2F;TFT接口</td>\n</tr>\n<tr>\n<td>8*8LED矩阵</td>\n<td>常应用于LED广告牌等</td>\n<td>在矩阵旁边提供了编号J24的GND&#x2F;OE&#x2F;VCC三针引脚，跳线帽短接OE&#x2F;VCC可以关闭矩阵节省电源（OE我搜索出来的解释为<em>输出使能控制信号</em>，还请大佬科普补充一下，谢谢）</td>\n</tr>\n<tr>\n<td>LED流水灯</td>\n<td>可以用于心形流水灯表白（误）</td>\n<td>该开发板提供了8个流水灯</td>\n</tr>\n<tr>\n<td>74HC595A芯片</td>\n<td>该芯片用于扩展开发板IO口，驱动8*8点阵</td>\n<td>专业名称<em>高速 CMOS 8 位串行移位寄存器</em>其具体资料后续将专门设立电路知识栏目进行解释</td>\n</tr>\n<tr>\n<td>4*4键盘</td>\n<td>计算器啥的，挺实用</td>\n<td>普普通通</td>\n</tr>\n<tr>\n<td>红外接受</td>\n<td>红外遥控嘛，套餐给了遥控器</td>\n<td>NEC解码</td>\n</tr>\n<tr>\n<td>DS18B20温度传感器</td>\n<td>略</td>\n<td>略</td>\n</tr>\n<tr>\n<td>NRF24L01扩展接口</td>\n<td>该扩展接口可以用于扩展2.4G无线通信模块</td>\n<td>相当NICE的远程通信，几百米的遥控器？</td>\n</tr>\n<tr>\n<td>ASM1117稳压芯片</td>\n<td>提供3.3V稳定电压</td>\n<td>如视频中所述，大部分传感器为3.3V，所以嘛…</td>\n</tr>\n<tr>\n<td>CH340C芯片</td>\n<td>用于USB转TTL通信，该芯片内置晶振</td>\n<td>该板设计了4个引脚，分别是UTX-&gt;P30，RTX-&gt;P31，该设计十分优秀！在需要使用串口调试模块时，可以将U&#x2F;RTX针脚接到模块对应引脚，直接使用开发板MicroUSB进行调试，大赞！</td>\n</tr>\n</tbody></table>\n<h2 id=\"晶振临时科普栏\"><a href=\"#晶振临时科普栏\" class=\"headerlink\" title=\"晶振临时科普栏\"></a>晶振临时科普栏</h2><p>因我在学习过程中，对晶振的求知难度较大，特此临时记录！<br>晶振，全称石英晶体振荡器，英文名（quartz oscillator）<br>石英晶振具有高精度高稳度的特性，十分适合用于数字电路的时钟，是数字电路的心脏！</p>\n<p><strong>时钟这个概念比较抽象，我尝试将其描述的更加朴素一些：</strong></p>\n<p>在计算机中，关和开分别可以代表0和1，在最最原始的逻辑电路中，还没有晶振时，可以通过人工控制开关实现逻辑电路的控制，比如<a href=\"https://baike.baidu.com/item/%E5%BC%82%E6%88%96%E9%97%A8/9036416\">异或门</a></p>\n<table>\n<thead>\n<tr>\n<th>A开关</th>\n<th>B开关</th>\n<th>计算结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>关</td>\n<td>关</td>\n<td>0</td>\n</tr>\n<tr>\n<td>开</td>\n<td>关</td>\n<td>1</td>\n</tr>\n<tr>\n<td>关</td>\n<td>开</td>\n<td>1</td>\n</tr>\n<tr>\n<td>开</td>\n<td>开</td>\n<td>0</td>\n</tr>\n</tbody></table>\n<p>于是我们可以通过这种简单逻辑的叠加，做出一些复杂的计算，如加法：x+y<br>设定，检测到<strong>A开B关</strong>一次设定x数值增加1，<strong>A关B开</strong>y数值增加1，那么我们要计算3+2，则需要进行一下操作：</p>\n<table>\n<thead>\n<tr>\n<th>给出X值</th>\n<th>给出B值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A开B关重复3次</td>\n<td>A关B开重复2次</td>\n</tr>\n</tbody></table>\n<p>由此可以看出，哪怕是及其简单的逻辑处理，也需要非常庞大的开关操作量。<br>因此，懒得一批的人类找到了晶振这玩意儿，<a href=\"https://zh.wikipedia.org/zh-cn/%E7%9F%B3%E8%8B%B1%E6%99%B6%E4%BD%93%E8%B0%90%E6%8C%AF%E5%99%A8\">晶振的原理</a>解释起来有些许复杂，在此我们只需了解，晶振在电路板中工作的原理即可：<br>晶振可以在一定时间内以一定频率发出脉冲，脉冲一词仍有一些难以理解，而有些资料中对此的描述为高低电平的转换，对于一个初学者来说，最讨厌的无非就是看到这些难以理解的名词，在此我将其解释的更加直白一些，不过低电平并不等于0V，低电平只是一个相对较低的电压：<br>低电平：0V电压<br>高电平：5V电压<br>那么脉冲（高低电平转换）在电路中则是，打开开关：低电平（0V&#x3D;没电）转换为高电平（5V&#x3D;来电了），于是，就如我们上文所述，这就像是打开了A开关，利用晶振的这种脉冲，我们便可以在一定时间内实现一定次数的自动开关操作。<br>如果你仔细阅读并理解了，便会发现这真的是一个十分伟大的发明！从此让人类走上了废物(bushi)的道路，躺平~</p>\n<p><strong>文章亦是我的笔记，先暂时记录到这里，仍在学习总结中</strong></p>"},{"title":"51单片机入门-点亮LED","comments":1,"date":"2023-09-25T02:14:36.000Z","keywords":"51单片机","_content":"\n初次接触51单片机，记录下第一个程序，LED跑马灯，源代码如下：\n\n<!-- more -->\n\n```c\n#include <reg52.h>//引入52系列单片机头文件\n\n//位定义，sbit 标识符 = 地址值\nsbit led1=P2^0;\nsbit led2=P2^1;\nsbit led3=P2^2;\nsbit led4=P2^3;\nsbit led5=P2^4;\nsbit led6=P2^5;\nsbit led7=P2^6;\nsbit led8=P2^7;\n\n//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确\n//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒\nvoid delay(int us)\n{\n while(us--);//循环执行，递减\n}\n\nvoid main()\n{\n while(1)\n {\n  led1=0;//设置低电平点亮LED，断点开始时间0.00042318\n  delay(10000);//1秒为1000毫秒1000000微秒，此处为0.1秒，断点结束时间0.09813911\n  led1=1;//设置高电平熄灭LED\n  delay(10000);\n  \n  led2=0;\n  delay(10000);\n  led2=1;\n  delay(10000);\n  \n  led3=0;\n  delay(10000);\n  led3=1;\n  delay(10000);\n  \n  led4=0;\n  delay(10000);\n  led4=1;\n  delay(10000);\n  \n  led5=0;\n  delay(10000);\n  led5=1;\n  delay(10000);\n  \n  led6=0;\n  delay(10000);\n  led6=1;\n  delay(10000);\n  \n  led7=0;\n  delay(10000);\n  led7=1;\n  delay(10000);\n  \n  led8=0;\n  delay(10000);\n  led8=1;\n  delay(10000);\n }\n}\n```\n\n**改进版**\n\n```c\n#include <reg52.h>//引入52系列单片机头文件\n#include <intrins.h>//引入intrins内置函数\n\n//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确\n//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒\nvoid delay(unsigned int us)\n{\n while(us--);//循环执行，递减\n}\n\n\n\nvoid main()\n{\n while(1)\n {\n  int i;\n  P2 = 0xfe;//二进制11111110，对应LED P2^7到0\n  for(i=0;i<7;i++)\n  {\n   P2 = _crol_(P2,1);//使LED 从11111110左移一位11111101\n   delay(5000);//1秒为1000毫秒1000000微秒，此处为0.05秒，断点结束时间0.09813911\n  }\n  for(i=0;i<7;i++)\n  {\n   P2 = _cror_(P2,1);//使LED从上方代码执行后的01111111右移一位变为10111111\n   delay(5000);\n  }\n }\n}\n```\n","source":"_posts/51单片机入门-点亮LED.md","raw":"---\ntitle: 51单片机入门-点亮LED\ncategories: [知识库]\ncomments: true\ndate: 2023-09-25 10:14:36\nkeywords: 51单片机\ntags:\n    - 嵌入式开发\n---\n\n初次接触51单片机，记录下第一个程序，LED跑马灯，源代码如下：\n\n<!-- more -->\n\n```c\n#include <reg52.h>//引入52系列单片机头文件\n\n//位定义，sbit 标识符 = 地址值\nsbit led1=P2^0;\nsbit led2=P2^1;\nsbit led3=P2^2;\nsbit led4=P2^3;\nsbit led5=P2^4;\nsbit led6=P2^5;\nsbit led7=P2^6;\nsbit led8=P2^7;\n\n//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确\n//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒\nvoid delay(int us)\n{\n while(us--);//循环执行，递减\n}\n\nvoid main()\n{\n while(1)\n {\n  led1=0;//设置低电平点亮LED，断点开始时间0.00042318\n  delay(10000);//1秒为1000毫秒1000000微秒，此处为0.1秒，断点结束时间0.09813911\n  led1=1;//设置高电平熄灭LED\n  delay(10000);\n  \n  led2=0;\n  delay(10000);\n  led2=1;\n  delay(10000);\n  \n  led3=0;\n  delay(10000);\n  led3=1;\n  delay(10000);\n  \n  led4=0;\n  delay(10000);\n  led4=1;\n  delay(10000);\n  \n  led5=0;\n  delay(10000);\n  led5=1;\n  delay(10000);\n  \n  led6=0;\n  delay(10000);\n  led6=1;\n  delay(10000);\n  \n  led7=0;\n  delay(10000);\n  led7=1;\n  delay(10000);\n  \n  led8=0;\n  delay(10000);\n  led8=1;\n  delay(10000);\n }\n}\n```\n\n**改进版**\n\n```c\n#include <reg52.h>//引入52系列单片机头文件\n#include <intrins.h>//引入intrins内置函数\n\n//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确\n//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒\nvoid delay(unsigned int us)\n{\n while(us--);//循环执行，递减\n}\n\n\n\nvoid main()\n{\n while(1)\n {\n  int i;\n  P2 = 0xfe;//二进制11111110，对应LED P2^7到0\n  for(i=0;i<7;i++)\n  {\n   P2 = _crol_(P2,1);//使LED 从11111110左移一位11111101\n   delay(5000);//1秒为1000毫秒1000000微秒，此处为0.05秒，断点结束时间0.09813911\n  }\n  for(i=0;i<7;i++)\n  {\n   P2 = _cror_(P2,1);//使LED从上方代码执行后的01111111右移一位变为10111111\n   delay(5000);\n  }\n }\n}\n```\n","slug":"51单片机入门-点亮LED","published":1,"updated":"2025-09-04T06:44:07.216Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwti00019szwd6kf360k","content":"<p>初次接触51单片机，记录下第一个程序，LED跑马灯，源代码如下：</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;reg52.h&gt;</span><span class=\"comment\">//引入52系列单片机头文件</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//位定义，sbit 标识符 = 地址值</span></span><br><span class=\"line\">sbit led1=P2^<span class=\"number\">0</span>;</span><br><span class=\"line\">sbit led2=P2^<span class=\"number\">1</span>;</span><br><span class=\"line\">sbit led3=P2^<span class=\"number\">2</span>;</span><br><span class=\"line\">sbit led4=P2^<span class=\"number\">3</span>;</span><br><span class=\"line\">sbit led5=P2^<span class=\"number\">4</span>;</span><br><span class=\"line\">sbit led6=P2^<span class=\"number\">5</span>;</span><br><span class=\"line\">sbit led7=P2^<span class=\"number\">6</span>;</span><br><span class=\"line\">sbit led8=P2^<span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确</span></span><br><span class=\"line\"><span class=\"comment\">//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">delay</span><span class=\"params\">(<span class=\"type\">int</span> us)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(us--);<span class=\"comment\">//循环执行，递减</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  led1=<span class=\"number\">0</span>;<span class=\"comment\">//设置低电平点亮LED，断点开始时间0.00042318</span></span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);<span class=\"comment\">//1秒为1000毫秒1000000微秒，此处为0.1秒，断点结束时间0.09813911</span></span><br><span class=\"line\">  led1=<span class=\"number\">1</span>;<span class=\"comment\">//设置高电平熄灭LED</span></span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led2=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led2=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led3=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led3=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led4=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led4=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led5=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led5=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led6=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led6=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led7=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led7=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led8=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led8=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>改进版</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;reg52.h&gt;</span><span class=\"comment\">//引入52系列单片机头文件</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;intrins.h&gt;</span><span class=\"comment\">//引入intrins内置函数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确</span></span><br><span class=\"line\"><span class=\"comment\">//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">delay</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> us)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(us--);<span class=\"comment\">//循环执行，递减</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> i;</span><br><span class=\"line\">  P2 = <span class=\"number\">0xfe</span>;<span class=\"comment\">//二进制11111110，对应LED P2^7到0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">7</span>;i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   P2 = _crol_(P2,<span class=\"number\">1</span>);<span class=\"comment\">//使LED 从11111110左移一位11111101</span></span><br><span class=\"line\">   delay(<span class=\"number\">5000</span>);<span class=\"comment\">//1秒为1000毫秒1000000微秒，此处为0.05秒，断点结束时间0.09813911</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">7</span>;i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   P2 = _cror_(P2,<span class=\"number\">1</span>);<span class=\"comment\">//使LED从上方代码执行后的01111111右移一位变为10111111</span></span><br><span class=\"line\">   delay(<span class=\"number\">5000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":417,"excerpt":"<p>初次接触51单片机，记录下第一个程序，LED跑马灯，源代码如下：</p>","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;reg52.h&gt;</span><span class=\"comment\">//引入52系列单片机头文件</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//位定义，sbit 标识符 = 地址值</span></span><br><span class=\"line\">sbit led1=P2^<span class=\"number\">0</span>;</span><br><span class=\"line\">sbit led2=P2^<span class=\"number\">1</span>;</span><br><span class=\"line\">sbit led3=P2^<span class=\"number\">2</span>;</span><br><span class=\"line\">sbit led4=P2^<span class=\"number\">3</span>;</span><br><span class=\"line\">sbit led5=P2^<span class=\"number\">4</span>;</span><br><span class=\"line\">sbit led6=P2^<span class=\"number\">5</span>;</span><br><span class=\"line\">sbit led7=P2^<span class=\"number\">6</span>;</span><br><span class=\"line\">sbit led8=P2^<span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确</span></span><br><span class=\"line\"><span class=\"comment\">//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">delay</span><span class=\"params\">(<span class=\"type\">int</span> us)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(us--);<span class=\"comment\">//循环执行，递减</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  led1=<span class=\"number\">0</span>;<span class=\"comment\">//设置低电平点亮LED，断点开始时间0.00042318</span></span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);<span class=\"comment\">//1秒为1000毫秒1000000微秒，此处为0.1秒，断点结束时间0.09813911</span></span><br><span class=\"line\">  led1=<span class=\"number\">1</span>;<span class=\"comment\">//设置高电平熄灭LED</span></span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led2=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led2=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led3=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led3=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led4=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led4=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led5=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led5=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led6=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led6=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led7=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led7=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  led8=<span class=\"number\">0</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">  led8=<span class=\"number\">1</span>;</span><br><span class=\"line\">  delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>改进版</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;reg52.h&gt;</span><span class=\"comment\">//引入52系列单片机头文件</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;intrins.h&gt;</span><span class=\"comment\">//引入intrins内置函数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//延迟函数,单位约10微秒，此处利用的是CPU处理的延时，并不准确</span></span><br><span class=\"line\"><span class=\"comment\">//11.0952MHz测得执行时间为0.000009771593，约为9.771593微秒</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">delay</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> us)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(us--);<span class=\"comment\">//循环执行，递减</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> i;</span><br><span class=\"line\">  P2 = <span class=\"number\">0xfe</span>;<span class=\"comment\">//二进制11111110，对应LED P2^7到0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">7</span>;i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   P2 = _crol_(P2,<span class=\"number\">1</span>);<span class=\"comment\">//使LED 从11111110左移一位11111101</span></span><br><span class=\"line\">   delay(<span class=\"number\">5000</span>);<span class=\"comment\">//1秒为1000毫秒1000000微秒，此处为0.05秒，断点结束时间0.09813911</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">7</span>;i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   P2 = _cror_(P2,<span class=\"number\">1</span>);<span class=\"comment\">//使LED从上方代码执行后的01111111右移一位变为10111111</span></span><br><span class=\"line\">   delay(<span class=\"number\">5000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"DELL报错The PERC1 battery is low","comments":1,"date":"2025-09-04T06:56:26.000Z","keywords":["DELL","PERC","IT知识","百科","BBU","阵列卡"],"_content":"\n## 关于DELL iDRAC日志中PERC报错问题的记录及解答\n\n报错信息如下\n\n> Sun Jul 06 2025 07:24:49\tThe PERC1 battery is operating normally.\t\n> Sun Jul 06 2025 06:50:13\tThe PERC1 battery is low.\t\n> Mon Apr 07 2025 04:22:23\tThe PERC1 battery is operating normally.\t\n> Mon Apr 07 2025 04:20:18\tThe PERC1 battery is low.\n\n报错内容为PERC电量低，随后又恢复正常，错误复现周期为3个月\n\n<!-- more -->\n\n查询发现DELL官方文档有记录[《了解 PERC 电池错误》](https://www.dell.com/support/kbdoc/zh-cn/000351229/poweredge-%E4%BA%86%E8%A7%A3-perc-%E7%94%B5%E6%B1%A0%E9%94%99%E8%AF%AF#bat15)，其中《充电问题示例》中的报错疑似与该报错一致，但报错循环周期不同。\n\n查询后了解到PERC是DELL阵列卡的电池，也就是俗称的RAID卡的BBU（Battery Backup Unit），而其中每三个月复现一次的该报错为DELL PERC的正常循环充放电操作，属于正常现象\n\n## 总结\n\nPERC每3个月重复报错`The PERC1 battery is low.\t`随后恢复`The PERC1 battery is operating normally.\t`\n\n该报错为RAID卡BBU，电池的充放电报错，每3个月为周期的循环报错是DELL的自检行为，属于正常现象。\n\n**2025-9-4已致电DELL800-858-0613核实，该信息可信**","source":"_posts/DELL报错The-PERC1-battery-is-low.md","raw":"---\ntitle: DELL报错The PERC1 battery is low\ncomments: true\ncategories: [知识库]\ndate: 2025-09-04 14:56:26\nkeywords:\n  - DELL\n  - PERC\n  - IT知识\n  - 百科\n  - BBU\n  - 阵列卡\ntags:\n  - DELL\n  - PERC\n  - IT知识\n  - 百科\n  - BBU\n  - 阵列卡\n---\n\n## 关于DELL iDRAC日志中PERC报错问题的记录及解答\n\n报错信息如下\n\n> Sun Jul 06 2025 07:24:49\tThe PERC1 battery is operating normally.\t\n> Sun Jul 06 2025 06:50:13\tThe PERC1 battery is low.\t\n> Mon Apr 07 2025 04:22:23\tThe PERC1 battery is operating normally.\t\n> Mon Apr 07 2025 04:20:18\tThe PERC1 battery is low.\n\n报错内容为PERC电量低，随后又恢复正常，错误复现周期为3个月\n\n<!-- more -->\n\n查询发现DELL官方文档有记录[《了解 PERC 电池错误》](https://www.dell.com/support/kbdoc/zh-cn/000351229/poweredge-%E4%BA%86%E8%A7%A3-perc-%E7%94%B5%E6%B1%A0%E9%94%99%E8%AF%AF#bat15)，其中《充电问题示例》中的报错疑似与该报错一致，但报错循环周期不同。\n\n查询后了解到PERC是DELL阵列卡的电池，也就是俗称的RAID卡的BBU（Battery Backup Unit），而其中每三个月复现一次的该报错为DELL PERC的正常循环充放电操作，属于正常现象\n\n## 总结\n\nPERC每3个月重复报错`The PERC1 battery is low.\t`随后恢复`The PERC1 battery is operating normally.\t`\n\n该报错为RAID卡BBU，电池的充放电报错，每3个月为周期的循环报错是DELL的自检行为，属于正常现象。\n\n**2025-9-4已致电DELL800-858-0613核实，该信息可信**","slug":"DELL报错The-PERC1-battery-is-low","published":1,"updated":"2025-09-10T01:57:41.879Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtl00049szwhp7gf9av","content":"<h2 id=\"关于DELL-iDRAC日志中PERC报错问题的记录及解答\"><a href=\"#关于DELL-iDRAC日志中PERC报错问题的记录及解答\" class=\"headerlink\" title=\"关于DELL iDRAC日志中PERC报错问题的记录及解答\"></a>关于DELL iDRAC日志中PERC报错问题的记录及解答</h2><p>报错信息如下</p>\n<blockquote>\n<p>Sun Jul 06 2025 07:24:49\tThe PERC1 battery is operating normally.\t<br>Sun Jul 06 2025 06:50:13\tThe PERC1 battery is low.\t<br>Mon Apr 07 2025 04:22:23\tThe PERC1 battery is operating normally.\t<br>Mon Apr 07 2025 04:20:18\tThe PERC1 battery is low.</p>\n</blockquote>\n<p>报错内容为PERC电量低，随后又恢复正常，错误复现周期为3个月</p>\n<span id=\"more\"></span>\n\n<p>查询发现DELL官方文档有记录<a href=\"https://www.dell.com/support/kbdoc/zh-cn/000351229/poweredge-%E4%BA%86%E8%A7%A3-perc-%E7%94%B5%E6%B1%A0%E9%94%99%E8%AF%AF#bat15\">《了解 PERC 电池错误》</a>，其中《充电问题示例》中的报错疑似与该报错一致，但报错循环周期不同。</p>\n<p>查询后了解到PERC是DELL阵列卡的电池，也就是俗称的RAID卡的BBU（Battery Backup Unit），而其中每三个月复现一次的该报错为DELL PERC的正常循环充放电操作，属于正常现象</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>PERC每3个月重复报错<code>The PERC1 battery is low.\t</code>随后恢复<code>The PERC1 battery is operating normally.\t</code></p>\n<p>该报错为RAID卡BBU，电池的充放电报错，每3个月为周期的循环报错是DELL的自检行为，属于正常现象。</p>\n<p><strong>2025-9-4已致电DELL800-858-0613核实，该信息可信</strong></p>\n","site":{"data":{}},"length":293,"excerpt":"<h2 id=\"关于DELL-iDRAC日志中PERC报错问题的记录及解答\"><a href=\"#关于DELL-iDRAC日志中PERC报错问题的记录及解答\" class=\"headerlink\" title=\"关于DELL iDRAC日志中PERC报错问题的记录及解答\"></a>关于DELL iDRAC日志中PERC报错问题的记录及解答</h2><p>报错信息如下</p>\n<blockquote>\n<p>Sun Jul 06 2025 07:24:49\tThe PERC1 battery is operating normally.\t<br>Sun Jul 06 2025 06:50:13\tThe PERC1 battery is low.\t<br>Mon Apr 07 2025 04:22:23\tThe PERC1 battery is operating normally.\t<br>Mon Apr 07 2025 04:20:18\tThe PERC1 battery is low.</p>\n</blockquote>\n<p>报错内容为PERC电量低，随后又恢复正常，错误复现周期为3个月</p>","more":"<p>查询发现DELL官方文档有记录<a href=\"https://www.dell.com/support/kbdoc/zh-cn/000351229/poweredge-%E4%BA%86%E8%A7%A3-perc-%E7%94%B5%E6%B1%A0%E9%94%99%E8%AF%AF#bat15\">《了解 PERC 电池错误》</a>，其中《充电问题示例》中的报错疑似与该报错一致，但报错循环周期不同。</p>\n<p>查询后了解到PERC是DELL阵列卡的电池，也就是俗称的RAID卡的BBU（Battery Backup Unit），而其中每三个月复现一次的该报错为DELL PERC的正常循环充放电操作，属于正常现象</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>PERC每3个月重复报错<code>The PERC1 battery is low.\t</code>随后恢复<code>The PERC1 battery is operating normally.\t</code></p>\n<p>该报错为RAID卡BBU，电池的充放电报错，每3个月为周期的循环报错是DELL的自检行为，属于正常现象。</p>\n<p><strong>2025-9-4已致电DELL800-858-0613核实，该信息可信</strong></p>"},{"title":"Debian基础知识【持续更新】","keywords":["Debian"],"comments":1,"date":"2023-03-01T07:45:44.000Z","sticky":null,"_content":"\n# 本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\n\n**根据红帽的公告，CentOS将不再适合作为生产环境的稳定系统使用，为此我个人建议您尝试著名且优秀的Debian系统**\n\n<!-- more -->\n\n>2020年12月08日，CentOS官方宣布了停止维护CentOS Linux 8的计划，并推出了CentOS Stream项目。具体信息，请阅读CentOS官方公告。其具体规划如下：\n>\n> - CentOS Linux 8作为RHEL 8的复刻版本，生命周期缩短，于2021年12月31日停止更新并停止维护（EOL）。\n> - 基于以上官方变更计划，CentOS Linux 8用户将无法获得包括问题修复和功能更新在内的任何软件维护和支持。CentOS官方建议停止维护后：对于开发或测试环境，可以将环境迁移至CentOS Stream版本； 对于生产环境或部署关键业务的系统，建议使用稳定的Red Hat Enterprise Linux。对此，用户需评估以下问题：\n> - CentOS Stream是一个滚动发行的版本，仅为RHEL前置测试版，运用于生产环境时，可能存在一定风险。\n> [亚马逊云科技上在CentOS在停止维护后的几种选择](https://aws.amazon.com/cn/blogs/china/aws-choices-for-centos-after-stopping-maintenance/)\n\n---\n\n## Debian 更换国内源\n\n在使用过阿里云、网易163、清华、中科大源之后，我个人建议更换为中科大源，Debian更换源的方式非常简单，在此非常感谢[sNullp先生](https://github.com/snullp)的[源配置生成器](https://mirrors.ustc.edu.cn/repogen/)!\n\n在使用该配置生成器之前，你需要先确认你的Debian版本，使用`cat /etc/os-release`命令，在输出的结果中找到`VERSION_CODENAME=bullseye`，位于`=`后面的就是你的版本代号，如图：\n\n![20230301160807](https://img.hackerbs.com/20230301160807.png)\n\n然后打开[源配置生成器](https://mirrors.ustc.edu.cn/repogen/)，找到Debian并选择你对应的版本号，如图：\n\n![20230301161044](https://img.hackerbs.com/20230301161044.png)\n\n其中，HTTPS/HTTP不必赘述，就是字母意思，而IPv4也很好理解，就是选择IPv4或IPv6地址访问，默认HTTPS和IPv4即可\n\n复制红框中的内容后，回到你的Debian系统，使用`vim /etc/apt/sources.list`命令编辑apt源配置文件，如果提示`-bash: /usr/bin/vim: No such file or directory`则是因为你没有安装`vim`编辑器，我强烈建议你安装`vim`编辑器，如果暂时无法安装，也可使用`nano`编辑器，对应命令为`nano /etc/apt/sources.list`，使用编辑器打开`sources.list`文件后，如果你是`vim`编辑器，则可以将光标移到首行，然后按`d`再按`Shift+G`即可直接清空内容，然后粘贴你在源配置生成器复制的红框中内容即可，如图：\n\n![20230301161642](https://img.hackerbs.com/20230301161642.png)\n\n`vim`编辑器在编辑完成后按`ESC`再输入`:wq`回车即可退出保存，编辑器的操作方式在此不过多赘述。\n\n完成源配置文件的编辑后，还需要使用`apt update`命令更新源，至此，Debian更换中科大源的教程结束。\n\n## Debian iSCSI挂载卷\n\n首先，你需要安装`open-iscsi`，使用`apt install -y open-iscsi`进行安装，然后运行`iscsiadm -m discovery -t st -p 服务器地址`探测服务器发布的卷，如图：\n\n![20230301162849](https://img.hackerbs.com/20230301162849.png)\n\n随后使用`iscsiadm -m node -T iqn开头的对应地址 -p 服务器地址 -l`即可完成挂载，如图：\n\n![20230301164715](https://img.hackerbs.com/20230301164715.png)\n\n随后使用`lsblk`命令发现新的磁盘，如图：\n\n![20230301164844](https://img.hackerbs.com/20230301164844.png)\n\n扩展内容：\n\n```shell\n# 自动挂载\niscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 --op update -n node.startup -v automatic\n\n# 解除挂载\niscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 -u\n\n# 解除所有连接\niscsiadm -m node --logoutall=all\n\n# 查看所有iscsi连接\niscsiadm -m session\n```\n\n## Debian 格式化并挂载磁盘以及lvm逻辑卷的使用\n\n紧跟上文，iscsi挂载后的卷无法直接使用，需要像磁盘一样进行分区及挂载到系统目录\n\n安装parted：`apt install -y parted`\n\n使用`parted /dev/设备`命令进入磁盘分区管理，随后使用`mklable gpt`将磁盘设置为优秀的`GPT`分区表，然后使用`mkpart 名称 文件系统 起始扇区 结束地址`创建分区，如图：\n\n![20230301165916](https://img.hackerbs.com/20230301165916.png)\n\n其中，2048s是为了将扇区进行对齐，有利于提升性能，而100%则是指定结束地址为最后，100%可以替换为明确的扇区、容量，如9999s（扇区）或100G（容量），同理，起始地址也是如此，如果你需要创建多个分区，则之后的分区起始地址应紧随上一个分区的结束地址。\n\n分区创建完毕后，输入`q`回车即可退出parted，将分区格式化之后即可挂载使用\n\n**但，我在此强烈建议你使用lvm逻辑卷，因为lvm优点有便于容量调整、创建跨区卷等**\n\nlvm卷的使用步骤有创建物理卷，创建卷组，创建逻辑卷\n\n```shell\n# 创建物理卷\npvcreate /dev/设备\n\n# 创建卷组\nvgcreate 卷组名 物理卷\n\n# 创建逻辑卷\nlvcreate -l +100%FREE -n 逻辑卷名 所属卷组名\n```\n\n示例如图：\n\n![20230301170847](https://img.hackerbs.com/20230301170847.png)\n\nlvm的逻辑卷地址位于`/dev/mapper/`下，命名格式为`卷组名-逻辑卷名`，将逻辑卷格式化后即可挂载使用，如图：\n\n![20230301171003](https://img.hackerbs.com/20230301171003.png)\n\n至此，Debian 磁盘分区及lvm逻辑卷教程完毕，如有疑问，欢迎咨询！\n\n## Debian访问SMB服务器\n\n```shell\n# 安装cifs-utils\napt install cifs-utils\n# 使用mount进行挂载\nmount -t cifs -o username=$username //$address/$smbname /$mount_point/\n# 示例\nmount -t cifs -o username=user //10.1.1.1/test /smbTest/\n```\n\n## apt下载deb包及其依赖的办法\n\n使用apt install时加上`--download-only`参数即可实现仅下载而不安装的操作，但是下载的deb包默认是在`/var/cache/apt/archives`目录中，可以使用`-o Dir::Cache::archives=\"/<your dir>\"`参数指定缓存路径。\n\nAPT包管理器在执行操作时会使用lock文件来确保系统中只有一个进程在使用APT。partial目录则是APT在下载和安装软件包时使用的临时目录。所以你会发现在你指定的目录中有`lock`文件和`partial`目录，删除即可，并无影响。\n\n**鉴于你可能是个像我一样有什么大病的强迫症，所以为你提供了禁用lock和partial的办法**\n\n```shell\n-o APT::Get::Lock_Prohibit=1 # 禁用lock文件\n-o Acquire::Pdiffs::NoDownload=true -o Acquire::AllowDowngradeToInsecureRepositories=true -o Acquire::AllowInsecureRepositories=true -o Acquire::NoCDROM=true -o Acquire::NoVerify=true -o Acquire::Check-Valid-Until=false -o Dir::Etc::TrustedParts=\"/path/to/trusted/parts\" -o Dir::Etc::Trusted=/path/to/trusted/dir # 禁用partial目录\n\n# 是的，看花眼了对吧？↓\nAcquire::Pdiffs::NoDownload=true # 禁用差分包下载\nAcquire::AllowDowngradeToInsecureRepositories=true # 允许使用不安全的APT源\nAcquire::AllowInsecureRepositories=true # 允许使用不安全的APT源\nAcquire::NoCDROM=true # 禁用CD-ROM镜像\nAcquire::NoVerify=true # 禁用APT源的GPG验证\nAcquire::Check-Valid-Until=false # 禁用APT源的有效期检查\nDir::Etc::TrustedParts=\"/path/to/trusted/parts\" # 设置APT的可信部件目录\nDir::Etc::Trusted=/path/to/trusted/dir # 设置APT的可信源目录\n\n# 以上操作都是为了避免使用partial目录，这些命令可能会降低APT操作的安全性和可靠性\n# 所以，没什么大病别骚搞，就简单点，下载完了删掉lock和partial即可\n\n# 以下是我下载docker包的命令示范\napt install -o Dir::Cache::archives=\"./\" --download-only docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n---\n\n**重点！！！**\n\n---\n\n上面的办法其实有个很操蛋的地方，如果你的系统已经安装了这个软件包，那么apt并不会为你下载任何deb包，你需要使用下面的办法进行下载\n\n```shell\n# 将其中的<package-name>替换为你要下载的包，比如nmap\n# 注意！命令中有两处<package-name>\napt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances <package-name> | grep \"^\\w\" | sort -u) <package-name>\n# 以下是我下载vim及其依赖的示例\napt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances vim | grep \"^\\w\" | sort -u) vim\n\n# 其中apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances <package-name>\n# 这个命令将返回一个包含软件包及其所有依赖的列表，不包括推荐的软件包和建议的软件包，以及任何冲突、破坏、替换和增强关系\n# grep \"^\\w\"是过滤掉空行和注释行\n# 然后使用 sort -u 命令去重\n```","source":"_posts/Debian基础知识【持续更新】.md","raw":"---\ntitle: Debian基础知识【持续更新】\nkeywords:\n    - Debian\ncategories: [知识库]\ncomments: true\ndate: 2023-03-01 15:45:44\nsticky:\ntags:\n    - Linux\n    - Debian\n---\n\n# 本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\n\n**根据红帽的公告，CentOS将不再适合作为生产环境的稳定系统使用，为此我个人建议您尝试著名且优秀的Debian系统**\n\n<!-- more -->\n\n>2020年12月08日，CentOS官方宣布了停止维护CentOS Linux 8的计划，并推出了CentOS Stream项目。具体信息，请阅读CentOS官方公告。其具体规划如下：\n>\n> - CentOS Linux 8作为RHEL 8的复刻版本，生命周期缩短，于2021年12月31日停止更新并停止维护（EOL）。\n> - 基于以上官方变更计划，CentOS Linux 8用户将无法获得包括问题修复和功能更新在内的任何软件维护和支持。CentOS官方建议停止维护后：对于开发或测试环境，可以将环境迁移至CentOS Stream版本； 对于生产环境或部署关键业务的系统，建议使用稳定的Red Hat Enterprise Linux。对此，用户需评估以下问题：\n> - CentOS Stream是一个滚动发行的版本，仅为RHEL前置测试版，运用于生产环境时，可能存在一定风险。\n> [亚马逊云科技上在CentOS在停止维护后的几种选择](https://aws.amazon.com/cn/blogs/china/aws-choices-for-centos-after-stopping-maintenance/)\n\n---\n\n## Debian 更换国内源\n\n在使用过阿里云、网易163、清华、中科大源之后，我个人建议更换为中科大源，Debian更换源的方式非常简单，在此非常感谢[sNullp先生](https://github.com/snullp)的[源配置生成器](https://mirrors.ustc.edu.cn/repogen/)!\n\n在使用该配置生成器之前，你需要先确认你的Debian版本，使用`cat /etc/os-release`命令，在输出的结果中找到`VERSION_CODENAME=bullseye`，位于`=`后面的就是你的版本代号，如图：\n\n![20230301160807](https://img.hackerbs.com/20230301160807.png)\n\n然后打开[源配置生成器](https://mirrors.ustc.edu.cn/repogen/)，找到Debian并选择你对应的版本号，如图：\n\n![20230301161044](https://img.hackerbs.com/20230301161044.png)\n\n其中，HTTPS/HTTP不必赘述，就是字母意思，而IPv4也很好理解，就是选择IPv4或IPv6地址访问，默认HTTPS和IPv4即可\n\n复制红框中的内容后，回到你的Debian系统，使用`vim /etc/apt/sources.list`命令编辑apt源配置文件，如果提示`-bash: /usr/bin/vim: No such file or directory`则是因为你没有安装`vim`编辑器，我强烈建议你安装`vim`编辑器，如果暂时无法安装，也可使用`nano`编辑器，对应命令为`nano /etc/apt/sources.list`，使用编辑器打开`sources.list`文件后，如果你是`vim`编辑器，则可以将光标移到首行，然后按`d`再按`Shift+G`即可直接清空内容，然后粘贴你在源配置生成器复制的红框中内容即可，如图：\n\n![20230301161642](https://img.hackerbs.com/20230301161642.png)\n\n`vim`编辑器在编辑完成后按`ESC`再输入`:wq`回车即可退出保存，编辑器的操作方式在此不过多赘述。\n\n完成源配置文件的编辑后，还需要使用`apt update`命令更新源，至此，Debian更换中科大源的教程结束。\n\n## Debian iSCSI挂载卷\n\n首先，你需要安装`open-iscsi`，使用`apt install -y open-iscsi`进行安装，然后运行`iscsiadm -m discovery -t st -p 服务器地址`探测服务器发布的卷，如图：\n\n![20230301162849](https://img.hackerbs.com/20230301162849.png)\n\n随后使用`iscsiadm -m node -T iqn开头的对应地址 -p 服务器地址 -l`即可完成挂载，如图：\n\n![20230301164715](https://img.hackerbs.com/20230301164715.png)\n\n随后使用`lsblk`命令发现新的磁盘，如图：\n\n![20230301164844](https://img.hackerbs.com/20230301164844.png)\n\n扩展内容：\n\n```shell\n# 自动挂载\niscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 --op update -n node.startup -v automatic\n\n# 解除挂载\niscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 -u\n\n# 解除所有连接\niscsiadm -m node --logoutall=all\n\n# 查看所有iscsi连接\niscsiadm -m session\n```\n\n## Debian 格式化并挂载磁盘以及lvm逻辑卷的使用\n\n紧跟上文，iscsi挂载后的卷无法直接使用，需要像磁盘一样进行分区及挂载到系统目录\n\n安装parted：`apt install -y parted`\n\n使用`parted /dev/设备`命令进入磁盘分区管理，随后使用`mklable gpt`将磁盘设置为优秀的`GPT`分区表，然后使用`mkpart 名称 文件系统 起始扇区 结束地址`创建分区，如图：\n\n![20230301165916](https://img.hackerbs.com/20230301165916.png)\n\n其中，2048s是为了将扇区进行对齐，有利于提升性能，而100%则是指定结束地址为最后，100%可以替换为明确的扇区、容量，如9999s（扇区）或100G（容量），同理，起始地址也是如此，如果你需要创建多个分区，则之后的分区起始地址应紧随上一个分区的结束地址。\n\n分区创建完毕后，输入`q`回车即可退出parted，将分区格式化之后即可挂载使用\n\n**但，我在此强烈建议你使用lvm逻辑卷，因为lvm优点有便于容量调整、创建跨区卷等**\n\nlvm卷的使用步骤有创建物理卷，创建卷组，创建逻辑卷\n\n```shell\n# 创建物理卷\npvcreate /dev/设备\n\n# 创建卷组\nvgcreate 卷组名 物理卷\n\n# 创建逻辑卷\nlvcreate -l +100%FREE -n 逻辑卷名 所属卷组名\n```\n\n示例如图：\n\n![20230301170847](https://img.hackerbs.com/20230301170847.png)\n\nlvm的逻辑卷地址位于`/dev/mapper/`下，命名格式为`卷组名-逻辑卷名`，将逻辑卷格式化后即可挂载使用，如图：\n\n![20230301171003](https://img.hackerbs.com/20230301171003.png)\n\n至此，Debian 磁盘分区及lvm逻辑卷教程完毕，如有疑问，欢迎咨询！\n\n## Debian访问SMB服务器\n\n```shell\n# 安装cifs-utils\napt install cifs-utils\n# 使用mount进行挂载\nmount -t cifs -o username=$username //$address/$smbname /$mount_point/\n# 示例\nmount -t cifs -o username=user //10.1.1.1/test /smbTest/\n```\n\n## apt下载deb包及其依赖的办法\n\n使用apt install时加上`--download-only`参数即可实现仅下载而不安装的操作，但是下载的deb包默认是在`/var/cache/apt/archives`目录中，可以使用`-o Dir::Cache::archives=\"/<your dir>\"`参数指定缓存路径。\n\nAPT包管理器在执行操作时会使用lock文件来确保系统中只有一个进程在使用APT。partial目录则是APT在下载和安装软件包时使用的临时目录。所以你会发现在你指定的目录中有`lock`文件和`partial`目录，删除即可，并无影响。\n\n**鉴于你可能是个像我一样有什么大病的强迫症，所以为你提供了禁用lock和partial的办法**\n\n```shell\n-o APT::Get::Lock_Prohibit=1 # 禁用lock文件\n-o Acquire::Pdiffs::NoDownload=true -o Acquire::AllowDowngradeToInsecureRepositories=true -o Acquire::AllowInsecureRepositories=true -o Acquire::NoCDROM=true -o Acquire::NoVerify=true -o Acquire::Check-Valid-Until=false -o Dir::Etc::TrustedParts=\"/path/to/trusted/parts\" -o Dir::Etc::Trusted=/path/to/trusted/dir # 禁用partial目录\n\n# 是的，看花眼了对吧？↓\nAcquire::Pdiffs::NoDownload=true # 禁用差分包下载\nAcquire::AllowDowngradeToInsecureRepositories=true # 允许使用不安全的APT源\nAcquire::AllowInsecureRepositories=true # 允许使用不安全的APT源\nAcquire::NoCDROM=true # 禁用CD-ROM镜像\nAcquire::NoVerify=true # 禁用APT源的GPG验证\nAcquire::Check-Valid-Until=false # 禁用APT源的有效期检查\nDir::Etc::TrustedParts=\"/path/to/trusted/parts\" # 设置APT的可信部件目录\nDir::Etc::Trusted=/path/to/trusted/dir # 设置APT的可信源目录\n\n# 以上操作都是为了避免使用partial目录，这些命令可能会降低APT操作的安全性和可靠性\n# 所以，没什么大病别骚搞，就简单点，下载完了删掉lock和partial即可\n\n# 以下是我下载docker包的命令示范\napt install -o Dir::Cache::archives=\"./\" --download-only docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n---\n\n**重点！！！**\n\n---\n\n上面的办法其实有个很操蛋的地方，如果你的系统已经安装了这个软件包，那么apt并不会为你下载任何deb包，你需要使用下面的办法进行下载\n\n```shell\n# 将其中的<package-name>替换为你要下载的包，比如nmap\n# 注意！命令中有两处<package-name>\napt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances <package-name> | grep \"^\\w\" | sort -u) <package-name>\n# 以下是我下载vim及其依赖的示例\napt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances vim | grep \"^\\w\" | sort -u) vim\n\n# 其中apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances <package-name>\n# 这个命令将返回一个包含软件包及其所有依赖的列表，不包括推荐的软件包和建议的软件包，以及任何冲突、破坏、替换和增强关系\n# grep \"^\\w\"是过滤掉空行和注释行\n# 然后使用 sort -u 命令去重\n```","slug":"Debian基础知识【持续更新】","published":1,"updated":"2025-09-04T06:44:07.220Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtm00059szw9j7u98up","content":"<h1 id=\"本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\"><a href=\"#本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\" class=\"headerlink\" title=\"本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\"></a>本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我</h1><p><strong>根据红帽的公告，CentOS将不再适合作为生产环境的稳定系统使用，为此我个人建议您尝试著名且优秀的Debian系统</strong></p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>2020年12月08日，CentOS官方宣布了停止维护CentOS Linux 8的计划，并推出了CentOS Stream项目。具体信息，请阅读CentOS官方公告。其具体规划如下：</p>\n<ul>\n<li>CentOS Linux 8作为RHEL 8的复刻版本，生命周期缩短，于2021年12月31日停止更新并停止维护（EOL）。</li>\n<li>基于以上官方变更计划，CentOS Linux 8用户将无法获得包括问题修复和功能更新在内的任何软件维护和支持。CentOS官方建议停止维护后：对于开发或测试环境，可以将环境迁移至CentOS Stream版本； 对于生产环境或部署关键业务的系统，建议使用稳定的Red Hat Enterprise Linux。对此，用户需评估以下问题：</li>\n<li>CentOS Stream是一个滚动发行的版本，仅为RHEL前置测试版，运用于生产环境时，可能存在一定风险。<br><a href=\"https://aws.amazon.com/cn/blogs/china/aws-choices-for-centos-after-stopping-maintenance/\">亚马逊云科技上在CentOS在停止维护后的几种选择</a></li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"Debian-更换国内源\"><a href=\"#Debian-更换国内源\" class=\"headerlink\" title=\"Debian 更换国内源\"></a>Debian 更换国内源</h2><p>在使用过阿里云、网易163、清华、中科大源之后，我个人建议更换为中科大源，Debian更换源的方式非常简单，在此非常感谢<a href=\"https://github.com/snullp\">sNullp先生</a>的<a href=\"https://mirrors.ustc.edu.cn/repogen/\">源配置生成器</a>!</p>\n<p>在使用该配置生成器之前，你需要先确认你的Debian版本，使用<code>cat /etc/os-release</code>命令，在输出的结果中找到<code>VERSION_CODENAME=bullseye</code>，位于<code>=</code>后面的就是你的版本代号，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301160807.png\" alt=\"20230301160807\"></p>\n<p>然后打开<a href=\"https://mirrors.ustc.edu.cn/repogen/\">源配置生成器</a>，找到Debian并选择你对应的版本号，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301161044.png\" alt=\"20230301161044\"></p>\n<p>其中，HTTPS&#x2F;HTTP不必赘述，就是字母意思，而IPv4也很好理解，就是选择IPv4或IPv6地址访问，默认HTTPS和IPv4即可</p>\n<p>复制红框中的内容后，回到你的Debian系统，使用<code>vim /etc/apt/sources.list</code>命令编辑apt源配置文件，如果提示<code>-bash: /usr/bin/vim: No such file or directory</code>则是因为你没有安装<code>vim</code>编辑器，我强烈建议你安装<code>vim</code>编辑器，如果暂时无法安装，也可使用<code>nano</code>编辑器，对应命令为<code>nano /etc/apt/sources.list</code>，使用编辑器打开<code>sources.list</code>文件后，如果你是<code>vim</code>编辑器，则可以将光标移到首行，然后按<code>d</code>再按<code>Shift+G</code>即可直接清空内容，然后粘贴你在源配置生成器复制的红框中内容即可，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301161642.png\" alt=\"20230301161642\"></p>\n<p><code>vim</code>编辑器在编辑完成后按<code>ESC</code>再输入<code>:wq</code>回车即可退出保存，编辑器的操作方式在此不过多赘述。</p>\n<p>完成源配置文件的编辑后，还需要使用<code>apt update</code>命令更新源，至此，Debian更换中科大源的教程结束。</p>\n<h2 id=\"Debian-iSCSI挂载卷\"><a href=\"#Debian-iSCSI挂载卷\" class=\"headerlink\" title=\"Debian iSCSI挂载卷\"></a>Debian iSCSI挂载卷</h2><p>首先，你需要安装<code>open-iscsi</code>，使用<code>apt install -y open-iscsi</code>进行安装，然后运行<code>iscsiadm -m discovery -t st -p 服务器地址</code>探测服务器发布的卷，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301162849.png\" alt=\"20230301162849\"></p>\n<p>随后使用<code>iscsiadm -m node -T iqn开头的对应地址 -p 服务器地址 -l</code>即可完成挂载，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301164715.png\" alt=\"20230301164715\"></p>\n<p>随后使用<code>lsblk</code>命令发现新的磁盘，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301164844.png\" alt=\"20230301164844\"></p>\n<p>扩展内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动挂载</span></span><br><span class=\"line\">iscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 --op update -n node.startup -v automatic</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解除挂载</span></span><br><span class=\"line\">iscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 -u</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解除所有连接</span></span><br><span class=\"line\">iscsiadm -m node --logoutall=all</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看所有iscsi连接</span></span><br><span class=\"line\">iscsiadm -m session</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Debian-格式化并挂载磁盘以及lvm逻辑卷的使用\"><a href=\"#Debian-格式化并挂载磁盘以及lvm逻辑卷的使用\" class=\"headerlink\" title=\"Debian 格式化并挂载磁盘以及lvm逻辑卷的使用\"></a>Debian 格式化并挂载磁盘以及lvm逻辑卷的使用</h2><p>紧跟上文，iscsi挂载后的卷无法直接使用，需要像磁盘一样进行分区及挂载到系统目录</p>\n<p>安装parted：<code>apt install -y parted</code></p>\n<p>使用<code>parted /dev/设备</code>命令进入磁盘分区管理，随后使用<code>mklable gpt</code>将磁盘设置为优秀的<code>GPT</code>分区表，然后使用<code>mkpart 名称 文件系统 起始扇区 结束地址</code>创建分区，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301165916.png\" alt=\"20230301165916\"></p>\n<p>其中，2048s是为了将扇区进行对齐，有利于提升性能，而100%则是指定结束地址为最后，100%可以替换为明确的扇区、容量，如9999s（扇区）或100G（容量），同理，起始地址也是如此，如果你需要创建多个分区，则之后的分区起始地址应紧随上一个分区的结束地址。</p>\n<p>分区创建完毕后，输入<code>q</code>回车即可退出parted，将分区格式化之后即可挂载使用</p>\n<p><strong>但，我在此强烈建议你使用lvm逻辑卷，因为lvm优点有便于容量调整、创建跨区卷等</strong></p>\n<p>lvm卷的使用步骤有创建物理卷，创建卷组，创建逻辑卷</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建物理卷</span></span><br><span class=\"line\">pvcreate /dev/设备</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建卷组</span></span><br><span class=\"line\">vgcreate 卷组名 物理卷</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建逻辑卷</span></span><br><span class=\"line\">lvcreate -l +100%FREE -n 逻辑卷名 所属卷组名</span><br></pre></td></tr></table></figure>\n\n<p>示例如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301170847.png\" alt=\"20230301170847\"></p>\n<p>lvm的逻辑卷地址位于<code>/dev/mapper/</code>下，命名格式为<code>卷组名-逻辑卷名</code>，将逻辑卷格式化后即可挂载使用，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301171003.png\" alt=\"20230301171003\"></p>\n<p>至此，Debian 磁盘分区及lvm逻辑卷教程完毕，如有疑问，欢迎咨询！</p>\n<h2 id=\"Debian访问SMB服务器\"><a href=\"#Debian访问SMB服务器\" class=\"headerlink\" title=\"Debian访问SMB服务器\"></a>Debian访问SMB服务器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装cifs-utils</span></span><br><span class=\"line\">apt install cifs-utils</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用mount进行挂载</span></span><br><span class=\"line\">mount -t cifs -o username=$username //$address/$smbname /$mount_point/</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例</span></span><br><span class=\"line\">mount -t cifs -o username=user //10.1.1.1/test /smbTest/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt下载deb包及其依赖的办法\"><a href=\"#apt下载deb包及其依赖的办法\" class=\"headerlink\" title=\"apt下载deb包及其依赖的办法\"></a>apt下载deb包及其依赖的办法</h2><p>使用apt install时加上<code>--download-only</code>参数即可实现仅下载而不安装的操作，但是下载的deb包默认是在<code>/var/cache/apt/archives</code>目录中，可以使用<code>-o Dir::Cache::archives=&quot;/&lt;your dir&gt;&quot;</code>参数指定缓存路径。</p>\n<p>APT包管理器在执行操作时会使用lock文件来确保系统中只有一个进程在使用APT。partial目录则是APT在下载和安装软件包时使用的临时目录。所以你会发现在你指定的目录中有<code>lock</code>文件和<code>partial</code>目录，删除即可，并无影响。</p>\n<p><strong>鉴于你可能是个像我一样有什么大病的强迫症，所以为你提供了禁用lock和partial的办法</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-o APT::Get::Lock_Prohibit=1 # 禁用lock文件</span><br><span class=\"line\">-o Acquire::Pdiffs::NoDownload=true -o Acquire::AllowDowngradeToInsecureRepositories=true -o Acquire::AllowInsecureRepositories=true -o Acquire::NoCDROM=true -o Acquire::NoVerify=true -o Acquire::Check-Valid-Until=false -o Dir::Etc::TrustedParts=&quot;/path/to/trusted/parts&quot; -o Dir::Etc::Trusted=/path/to/trusted/dir # 禁用partial目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">是的，看花眼了对吧？↓</span></span><br><span class=\"line\">Acquire::Pdiffs::NoDownload=true # 禁用差分包下载</span><br><span class=\"line\">Acquire::AllowDowngradeToInsecureRepositories=true # 允许使用不安全的APT源</span><br><span class=\"line\">Acquire::AllowInsecureRepositories=true # 允许使用不安全的APT源</span><br><span class=\"line\">Acquire::NoCDROM=true # 禁用CD-ROM镜像</span><br><span class=\"line\">Acquire::NoVerify=true # 禁用APT源的GPG验证</span><br><span class=\"line\">Acquire::Check-Valid-Until=false # 禁用APT源的有效期检查</span><br><span class=\"line\">Dir::Etc::TrustedParts=&quot;/path/to/trusted/parts&quot; # 设置APT的可信部件目录</span><br><span class=\"line\">Dir::Etc::Trusted=/path/to/trusted/dir # 设置APT的可信源目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以上操作都是为了避免使用partial目录，这些命令可能会降低APT操作的安全性和可靠性</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">所以，没什么大病别骚搞，就简单点，下载完了删掉lock和partial即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下是我下载docker包的命令示范</span></span><br><span class=\"line\">apt install -o Dir::Cache::archives=&quot;./&quot; --download-only docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><strong>重点！！！</strong></p>\n<hr>\n<p>上面的办法其实有个很操蛋的地方，如果你的系统已经安装了这个软件包，那么apt并不会为你下载任何deb包，你需要使用下面的办法进行下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将其中的&lt;package-name&gt;替换为你要下载的包，比如nmap</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注意！命令中有两处&lt;package-name&gt;</span></span><br><span class=\"line\">apt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances &lt;package-name&gt; | grep &quot;^\\w&quot; | sort -u) &lt;package-name&gt;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下是我下载vim及其依赖的示例</span></span><br><span class=\"line\">apt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances vim | grep &quot;^\\w&quot; | sort -u) vim</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances &lt;package-name&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">这个命令将返回一个包含软件包及其所有依赖的列表，不包括推荐的软件包和建议的软件包，以及任何冲突、破坏、替换和增强关系</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">grep <span class=\"string\">&quot;^\\w&quot;</span>是过滤掉空行和注释行</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">然后使用 <span class=\"built_in\">sort</span> -u 命令去重</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":2117,"excerpt":"<h1 id=\"本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\"><a href=\"#本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\" class=\"headerlink\" title=\"本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我\"></a>本文将持续更新Debian系统的各类基础知识，欢迎您持续关注，有任何问题可以在本页末尾评论或通过展示的联系方式联系我</h1><p><strong>根据红帽的公告，CentOS将不再适合作为生产环境的稳定系统使用，为此我个人建议您尝试著名且优秀的Debian系统</strong></p>","more":"<blockquote>\n<p>2020年12月08日，CentOS官方宣布了停止维护CentOS Linux 8的计划，并推出了CentOS Stream项目。具体信息，请阅读CentOS官方公告。其具体规划如下：</p>\n<ul>\n<li>CentOS Linux 8作为RHEL 8的复刻版本，生命周期缩短，于2021年12月31日停止更新并停止维护（EOL）。</li>\n<li>基于以上官方变更计划，CentOS Linux 8用户将无法获得包括问题修复和功能更新在内的任何软件维护和支持。CentOS官方建议停止维护后：对于开发或测试环境，可以将环境迁移至CentOS Stream版本； 对于生产环境或部署关键业务的系统，建议使用稳定的Red Hat Enterprise Linux。对此，用户需评估以下问题：</li>\n<li>CentOS Stream是一个滚动发行的版本，仅为RHEL前置测试版，运用于生产环境时，可能存在一定风险。<br><a href=\"https://aws.amazon.com/cn/blogs/china/aws-choices-for-centos-after-stopping-maintenance/\">亚马逊云科技上在CentOS在停止维护后的几种选择</a></li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"Debian-更换国内源\"><a href=\"#Debian-更换国内源\" class=\"headerlink\" title=\"Debian 更换国内源\"></a>Debian 更换国内源</h2><p>在使用过阿里云、网易163、清华、中科大源之后，我个人建议更换为中科大源，Debian更换源的方式非常简单，在此非常感谢<a href=\"https://github.com/snullp\">sNullp先生</a>的<a href=\"https://mirrors.ustc.edu.cn/repogen/\">源配置生成器</a>!</p>\n<p>在使用该配置生成器之前，你需要先确认你的Debian版本，使用<code>cat /etc/os-release</code>命令，在输出的结果中找到<code>VERSION_CODENAME=bullseye</code>，位于<code>=</code>后面的就是你的版本代号，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301160807.png\" alt=\"20230301160807\"></p>\n<p>然后打开<a href=\"https://mirrors.ustc.edu.cn/repogen/\">源配置生成器</a>，找到Debian并选择你对应的版本号，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301161044.png\" alt=\"20230301161044\"></p>\n<p>其中，HTTPS&#x2F;HTTP不必赘述，就是字母意思，而IPv4也很好理解，就是选择IPv4或IPv6地址访问，默认HTTPS和IPv4即可</p>\n<p>复制红框中的内容后，回到你的Debian系统，使用<code>vim /etc/apt/sources.list</code>命令编辑apt源配置文件，如果提示<code>-bash: /usr/bin/vim: No such file or directory</code>则是因为你没有安装<code>vim</code>编辑器，我强烈建议你安装<code>vim</code>编辑器，如果暂时无法安装，也可使用<code>nano</code>编辑器，对应命令为<code>nano /etc/apt/sources.list</code>，使用编辑器打开<code>sources.list</code>文件后，如果你是<code>vim</code>编辑器，则可以将光标移到首行，然后按<code>d</code>再按<code>Shift+G</code>即可直接清空内容，然后粘贴你在源配置生成器复制的红框中内容即可，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301161642.png\" alt=\"20230301161642\"></p>\n<p><code>vim</code>编辑器在编辑完成后按<code>ESC</code>再输入<code>:wq</code>回车即可退出保存，编辑器的操作方式在此不过多赘述。</p>\n<p>完成源配置文件的编辑后，还需要使用<code>apt update</code>命令更新源，至此，Debian更换中科大源的教程结束。</p>\n<h2 id=\"Debian-iSCSI挂载卷\"><a href=\"#Debian-iSCSI挂载卷\" class=\"headerlink\" title=\"Debian iSCSI挂载卷\"></a>Debian iSCSI挂载卷</h2><p>首先，你需要安装<code>open-iscsi</code>，使用<code>apt install -y open-iscsi</code>进行安装，然后运行<code>iscsiadm -m discovery -t st -p 服务器地址</code>探测服务器发布的卷，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301162849.png\" alt=\"20230301162849\"></p>\n<p>随后使用<code>iscsiadm -m node -T iqn开头的对应地址 -p 服务器地址 -l</code>即可完成挂载，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301164715.png\" alt=\"20230301164715\"></p>\n<p>随后使用<code>lsblk</code>命令发现新的磁盘，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301164844.png\" alt=\"20230301164844\"></p>\n<p>扩展内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动挂载</span></span><br><span class=\"line\">iscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 --op update -n node.startup -v automatic</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解除挂载</span></span><br><span class=\"line\">iscsiadm -m node -T iqn地址:目标 -p 服务器地址:端口 -u</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解除所有连接</span></span><br><span class=\"line\">iscsiadm -m node --logoutall=all</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看所有iscsi连接</span></span><br><span class=\"line\">iscsiadm -m session</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Debian-格式化并挂载磁盘以及lvm逻辑卷的使用\"><a href=\"#Debian-格式化并挂载磁盘以及lvm逻辑卷的使用\" class=\"headerlink\" title=\"Debian 格式化并挂载磁盘以及lvm逻辑卷的使用\"></a>Debian 格式化并挂载磁盘以及lvm逻辑卷的使用</h2><p>紧跟上文，iscsi挂载后的卷无法直接使用，需要像磁盘一样进行分区及挂载到系统目录</p>\n<p>安装parted：<code>apt install -y parted</code></p>\n<p>使用<code>parted /dev/设备</code>命令进入磁盘分区管理，随后使用<code>mklable gpt</code>将磁盘设置为优秀的<code>GPT</code>分区表，然后使用<code>mkpart 名称 文件系统 起始扇区 结束地址</code>创建分区，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301165916.png\" alt=\"20230301165916\"></p>\n<p>其中，2048s是为了将扇区进行对齐，有利于提升性能，而100%则是指定结束地址为最后，100%可以替换为明确的扇区、容量，如9999s（扇区）或100G（容量），同理，起始地址也是如此，如果你需要创建多个分区，则之后的分区起始地址应紧随上一个分区的结束地址。</p>\n<p>分区创建完毕后，输入<code>q</code>回车即可退出parted，将分区格式化之后即可挂载使用</p>\n<p><strong>但，我在此强烈建议你使用lvm逻辑卷，因为lvm优点有便于容量调整、创建跨区卷等</strong></p>\n<p>lvm卷的使用步骤有创建物理卷，创建卷组，创建逻辑卷</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建物理卷</span></span><br><span class=\"line\">pvcreate /dev/设备</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建卷组</span></span><br><span class=\"line\">vgcreate 卷组名 物理卷</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建逻辑卷</span></span><br><span class=\"line\">lvcreate -l +100%FREE -n 逻辑卷名 所属卷组名</span><br></pre></td></tr></table></figure>\n\n<p>示例如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301170847.png\" alt=\"20230301170847\"></p>\n<p>lvm的逻辑卷地址位于<code>/dev/mapper/</code>下，命名格式为<code>卷组名-逻辑卷名</code>，将逻辑卷格式化后即可挂载使用，如图：</p>\n<p><img src=\"https://img.hackerbs.com/20230301171003.png\" alt=\"20230301171003\"></p>\n<p>至此，Debian 磁盘分区及lvm逻辑卷教程完毕，如有疑问，欢迎咨询！</p>\n<h2 id=\"Debian访问SMB服务器\"><a href=\"#Debian访问SMB服务器\" class=\"headerlink\" title=\"Debian访问SMB服务器\"></a>Debian访问SMB服务器</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装cifs-utils</span></span><br><span class=\"line\">apt install cifs-utils</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用mount进行挂载</span></span><br><span class=\"line\">mount -t cifs -o username=$username //$address/$smbname /$mount_point/</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例</span></span><br><span class=\"line\">mount -t cifs -o username=user //10.1.1.1/test /smbTest/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt下载deb包及其依赖的办法\"><a href=\"#apt下载deb包及其依赖的办法\" class=\"headerlink\" title=\"apt下载deb包及其依赖的办法\"></a>apt下载deb包及其依赖的办法</h2><p>使用apt install时加上<code>--download-only</code>参数即可实现仅下载而不安装的操作，但是下载的deb包默认是在<code>/var/cache/apt/archives</code>目录中，可以使用<code>-o Dir::Cache::archives=&quot;/&lt;your dir&gt;&quot;</code>参数指定缓存路径。</p>\n<p>APT包管理器在执行操作时会使用lock文件来确保系统中只有一个进程在使用APT。partial目录则是APT在下载和安装软件包时使用的临时目录。所以你会发现在你指定的目录中有<code>lock</code>文件和<code>partial</code>目录，删除即可，并无影响。</p>\n<p><strong>鉴于你可能是个像我一样有什么大病的强迫症，所以为你提供了禁用lock和partial的办法</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-o APT::Get::Lock_Prohibit=1 # 禁用lock文件</span><br><span class=\"line\">-o Acquire::Pdiffs::NoDownload=true -o Acquire::AllowDowngradeToInsecureRepositories=true -o Acquire::AllowInsecureRepositories=true -o Acquire::NoCDROM=true -o Acquire::NoVerify=true -o Acquire::Check-Valid-Until=false -o Dir::Etc::TrustedParts=&quot;/path/to/trusted/parts&quot; -o Dir::Etc::Trusted=/path/to/trusted/dir # 禁用partial目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">是的，看花眼了对吧？↓</span></span><br><span class=\"line\">Acquire::Pdiffs::NoDownload=true # 禁用差分包下载</span><br><span class=\"line\">Acquire::AllowDowngradeToInsecureRepositories=true # 允许使用不安全的APT源</span><br><span class=\"line\">Acquire::AllowInsecureRepositories=true # 允许使用不安全的APT源</span><br><span class=\"line\">Acquire::NoCDROM=true # 禁用CD-ROM镜像</span><br><span class=\"line\">Acquire::NoVerify=true # 禁用APT源的GPG验证</span><br><span class=\"line\">Acquire::Check-Valid-Until=false # 禁用APT源的有效期检查</span><br><span class=\"line\">Dir::Etc::TrustedParts=&quot;/path/to/trusted/parts&quot; # 设置APT的可信部件目录</span><br><span class=\"line\">Dir::Etc::Trusted=/path/to/trusted/dir # 设置APT的可信源目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以上操作都是为了避免使用partial目录，这些命令可能会降低APT操作的安全性和可靠性</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">所以，没什么大病别骚搞，就简单点，下载完了删掉lock和partial即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下是我下载docker包的命令示范</span></span><br><span class=\"line\">apt install -o Dir::Cache::archives=&quot;./&quot; --download-only docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><strong>重点！！！</strong></p>\n<hr>\n<p>上面的办法其实有个很操蛋的地方，如果你的系统已经安装了这个软件包，那么apt并不会为你下载任何deb包，你需要使用下面的办法进行下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将其中的&lt;package-name&gt;替换为你要下载的包，比如nmap</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注意！命令中有两处&lt;package-name&gt;</span></span><br><span class=\"line\">apt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances &lt;package-name&gt; | grep &quot;^\\w&quot; | sort -u) &lt;package-name&gt;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下是我下载vim及其依赖的示例</span></span><br><span class=\"line\">apt download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances vim | grep &quot;^\\w&quot; | sort -u) vim</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances &lt;package-name&gt;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">这个命令将返回一个包含软件包及其所有依赖的列表，不包括推荐的软件包和建议的软件包，以及任何冲突、破坏、替换和增强关系</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">grep <span class=\"string\">&quot;^\\w&quot;</span>是过滤掉空行和注释行</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">然后使用 <span class=\"built_in\">sort</span> -u 命令去重</span></span><br></pre></td></tr></table></figure>"},{"title":"IT基础知识百科","sticky":null,"comments":1,"date":"2024-04-05T13:08:47.000Z","keywords":["基础","IT知识","百科"],"_content":"\n## 常见的SAS线缆\n\n[一个非常优秀的、介绍各种线缆知识的网站](https://cs-electronics.com/)\n\n### SFF-8643 & MINI SAS HD\n\n**通常JBOD磁盘柜使用的，在机箱外部连接的有保护壳的是SFF-8644**\n\n<!-- more -->\n\n![2022-10-25-10-45-40](https://img.hackerbs.com/2022-10-25-10-45-40.png)\n\n### SFF-8087 & MINI SAS\n\n![2022-10-25-10-46-10](https://img.hackerbs.com/2022-10-25-10-46-10.png)\n\n### SFF-8654 & SLIM SAS\n\nYGR-822平台便有大量SlimSAS用于PCIe扩展连接\n\n![2022-10-25-10-44-50](https://img.hackerbs.com/2022-10-25-10-44-50.png)\n\n## 机房最常见的光纤及其模块和名称\n\n### 最最最普遍的万兆光纤\n\n![20240405213514](https://img.hackerbs.com//20240405213514.png)\n\n外观上可以分辨的：两头都是LC接口\n\n重要参数：\n1. 频率：850nm\n2. 模式：多模\n3. 距离：<300m\n4. 规格：OM3\n\n规格参数（OM）解读：\n\n|规格|10Gb传输距离（米）|性能|带宽|颜色|\n|---|---|---|---|---|\n|OM3|300|10Gb/s|2000MHz/KM|水蓝色|\n|OM4|550|40/100Gb/s|4700MHz/KM|水蓝色|\n|OM5|550|40/100/200/400Gb/s|28000MHz/KM|水绿色|\n\n### 机房常见光模块\n\n|型号|俗称|速率|补充|\n|---|---|---|---|\n|SFP|千兆光模块|100~4000Mb/s|淘汰产品|\n|SFP+|万兆光模块|10Gb/s|主流产品，机房常用LC接口|\n|SFP28|25G光模块|25Gb/s|比较常用|\n|QSFP+|40G光模块|40Gb/s|还行|\n|QSFP28|100G光模块|100Gb/s|很牛逼|\n\n## 网线类型\n\n|规格|俗称|传输速度|频率带宽|传输距离m|\n|---|---|---|---|---|\n|CAT5|五类|100Mbps|100MHz|100|\n|CAT5E|超五类|1000Mbps|100MHz|100（1Gbps）|\n|CAT6|六类|10Gbps|250MHz|55（10Gbps）|\n|CAT6A|超六类|10Gbps|500MHz|100（10Gbps）|\n|CAT7|七类|10Gbps|600Mhz|100（10Gbps）|\n|CAT8|八类|25/40Gbps|2000MHz|30|\n\n非屏蔽：UTP（不抗干扰）\n屏蔽：STP（抗干扰，前提是设备必须接地，否则电磁干扰会在屏蔽层内反弹加剧干扰）\n\n## 内存类型\n\n|型号|俗称|区别|\n|---|---|---|\n|non-ECC|普条|家用，没有数据纠错功能|\n|SODIMM|小内存|笔记本用|\n|unbuffered-ECC/UDIMM|服务器条|服务器专用，带ECC纠错但没有缓存寄存器，家用电脑、不支持ECC的主板均无法使用|\n|REG ECC/RDIMM|大容量内存|服务器专用，因为大容量颗粒CPU无法直接驱动，所以需要一颗寄存器来做中转，常见于32GB以上内存|\n|LRDIMM|低电压大容量内存|服务器专用，通过使用简单寄存器降低供电需求从而支持更大容量更多颗粒，常见于128G内存条|\n|DDR2|2代内存|频率：400-1066MHz|古董|\n|DDR3|3代内存|频率：800-2133MHz|尚有一站之力|\n|DDR4|4代内存|频率：1600-3200MHz|主流|\n|DDR5|5代内存|频率：3000-4000MHz（现在普遍用MT/s为单位，也就是6000-8000MT/s）|最新最屌的内存|\n\nIntel除至强CPU外均不支持ECC内存\n\nAMD部分Ryzen消费级CPU也支持ECC，以实际说明为准\n\n小知识：观察内存条颗粒，单侧颗粒数量为偶数（通常为8颗）的，就是家用non-ECC内存，ECC内存则会多一颗颗粒用于数据校验（有点像RAID5），而有一大堆颗粒，其中还有一颗与众不同的大颗粒的，不用怀疑，那就是服务器专用的大容量RECC内存\n\n花里胡哨的家用金士顿屌炸天DDR5 8000MT/s内存\n\n![花里胡哨的家用金士顿屌炸天DDR5 8000MT/s内存](https://img.hackerbs.com//20240405222648.png)\n\n服务器RECC内存，中间那个大颗粒就是缓存寄存器\n\n![服务器RECC内存，中间那个大颗粒就是缓存寄存器](https://img.hackerbs.com//20240405222930.png)\n\n## 硬盘类型\n\nHDD：Hard Disk Drive，硬盘驱动器，传统硬盘，俗称机械硬盘\nSSD：Solid State Drive，固态硬盘\n\n|接口|类型|速度|特点|\n|---|---|---|---|\n|SATA|HDD|100-250MB/s|便宜皮实容量大，但速度慢|\n|SAS|HDD|100-1200MB/s|貌似是个挺鸡肋的东西？技术更新迭代的过渡品？|\n|SATA|SSD|300-600MB/s|性价比相对较高，基本一个顶4个机械|\n|NVMe M.2|SSD|500-3500MB/s|价格比较高，速度非常快，体积也小，现在的主流硬盘|\n|U.2(SFF-8639)|SSD|1000-5000MB/s|价格超高，性能超屌，高端存储常用|\n\n|接口|尺寸|\n|---|---|\n|SATA|机械盘：3.5/2.5寸，SSD：2.5寸|\n|SAS|机械盘：3.5/2.5寸|\n|m.2|常见：2226/2230/2242/2260/2280/22110|\n|U.2|固态盘：比SATA 2.5寸厚一点|\n\nSATA接口的SSD，和SATA机械盘一样的接口\n\n![SATA接口的SSD，和SATA机械盘一样的接口](https://img.hackerbs.com//20240405223803.png)\n\nSAS接口的HDD\n\n![SAS接口的HDD](https://img.hackerbs.com//20240405224330.png)\n\nM.2接口的SSD\n\n![M.2接口的SSD](https://img.hackerbs.com//20240405224108.png)\n\nU.2接口的SSD\n\n![U.2接口的SSD](https://img.hackerbs.com//20240405224240.png)\n\n## 主板常见接口\n\n|名称|俗称|作用|最新版本|性能|\n|---|---|---|---|---|\n|PS/2|键鼠接口|相当传统的古董键鼠接口|无|无|\n|VGA|显示器接口|最原始的显示器接口|无|1k60Hz|\n|DVI|显示器接口|相对先进一些|24+5|2k120Hz|\n|HDMI|高清显示器接口|最普遍|2.1|8k30Hz|\n|DP|高清显示器接口|最先进|2.0|8k60Hz|\n|COM|串口|传统调试接口，9针|无|无|\n|USB Type-A|USB口|我们常说的USB口，方形|3.1 Gen 2|10Gbps|\n|USB Typc-C|C口、华为口|现在主流的手机充电口，也被部分人成为“华为充电器”|USB 4 Gen 3x2|40Gbps|\n|RJ45|网线电口|插网线上网，在服务器上通常是紧挨着的两个网口，避免与单独的BMC口混淆|无|10Gbps|\n|SFP+|万兆光口|插光模块连光纤|无|10Gbps|\n|BMC|IPMI管理口|通常用于服务器远程管理，一般位于USB上方|无|通常为千兆|\n|3.5mm|耳机口|通常有红绿蓝三孔或2合1的手机那种3.5mm孔|无|无|\n|PCIe|PCIe|从尺寸上分为x1/4/8/16，但是即便是x16尺寸，内部仍然有可能是x4信号，以主板设置或说明为准|PCIe 7.x|x1信号32GB/s速率|\n|3pin|3针风扇接口|插机箱风扇，没有温控调速，插上就满速运转|无|无|\n|4pin|4针温控风扇接口|插机箱风扇、CPU风扇（CPU风扇插针有专门的丝印标注），有温控调速，根据温度提升转速|无|无|\n|SATA DOM|迷你SSD|只有一个SATA接口，部分有额外供电口，一种非常小的SSD，直接插在SATA DOM接口即可使用|无|无|\n|SD|SD卡|SD卡并不是手机中的小存储卡（TF卡），SD卡是相机里常用的大卡，下方附图|无|无|\n|TF|TF卡|手机里常用的很小很小的存储卡，摄像机，行车记录仪等都很常用|无|无|\n\nSD大卡\n\n![SD大卡](https://img.hackerbs.com//20240405231336.png)\n\nTF小卡\n\n![TF小卡](https://img.hackerbs.com//20240405231412.png)\n\n## GPU知识\n\nNVIDIA GPU通常分为：游戏卡、公版、涡轮卡\n\n游戏卡通常是华硕，七彩虹等第三方生产的卡，其尺寸通常没有固定的标准，难以安装到服务器或安装双GPU\n\n公版（Founder's Edition）是由NVIDIA官方设计的GPU，在NVIDIA官网可以查询到其尺寸信息，价格似乎也比较昂贵\n\n涡轮卡（Turbo Edition）涡轮版，也是最贵的，尺寸为标准的固定尺寸，通常为单宽，双宽，便于安装到高密度的GPU服务器中，但需要注意涡轮进风口的散热空间，尽量不要阻挡\n\n|参数|作用|A100 80GB PCIe版示例|\n|---|---|---|\n|FP64|64位双精度浮点数|9.7TFLOPS|\n|FP64 Tensor Core|一种精度格式，它支持半精度（FP16）数据来加速矩阵乘法，并使用单精度（FP32）或双精度（FP64）数据来修正结果，以获得更高的精度|19.5TFLOPS|\n|FP32|32位单精度浮点数|19.5TFLOPS|\n|TF32|一种截短的 Float32 数据格式，将 FP32 中 23 个尾数位截短为 10 bits，而指数位仍为 8 bits，总长度为 19 (=1 + 8 + 10) bits|156 TFLOPS/312 TFLOPS|\n|BFLOAT16 Tensor Core|一种支持低精度浮点数（BFloat16）计算的计算单元，主要用于深度学习等大规模并行计算场景|312 TFLOPS/624 TFLOPS|\n|FP16 Tensor Core|一种支持半精度（FP16）浮点数计算的计算单元，主要用于深度学习等大规模并行计算场景|312 TFLOPS/624 TFLOPS|\n|INT8 Tensor Core|一种针对深度学习等大规模并行计算场景的专用矩阵运算单元，它首次出现在Volta架构的GPU中，并在后续的Turing和Ampere架构中得到发展|624 TOPS/1248 TOPS|\n|GPU Memory|GPU内存|80GB HBM2e|\n|GPU Memory Bandwidth|GPU内存带宽|1935GB/s|\n|Max Thermal Design Power (TDP)|GPU最大功耗|300W|\n\n## Windows操作系统\n\nWindows消费级：\n\n已弃用版本：Windows XP、7、8、8.1\n\n即将弃用版本：Windows 10\n\n主流版：Windows 11\n\nWindows 11版本：家庭版、专业版、企业版、教育版、专业工作站版、IoT物联网嵌入式版（也叫Emb）、Team团队版\n\n通常安装企业版即可，Windows 10、11互联网激活方式如下：\n\n```shell\n# 以管理员权限运行cmd或powershell\nslmgr /ipk 序列号\nslmgr /skms kms服务器\nslmgr /ato\n```\n\n常用KMS服务器：kms.03k.org\n\n[KMS服务器状态查询网站](https://www.coolhub.top/tech-articles/kms_list.html)\n\n|版本|KMS序列号|\n|---|---|\n|家庭版|TX9XD-98N7V-6WMQ6-BX7FG-H8Q99|\n|专业版|W269N-WFGWX-YVC9B-4J6C9-T83GX|\n|企业版|NPPR9-FWDCX-D2C8J-H872K-2YT43|\n|教育版|NW6C2-QMPVW-D7KKK-3GKT6-VCFB2|\n|专业工作站版|NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J|\n\nWindows服务器级：\n\n老版本：Windows Server 2003、2008R2、2012R2、2016、2019、2022\n\nWindows Server 2022版本：标准版、数据中心版\n\n|版本|KMS序列号|\n|---|---|\n|标准版|RGN6B-MCPWX-6K6GK-HKM33-7VCXY|\n|数据中心版|DNVBD-FCT8Y-TQT8Q-HGQ34-QGRRV|\n\n## Linux操作系统\n\n|发行版|包管理器|特点|\n|---|---|---|\n|CentOS|yum/rpm|截止CentOS 7版本仍是很优秀的稳定系统，但是自8版本后已不再适合做为服务器系统使用|\n|Debian|apt/deb|Linux系统先驱者，最著名的Linux发行版，及其稳定，庞大的软件库，自由软件支持，强大的社区支持，多架构支持，**十分推荐做为服务器和桌面操作系统**|\n|Ubuntu|apt/deb|作为服务器系统使用有点难评，不如Debian，但是做为桌面操作系统还是可以的|\n|Arch|pacman/yay|Linux折腾界的No.1，新手入门练习必备，从grub到lvm分区全方位了解Linux，也是做为桌面操作系统的一大神器，yay源软件包丰富到无法形容|\n|Kali|apt/deb|最著名的渗透测试、数字取证系统，内置大量安全测试工具和程序，支持多种架构|\n|UOS|apt/deb|国产统信，也就那样|\n|Deepin|apt/deb|国产深度，也就那样|\n|Kylin|apt/deb|我反正是不得用|\n|Kylin服务器版|yum/rpm|更不得用|\n|EularOS|yum/rpm|华为推出的，为啥不直接用CentOS呢？|\n\n## 板载RAID问题\n\n板载RAID通常使用的是Intel VROC技术，该技术仅支持部分Windows，完全不支持Linux，如果用户需要在Linux使用RAID，需配备RAID卡，或考虑mdadm、ZFS软RAID\n\n**建议对Linux系统选配RAID卡，如LSI 9364-8i**\n\n## RAID/HBA卡知识\n\n以LSI RAID卡为例\n\nLSI 9364-8i，其中93是RAID卡芯片版本，64则是型号，8i则是接口，8代表支持8个端口（硬盘）也就是两个SFF-8643，i表示内部，如果是e则是外接的扩展卡，常见于HBA\n\n以LSI HBA卡为例\n\nLSI 9300-8e，如上所述，8e代表可外接8个port，也就是两个SFF-8644\n\nHBA直通卡有IR/IT两种模式，IT(Initiator Target)是纯直通模式，呈现给系统的盘就是一个个独立磁盘；IR(Integrated RAID)模式则是卡自身支持基础的RAID 0/1/5，但是RAID 5通常性能低下，一般选用IT卡即可。\n\nIT卡：LSI 9300-8i\nIR卡：LSI 9311-8i\n\nRAID卡的缓存：频繁读写的热数据会加载到RAID卡缓存中，这样可以大幅提升热数据的读写速度，但是缓存掉电丢失，所以如果要启用回写模式，必须配备BBU（RAID超级电容、电池），也可以采用SSD缓存盘的方式实现掉电不掉数据，但是缓存+BBU是最好的方案\n\n## 交换机、路由器等知识\n\n交换机通常分为：二层交换机、三层交换机、核心交换机\n\n二层交换机也叫傻瓜式交换机，插电接线就能用，常作为接入交换机使用\n\n三层交换机则是具有管理功能，可以配置VLAN、静态路由、DHCP、ACL策略等数据链路层面功能，可以根据业务需求设置一些规则，能满足大部分业务场景\n\n核心交换机则具有更大的交换容量，更高的性能，通常还支持堆叠（交换机虚拟化）功能，将多台交换机组合模拟成一台交换机，便于运维等\n\n路由器则是负责WAN（广域网）和LAN（局域网）的连通，如拨号上网，DHCP，上网策略，终端管控，AP管理，NAT转发等数据包层面的功能\n\n除此之外，还有上网行为管理设备，其作用如同字面意思，对上网流量进行监督、管控，识别用户的上网行为，判断其流量访问了什么网站，发送了什么消息，该设备对于隐私方面存在一些争议\n\n其他的园区交换机，ONU等通常不会涉及，在此不做介绍，可以自行在网上了解\n\n## 常见文件系统\n\nfat32：U盘常用，兼容性好，单文件不能超过4GB\n\nNTFS：Windows常用，支持大文件，大容量\n\next4：Linux常用，稳定性好，支持大文件大容量\n\nxfs：Linux常用，比ext4更高性能更好，支持更大容量，具有优秀的可扩展性\n\nzfs：开源高级文件系统，支持大容量，拥有独特的RAID-Z软RAID，支持快照，写时复制，自修复等特性，常用于数据量很大的服务器或存储\n\nAPFS：苹果的存储系统，只适合苹果用\n\n## 网络基础知识\n\n### IP地址 (IP Address)\n\nIP地址是分配给每个连接到网络的设备的唯一标识符，就像一个设备的“网络身份证”。IP地址有两个主要版本：\n\nIPv4: 由四个十进制数（0-255）组成，中间用点分隔，例如：192.168.1.1。\n\nIPv6: 由八组十六进制数（每组四个字符）组成，中间用冒号分隔，例如：2001:0db8:85a3:0000:0000:8a2e:0370:7334。\n\n### 子网掩码 (Subnet Mask)\n\n子网掩码用于划分IP地址的网络部分和主机部分。它也是由四个十进制数组成，中间用点分隔，例如：255.255.255.0。\n\n子网掩码的作用是确定IP地址的哪一部分是网络ID，哪一部分是主机ID。对于255.255.255.0的子网掩码，前24位（前3个255）是网络部分，最后8位（0）是主机部分。\n\n子网掩码主要用于划分网络地址和主机地址。子网掩码中连续的 1 对应的部分表示网络部分，连续的 0 对应的部分就是主机部分\n\n主机部分的作用主要有以下几点：\n\n标识单个主机：在特定的子网内，主机部分用于区分不同的主机。\n\n确定主机数量：通过主机部分可以计算出在该子网中可用的主机数量。\n\n例如，对于子网掩码 255.255.255.0，最后一个字节的 0 部分就是主机部分。这意味着在这个子网中，可以有 2^8 - 2（减去网络地址和广播地址）= 254 台主机。\n\n在网络通信中，通过子网掩码的主机部分可以准确地找到目标主机在子网内的具体位置，从而实现数据的准确传输和交换。\n\n再比如，子网掩码 255.255.0.0，后两个字节都是主机部分，这样在该子网中可以容纳的主机数量就大大增加了\n\n### 前缀 (Prefix)\n\n前缀长度表示子网掩码的网络部分的长度，用斜杠加数字表示。例如，/24表示子网掩码255.255.255.0（前24位是网络部分）。\n\n192.168.1.0/24 表示IP地址的前24位（192.168.1）是网络部分，剩下的8位是主机部分。\n\n前缀的计算方式很简单，将十进制的子网掩码转换为二进制，有多少个1，前缀就是多少\n\n255转换为二进制是8个1：11111111\n\n所以255.255.255.0是：11111111.11111111.11111111.0，前缀便是/24\n\n255.255.252.0则是：11111111.11111111.11111100.0，前缀/22\n\n对照表如下：\n\n|子网掩码|前缀|可用主机数|\n|----|----|---|\n|255.0.0.0|/8|16777214|\n|255.128.0.0|/9|8388606|\n|255.192.0.0|/10|4194302|\n|255.224.0.0|/11|2097150|\n|255.240.0.0|/12|1048574|\n|255.248.0.0|/13|524286|\n|255.252.0.0|/14|262142|\n|255.254.0.0|/15|131070|\n|255.255.0.0|/16|65534|\n|255.255.128.0|/17|32766|\n|255.255.192.0|/18|16382|\n|255.255.224.0|/19|8190|\n|255.255.240.0|/20|4094|\n|255.255.248.0|/21|2046|\n|255.255.252.0|/22|1022|\n|255.255.254.0|/23|510|\n|255.255.255.0|/24|254|\n|255.255.255.128|/25|126|\n|255.255.255.192|/26|62|\n|255.255.255.224|/27|30|\n|255.255.255.240|/28|14|\n|255.255.255.248|/29|6|\n|255.255.255.252|/30|2|\n\n### 网关 (Gateway)\n\n网关是网络中的一个节点，作为其他网络（如互联网）的入口点。通常是路由器的IP地址。\n\n当一台设备需要与其他网络的设备通信时，会通过网关来转发数据。例如，家庭网络中的网关通常是192.168.1.1。\n\n### DNS (Domain Name System)\n\nDNS是域名系统，将人类易读的域名，如`www.example.com`转换为机器可读的IP地址如`93.184.216.34`\n\nDNS服务器负责解析域名，用户在浏览器中输入域名后，DNS服务器会将其转换为对应的IP地址，使得用户可以访问该网站。\n\n推荐的DNS服务器地址：\n国内：119.29.29.29\n国外：8.8.8.8\n主DNS配119.29.29.29，备DNS配8.8.8.8，无论你是什么网络，只需要这样配即可，不需要使用任何运营商提供的乱七八糟的DNS，这两个DNS一个腾讯的一个谷歌的，足够解析全世界的域名。\n\n### 网段\n\nIP地址由`.`分隔，分为`A.B.C.D`四个段，最常见的`192.168.1.1`，其中`192.168`这两个`A.B`段是不变的，而在`10.0.0.1`中，则是A段固定，比较小的环境中，通常只需要使用`192.168`这个局域网端，通过调整`C`段，如`192.168.0.0/24`、`192.168.1.0/24`，通过不同的C段和不同的前缀，实现控制局域网络的大小。\n\nIP地址和子网掩码的使用示例：\n\n用户有350台电脑，显然一个`192.168.0.0`段是不够的，所以需要再加一个`192.168.1.0`段，然而两个段，总共350个主机，所以对应的掩码也需要使用支持510个主机的`255.255.254.0`段，也就是`23`段，最终，IP地址范围是从`192.168.0.1/23`到`192.168.1.254/23`的510个IP地址\n\n### 总结\n\nIP地址: 网络中设备的唯一标识符。\n\n子网掩码: 用于划分IP地址的网络部分和主机部分。\n\n前缀: 表示子网掩码的网络部分的长度。\n\n网关: 网络中的入口点，用于连接其他网络。\n\nDNS: 将域名转换为IP地址的系统。\n","source":"_posts/IT基础知识百科.md","raw":"---\ntitle: IT基础知识百科\nsticky:\ncategories: [知识库]\ntags:\n  - 基础\n  - IT知识\n  - 百科\ncomments: true\ndate: 2024-04-05 21:08:47\nkeywords:\n  - 基础\n  - IT知识\n  - 百科\n---\n\n## 常见的SAS线缆\n\n[一个非常优秀的、介绍各种线缆知识的网站](https://cs-electronics.com/)\n\n### SFF-8643 & MINI SAS HD\n\n**通常JBOD磁盘柜使用的，在机箱外部连接的有保护壳的是SFF-8644**\n\n<!-- more -->\n\n![2022-10-25-10-45-40](https://img.hackerbs.com/2022-10-25-10-45-40.png)\n\n### SFF-8087 & MINI SAS\n\n![2022-10-25-10-46-10](https://img.hackerbs.com/2022-10-25-10-46-10.png)\n\n### SFF-8654 & SLIM SAS\n\nYGR-822平台便有大量SlimSAS用于PCIe扩展连接\n\n![2022-10-25-10-44-50](https://img.hackerbs.com/2022-10-25-10-44-50.png)\n\n## 机房最常见的光纤及其模块和名称\n\n### 最最最普遍的万兆光纤\n\n![20240405213514](https://img.hackerbs.com//20240405213514.png)\n\n外观上可以分辨的：两头都是LC接口\n\n重要参数：\n1. 频率：850nm\n2. 模式：多模\n3. 距离：<300m\n4. 规格：OM3\n\n规格参数（OM）解读：\n\n|规格|10Gb传输距离（米）|性能|带宽|颜色|\n|---|---|---|---|---|\n|OM3|300|10Gb/s|2000MHz/KM|水蓝色|\n|OM4|550|40/100Gb/s|4700MHz/KM|水蓝色|\n|OM5|550|40/100/200/400Gb/s|28000MHz/KM|水绿色|\n\n### 机房常见光模块\n\n|型号|俗称|速率|补充|\n|---|---|---|---|\n|SFP|千兆光模块|100~4000Mb/s|淘汰产品|\n|SFP+|万兆光模块|10Gb/s|主流产品，机房常用LC接口|\n|SFP28|25G光模块|25Gb/s|比较常用|\n|QSFP+|40G光模块|40Gb/s|还行|\n|QSFP28|100G光模块|100Gb/s|很牛逼|\n\n## 网线类型\n\n|规格|俗称|传输速度|频率带宽|传输距离m|\n|---|---|---|---|---|\n|CAT5|五类|100Mbps|100MHz|100|\n|CAT5E|超五类|1000Mbps|100MHz|100（1Gbps）|\n|CAT6|六类|10Gbps|250MHz|55（10Gbps）|\n|CAT6A|超六类|10Gbps|500MHz|100（10Gbps）|\n|CAT7|七类|10Gbps|600Mhz|100（10Gbps）|\n|CAT8|八类|25/40Gbps|2000MHz|30|\n\n非屏蔽：UTP（不抗干扰）\n屏蔽：STP（抗干扰，前提是设备必须接地，否则电磁干扰会在屏蔽层内反弹加剧干扰）\n\n## 内存类型\n\n|型号|俗称|区别|\n|---|---|---|\n|non-ECC|普条|家用，没有数据纠错功能|\n|SODIMM|小内存|笔记本用|\n|unbuffered-ECC/UDIMM|服务器条|服务器专用，带ECC纠错但没有缓存寄存器，家用电脑、不支持ECC的主板均无法使用|\n|REG ECC/RDIMM|大容量内存|服务器专用，因为大容量颗粒CPU无法直接驱动，所以需要一颗寄存器来做中转，常见于32GB以上内存|\n|LRDIMM|低电压大容量内存|服务器专用，通过使用简单寄存器降低供电需求从而支持更大容量更多颗粒，常见于128G内存条|\n|DDR2|2代内存|频率：400-1066MHz|古董|\n|DDR3|3代内存|频率：800-2133MHz|尚有一站之力|\n|DDR4|4代内存|频率：1600-3200MHz|主流|\n|DDR5|5代内存|频率：3000-4000MHz（现在普遍用MT/s为单位，也就是6000-8000MT/s）|最新最屌的内存|\n\nIntel除至强CPU外均不支持ECC内存\n\nAMD部分Ryzen消费级CPU也支持ECC，以实际说明为准\n\n小知识：观察内存条颗粒，单侧颗粒数量为偶数（通常为8颗）的，就是家用non-ECC内存，ECC内存则会多一颗颗粒用于数据校验（有点像RAID5），而有一大堆颗粒，其中还有一颗与众不同的大颗粒的，不用怀疑，那就是服务器专用的大容量RECC内存\n\n花里胡哨的家用金士顿屌炸天DDR5 8000MT/s内存\n\n![花里胡哨的家用金士顿屌炸天DDR5 8000MT/s内存](https://img.hackerbs.com//20240405222648.png)\n\n服务器RECC内存，中间那个大颗粒就是缓存寄存器\n\n![服务器RECC内存，中间那个大颗粒就是缓存寄存器](https://img.hackerbs.com//20240405222930.png)\n\n## 硬盘类型\n\nHDD：Hard Disk Drive，硬盘驱动器，传统硬盘，俗称机械硬盘\nSSD：Solid State Drive，固态硬盘\n\n|接口|类型|速度|特点|\n|---|---|---|---|\n|SATA|HDD|100-250MB/s|便宜皮实容量大，但速度慢|\n|SAS|HDD|100-1200MB/s|貌似是个挺鸡肋的东西？技术更新迭代的过渡品？|\n|SATA|SSD|300-600MB/s|性价比相对较高，基本一个顶4个机械|\n|NVMe M.2|SSD|500-3500MB/s|价格比较高，速度非常快，体积也小，现在的主流硬盘|\n|U.2(SFF-8639)|SSD|1000-5000MB/s|价格超高，性能超屌，高端存储常用|\n\n|接口|尺寸|\n|---|---|\n|SATA|机械盘：3.5/2.5寸，SSD：2.5寸|\n|SAS|机械盘：3.5/2.5寸|\n|m.2|常见：2226/2230/2242/2260/2280/22110|\n|U.2|固态盘：比SATA 2.5寸厚一点|\n\nSATA接口的SSD，和SATA机械盘一样的接口\n\n![SATA接口的SSD，和SATA机械盘一样的接口](https://img.hackerbs.com//20240405223803.png)\n\nSAS接口的HDD\n\n![SAS接口的HDD](https://img.hackerbs.com//20240405224330.png)\n\nM.2接口的SSD\n\n![M.2接口的SSD](https://img.hackerbs.com//20240405224108.png)\n\nU.2接口的SSD\n\n![U.2接口的SSD](https://img.hackerbs.com//20240405224240.png)\n\n## 主板常见接口\n\n|名称|俗称|作用|最新版本|性能|\n|---|---|---|---|---|\n|PS/2|键鼠接口|相当传统的古董键鼠接口|无|无|\n|VGA|显示器接口|最原始的显示器接口|无|1k60Hz|\n|DVI|显示器接口|相对先进一些|24+5|2k120Hz|\n|HDMI|高清显示器接口|最普遍|2.1|8k30Hz|\n|DP|高清显示器接口|最先进|2.0|8k60Hz|\n|COM|串口|传统调试接口，9针|无|无|\n|USB Type-A|USB口|我们常说的USB口，方形|3.1 Gen 2|10Gbps|\n|USB Typc-C|C口、华为口|现在主流的手机充电口，也被部分人成为“华为充电器”|USB 4 Gen 3x2|40Gbps|\n|RJ45|网线电口|插网线上网，在服务器上通常是紧挨着的两个网口，避免与单独的BMC口混淆|无|10Gbps|\n|SFP+|万兆光口|插光模块连光纤|无|10Gbps|\n|BMC|IPMI管理口|通常用于服务器远程管理，一般位于USB上方|无|通常为千兆|\n|3.5mm|耳机口|通常有红绿蓝三孔或2合1的手机那种3.5mm孔|无|无|\n|PCIe|PCIe|从尺寸上分为x1/4/8/16，但是即便是x16尺寸，内部仍然有可能是x4信号，以主板设置或说明为准|PCIe 7.x|x1信号32GB/s速率|\n|3pin|3针风扇接口|插机箱风扇，没有温控调速，插上就满速运转|无|无|\n|4pin|4针温控风扇接口|插机箱风扇、CPU风扇（CPU风扇插针有专门的丝印标注），有温控调速，根据温度提升转速|无|无|\n|SATA DOM|迷你SSD|只有一个SATA接口，部分有额外供电口，一种非常小的SSD，直接插在SATA DOM接口即可使用|无|无|\n|SD|SD卡|SD卡并不是手机中的小存储卡（TF卡），SD卡是相机里常用的大卡，下方附图|无|无|\n|TF|TF卡|手机里常用的很小很小的存储卡，摄像机，行车记录仪等都很常用|无|无|\n\nSD大卡\n\n![SD大卡](https://img.hackerbs.com//20240405231336.png)\n\nTF小卡\n\n![TF小卡](https://img.hackerbs.com//20240405231412.png)\n\n## GPU知识\n\nNVIDIA GPU通常分为：游戏卡、公版、涡轮卡\n\n游戏卡通常是华硕，七彩虹等第三方生产的卡，其尺寸通常没有固定的标准，难以安装到服务器或安装双GPU\n\n公版（Founder's Edition）是由NVIDIA官方设计的GPU，在NVIDIA官网可以查询到其尺寸信息，价格似乎也比较昂贵\n\n涡轮卡（Turbo Edition）涡轮版，也是最贵的，尺寸为标准的固定尺寸，通常为单宽，双宽，便于安装到高密度的GPU服务器中，但需要注意涡轮进风口的散热空间，尽量不要阻挡\n\n|参数|作用|A100 80GB PCIe版示例|\n|---|---|---|\n|FP64|64位双精度浮点数|9.7TFLOPS|\n|FP64 Tensor Core|一种精度格式，它支持半精度（FP16）数据来加速矩阵乘法，并使用单精度（FP32）或双精度（FP64）数据来修正结果，以获得更高的精度|19.5TFLOPS|\n|FP32|32位单精度浮点数|19.5TFLOPS|\n|TF32|一种截短的 Float32 数据格式，将 FP32 中 23 个尾数位截短为 10 bits，而指数位仍为 8 bits，总长度为 19 (=1 + 8 + 10) bits|156 TFLOPS/312 TFLOPS|\n|BFLOAT16 Tensor Core|一种支持低精度浮点数（BFloat16）计算的计算单元，主要用于深度学习等大规模并行计算场景|312 TFLOPS/624 TFLOPS|\n|FP16 Tensor Core|一种支持半精度（FP16）浮点数计算的计算单元，主要用于深度学习等大规模并行计算场景|312 TFLOPS/624 TFLOPS|\n|INT8 Tensor Core|一种针对深度学习等大规模并行计算场景的专用矩阵运算单元，它首次出现在Volta架构的GPU中，并在后续的Turing和Ampere架构中得到发展|624 TOPS/1248 TOPS|\n|GPU Memory|GPU内存|80GB HBM2e|\n|GPU Memory Bandwidth|GPU内存带宽|1935GB/s|\n|Max Thermal Design Power (TDP)|GPU最大功耗|300W|\n\n## Windows操作系统\n\nWindows消费级：\n\n已弃用版本：Windows XP、7、8、8.1\n\n即将弃用版本：Windows 10\n\n主流版：Windows 11\n\nWindows 11版本：家庭版、专业版、企业版、教育版、专业工作站版、IoT物联网嵌入式版（也叫Emb）、Team团队版\n\n通常安装企业版即可，Windows 10、11互联网激活方式如下：\n\n```shell\n# 以管理员权限运行cmd或powershell\nslmgr /ipk 序列号\nslmgr /skms kms服务器\nslmgr /ato\n```\n\n常用KMS服务器：kms.03k.org\n\n[KMS服务器状态查询网站](https://www.coolhub.top/tech-articles/kms_list.html)\n\n|版本|KMS序列号|\n|---|---|\n|家庭版|TX9XD-98N7V-6WMQ6-BX7FG-H8Q99|\n|专业版|W269N-WFGWX-YVC9B-4J6C9-T83GX|\n|企业版|NPPR9-FWDCX-D2C8J-H872K-2YT43|\n|教育版|NW6C2-QMPVW-D7KKK-3GKT6-VCFB2|\n|专业工作站版|NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J|\n\nWindows服务器级：\n\n老版本：Windows Server 2003、2008R2、2012R2、2016、2019、2022\n\nWindows Server 2022版本：标准版、数据中心版\n\n|版本|KMS序列号|\n|---|---|\n|标准版|RGN6B-MCPWX-6K6GK-HKM33-7VCXY|\n|数据中心版|DNVBD-FCT8Y-TQT8Q-HGQ34-QGRRV|\n\n## Linux操作系统\n\n|发行版|包管理器|特点|\n|---|---|---|\n|CentOS|yum/rpm|截止CentOS 7版本仍是很优秀的稳定系统，但是自8版本后已不再适合做为服务器系统使用|\n|Debian|apt/deb|Linux系统先驱者，最著名的Linux发行版，及其稳定，庞大的软件库，自由软件支持，强大的社区支持，多架构支持，**十分推荐做为服务器和桌面操作系统**|\n|Ubuntu|apt/deb|作为服务器系统使用有点难评，不如Debian，但是做为桌面操作系统还是可以的|\n|Arch|pacman/yay|Linux折腾界的No.1，新手入门练习必备，从grub到lvm分区全方位了解Linux，也是做为桌面操作系统的一大神器，yay源软件包丰富到无法形容|\n|Kali|apt/deb|最著名的渗透测试、数字取证系统，内置大量安全测试工具和程序，支持多种架构|\n|UOS|apt/deb|国产统信，也就那样|\n|Deepin|apt/deb|国产深度，也就那样|\n|Kylin|apt/deb|我反正是不得用|\n|Kylin服务器版|yum/rpm|更不得用|\n|EularOS|yum/rpm|华为推出的，为啥不直接用CentOS呢？|\n\n## 板载RAID问题\n\n板载RAID通常使用的是Intel VROC技术，该技术仅支持部分Windows，完全不支持Linux，如果用户需要在Linux使用RAID，需配备RAID卡，或考虑mdadm、ZFS软RAID\n\n**建议对Linux系统选配RAID卡，如LSI 9364-8i**\n\n## RAID/HBA卡知识\n\n以LSI RAID卡为例\n\nLSI 9364-8i，其中93是RAID卡芯片版本，64则是型号，8i则是接口，8代表支持8个端口（硬盘）也就是两个SFF-8643，i表示内部，如果是e则是外接的扩展卡，常见于HBA\n\n以LSI HBA卡为例\n\nLSI 9300-8e，如上所述，8e代表可外接8个port，也就是两个SFF-8644\n\nHBA直通卡有IR/IT两种模式，IT(Initiator Target)是纯直通模式，呈现给系统的盘就是一个个独立磁盘；IR(Integrated RAID)模式则是卡自身支持基础的RAID 0/1/5，但是RAID 5通常性能低下，一般选用IT卡即可。\n\nIT卡：LSI 9300-8i\nIR卡：LSI 9311-8i\n\nRAID卡的缓存：频繁读写的热数据会加载到RAID卡缓存中，这样可以大幅提升热数据的读写速度，但是缓存掉电丢失，所以如果要启用回写模式，必须配备BBU（RAID超级电容、电池），也可以采用SSD缓存盘的方式实现掉电不掉数据，但是缓存+BBU是最好的方案\n\n## 交换机、路由器等知识\n\n交换机通常分为：二层交换机、三层交换机、核心交换机\n\n二层交换机也叫傻瓜式交换机，插电接线就能用，常作为接入交换机使用\n\n三层交换机则是具有管理功能，可以配置VLAN、静态路由、DHCP、ACL策略等数据链路层面功能，可以根据业务需求设置一些规则，能满足大部分业务场景\n\n核心交换机则具有更大的交换容量，更高的性能，通常还支持堆叠（交换机虚拟化）功能，将多台交换机组合模拟成一台交换机，便于运维等\n\n路由器则是负责WAN（广域网）和LAN（局域网）的连通，如拨号上网，DHCP，上网策略，终端管控，AP管理，NAT转发等数据包层面的功能\n\n除此之外，还有上网行为管理设备，其作用如同字面意思，对上网流量进行监督、管控，识别用户的上网行为，判断其流量访问了什么网站，发送了什么消息，该设备对于隐私方面存在一些争议\n\n其他的园区交换机，ONU等通常不会涉及，在此不做介绍，可以自行在网上了解\n\n## 常见文件系统\n\nfat32：U盘常用，兼容性好，单文件不能超过4GB\n\nNTFS：Windows常用，支持大文件，大容量\n\next4：Linux常用，稳定性好，支持大文件大容量\n\nxfs：Linux常用，比ext4更高性能更好，支持更大容量，具有优秀的可扩展性\n\nzfs：开源高级文件系统，支持大容量，拥有独特的RAID-Z软RAID，支持快照，写时复制，自修复等特性，常用于数据量很大的服务器或存储\n\nAPFS：苹果的存储系统，只适合苹果用\n\n## 网络基础知识\n\n### IP地址 (IP Address)\n\nIP地址是分配给每个连接到网络的设备的唯一标识符，就像一个设备的“网络身份证”。IP地址有两个主要版本：\n\nIPv4: 由四个十进制数（0-255）组成，中间用点分隔，例如：192.168.1.1。\n\nIPv6: 由八组十六进制数（每组四个字符）组成，中间用冒号分隔，例如：2001:0db8:85a3:0000:0000:8a2e:0370:7334。\n\n### 子网掩码 (Subnet Mask)\n\n子网掩码用于划分IP地址的网络部分和主机部分。它也是由四个十进制数组成，中间用点分隔，例如：255.255.255.0。\n\n子网掩码的作用是确定IP地址的哪一部分是网络ID，哪一部分是主机ID。对于255.255.255.0的子网掩码，前24位（前3个255）是网络部分，最后8位（0）是主机部分。\n\n子网掩码主要用于划分网络地址和主机地址。子网掩码中连续的 1 对应的部分表示网络部分，连续的 0 对应的部分就是主机部分\n\n主机部分的作用主要有以下几点：\n\n标识单个主机：在特定的子网内，主机部分用于区分不同的主机。\n\n确定主机数量：通过主机部分可以计算出在该子网中可用的主机数量。\n\n例如，对于子网掩码 255.255.255.0，最后一个字节的 0 部分就是主机部分。这意味着在这个子网中，可以有 2^8 - 2（减去网络地址和广播地址）= 254 台主机。\n\n在网络通信中，通过子网掩码的主机部分可以准确地找到目标主机在子网内的具体位置，从而实现数据的准确传输和交换。\n\n再比如，子网掩码 255.255.0.0，后两个字节都是主机部分，这样在该子网中可以容纳的主机数量就大大增加了\n\n### 前缀 (Prefix)\n\n前缀长度表示子网掩码的网络部分的长度，用斜杠加数字表示。例如，/24表示子网掩码255.255.255.0（前24位是网络部分）。\n\n192.168.1.0/24 表示IP地址的前24位（192.168.1）是网络部分，剩下的8位是主机部分。\n\n前缀的计算方式很简单，将十进制的子网掩码转换为二进制，有多少个1，前缀就是多少\n\n255转换为二进制是8个1：11111111\n\n所以255.255.255.0是：11111111.11111111.11111111.0，前缀便是/24\n\n255.255.252.0则是：11111111.11111111.11111100.0，前缀/22\n\n对照表如下：\n\n|子网掩码|前缀|可用主机数|\n|----|----|---|\n|255.0.0.0|/8|16777214|\n|255.128.0.0|/9|8388606|\n|255.192.0.0|/10|4194302|\n|255.224.0.0|/11|2097150|\n|255.240.0.0|/12|1048574|\n|255.248.0.0|/13|524286|\n|255.252.0.0|/14|262142|\n|255.254.0.0|/15|131070|\n|255.255.0.0|/16|65534|\n|255.255.128.0|/17|32766|\n|255.255.192.0|/18|16382|\n|255.255.224.0|/19|8190|\n|255.255.240.0|/20|4094|\n|255.255.248.0|/21|2046|\n|255.255.252.0|/22|1022|\n|255.255.254.0|/23|510|\n|255.255.255.0|/24|254|\n|255.255.255.128|/25|126|\n|255.255.255.192|/26|62|\n|255.255.255.224|/27|30|\n|255.255.255.240|/28|14|\n|255.255.255.248|/29|6|\n|255.255.255.252|/30|2|\n\n### 网关 (Gateway)\n\n网关是网络中的一个节点，作为其他网络（如互联网）的入口点。通常是路由器的IP地址。\n\n当一台设备需要与其他网络的设备通信时，会通过网关来转发数据。例如，家庭网络中的网关通常是192.168.1.1。\n\n### DNS (Domain Name System)\n\nDNS是域名系统，将人类易读的域名，如`www.example.com`转换为机器可读的IP地址如`93.184.216.34`\n\nDNS服务器负责解析域名，用户在浏览器中输入域名后，DNS服务器会将其转换为对应的IP地址，使得用户可以访问该网站。\n\n推荐的DNS服务器地址：\n国内：119.29.29.29\n国外：8.8.8.8\n主DNS配119.29.29.29，备DNS配8.8.8.8，无论你是什么网络，只需要这样配即可，不需要使用任何运营商提供的乱七八糟的DNS，这两个DNS一个腾讯的一个谷歌的，足够解析全世界的域名。\n\n### 网段\n\nIP地址由`.`分隔，分为`A.B.C.D`四个段，最常见的`192.168.1.1`，其中`192.168`这两个`A.B`段是不变的，而在`10.0.0.1`中，则是A段固定，比较小的环境中，通常只需要使用`192.168`这个局域网端，通过调整`C`段，如`192.168.0.0/24`、`192.168.1.0/24`，通过不同的C段和不同的前缀，实现控制局域网络的大小。\n\nIP地址和子网掩码的使用示例：\n\n用户有350台电脑，显然一个`192.168.0.0`段是不够的，所以需要再加一个`192.168.1.0`段，然而两个段，总共350个主机，所以对应的掩码也需要使用支持510个主机的`255.255.254.0`段，也就是`23`段，最终，IP地址范围是从`192.168.0.1/23`到`192.168.1.254/23`的510个IP地址\n\n### 总结\n\nIP地址: 网络中设备的唯一标识符。\n\n子网掩码: 用于划分IP地址的网络部分和主机部分。\n\n前缀: 表示子网掩码的网络部分的长度。\n\n网关: 网络中的入口点，用于连接其他网络。\n\nDNS: 将域名转换为IP地址的系统。\n","slug":"IT基础知识百科","published":1,"updated":"2025-09-04T06:44:07.221Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtm00069szw718u5a99","content":"<h2 id=\"常见的SAS线缆\"><a href=\"#常见的SAS线缆\" class=\"headerlink\" title=\"常见的SAS线缆\"></a>常见的SAS线缆</h2><p><a href=\"https://cs-electronics.com/\">一个非常优秀的、介绍各种线缆知识的网站</a></p>\n<h3 id=\"SFF-8643-MINI-SAS-HD\"><a href=\"#SFF-8643-MINI-SAS-HD\" class=\"headerlink\" title=\"SFF-8643 &amp; MINI SAS HD\"></a>SFF-8643 &amp; MINI SAS HD</h3><p><strong>通常JBOD磁盘柜使用的，在机箱外部连接的有保护壳的是SFF-8644</strong></p>\n<span id=\"more\"></span>\n\n<p><img src=\"https://img.hackerbs.com/2022-10-25-10-45-40.png\" alt=\"2022-10-25-10-45-40\"></p>\n<h3 id=\"SFF-8087-MINI-SAS\"><a href=\"#SFF-8087-MINI-SAS\" class=\"headerlink\" title=\"SFF-8087 &amp; MINI SAS\"></a>SFF-8087 &amp; MINI SAS</h3><p><img src=\"https://img.hackerbs.com/2022-10-25-10-46-10.png\" alt=\"2022-10-25-10-46-10\"></p>\n<h3 id=\"SFF-8654-SLIM-SAS\"><a href=\"#SFF-8654-SLIM-SAS\" class=\"headerlink\" title=\"SFF-8654 &amp; SLIM SAS\"></a>SFF-8654 &amp; SLIM SAS</h3><p>YGR-822平台便有大量SlimSAS用于PCIe扩展连接</p>\n<p><img src=\"https://img.hackerbs.com/2022-10-25-10-44-50.png\" alt=\"2022-10-25-10-44-50\"></p>\n<h2 id=\"机房最常见的光纤及其模块和名称\"><a href=\"#机房最常见的光纤及其模块和名称\" class=\"headerlink\" title=\"机房最常见的光纤及其模块和名称\"></a>机房最常见的光纤及其模块和名称</h2><h3 id=\"最最最普遍的万兆光纤\"><a href=\"#最最最普遍的万兆光纤\" class=\"headerlink\" title=\"最最最普遍的万兆光纤\"></a>最最最普遍的万兆光纤</h3><p><img src=\"https://img.hackerbs.com//20240405213514.png\" alt=\"20240405213514\"></p>\n<p>外观上可以分辨的：两头都是LC接口</p>\n<p>重要参数：</p>\n<ol>\n<li>频率：850nm</li>\n<li>模式：多模</li>\n<li>距离：&lt;300m</li>\n<li>规格：OM3</li>\n</ol>\n<p>规格参数（OM）解读：</p>\n<table>\n<thead>\n<tr>\n<th>规格</th>\n<th>10Gb传输距离（米）</th>\n<th>性能</th>\n<th>带宽</th>\n<th>颜色</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>OM3</td>\n<td>300</td>\n<td>10Gb&#x2F;s</td>\n<td>2000MHz&#x2F;KM</td>\n<td>水蓝色</td>\n</tr>\n<tr>\n<td>OM4</td>\n<td>550</td>\n<td>40&#x2F;100Gb&#x2F;s</td>\n<td>4700MHz&#x2F;KM</td>\n<td>水蓝色</td>\n</tr>\n<tr>\n<td>OM5</td>\n<td>550</td>\n<td>40&#x2F;100&#x2F;200&#x2F;400Gb&#x2F;s</td>\n<td>28000MHz&#x2F;KM</td>\n<td>水绿色</td>\n</tr>\n</tbody></table>\n<h3 id=\"机房常见光模块\"><a href=\"#机房常见光模块\" class=\"headerlink\" title=\"机房常见光模块\"></a>机房常见光模块</h3><table>\n<thead>\n<tr>\n<th>型号</th>\n<th>俗称</th>\n<th>速率</th>\n<th>补充</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SFP</td>\n<td>千兆光模块</td>\n<td>100~4000Mb&#x2F;s</td>\n<td>淘汰产品</td>\n</tr>\n<tr>\n<td>SFP+</td>\n<td>万兆光模块</td>\n<td>10Gb&#x2F;s</td>\n<td>主流产品，机房常用LC接口</td>\n</tr>\n<tr>\n<td>SFP28</td>\n<td>25G光模块</td>\n<td>25Gb&#x2F;s</td>\n<td>比较常用</td>\n</tr>\n<tr>\n<td>QSFP+</td>\n<td>40G光模块</td>\n<td>40Gb&#x2F;s</td>\n<td>还行</td>\n</tr>\n<tr>\n<td>QSFP28</td>\n<td>100G光模块</td>\n<td>100Gb&#x2F;s</td>\n<td>很牛逼</td>\n</tr>\n</tbody></table>\n<h2 id=\"网线类型\"><a href=\"#网线类型\" class=\"headerlink\" title=\"网线类型\"></a>网线类型</h2><table>\n<thead>\n<tr>\n<th>规格</th>\n<th>俗称</th>\n<th>传输速度</th>\n<th>频率带宽</th>\n<th>传输距离m</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CAT5</td>\n<td>五类</td>\n<td>100Mbps</td>\n<td>100MHz</td>\n<td>100</td>\n</tr>\n<tr>\n<td>CAT5E</td>\n<td>超五类</td>\n<td>1000Mbps</td>\n<td>100MHz</td>\n<td>100（1Gbps）</td>\n</tr>\n<tr>\n<td>CAT6</td>\n<td>六类</td>\n<td>10Gbps</td>\n<td>250MHz</td>\n<td>55（10Gbps）</td>\n</tr>\n<tr>\n<td>CAT6A</td>\n<td>超六类</td>\n<td>10Gbps</td>\n<td>500MHz</td>\n<td>100（10Gbps）</td>\n</tr>\n<tr>\n<td>CAT7</td>\n<td>七类</td>\n<td>10Gbps</td>\n<td>600Mhz</td>\n<td>100（10Gbps）</td>\n</tr>\n<tr>\n<td>CAT8</td>\n<td>八类</td>\n<td>25&#x2F;40Gbps</td>\n<td>2000MHz</td>\n<td>30</td>\n</tr>\n</tbody></table>\n<p>非屏蔽：UTP（不抗干扰）<br>屏蔽：STP（抗干扰，前提是设备必须接地，否则电磁干扰会在屏蔽层内反弹加剧干扰）</p>\n<h2 id=\"内存类型\"><a href=\"#内存类型\" class=\"headerlink\" title=\"内存类型\"></a>内存类型</h2><table>\n<thead>\n<tr>\n<th>型号</th>\n<th>俗称</th>\n<th>区别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>non-ECC</td>\n<td>普条</td>\n<td>家用，没有数据纠错功能</td>\n</tr>\n<tr>\n<td>SODIMM</td>\n<td>小内存</td>\n<td>笔记本用</td>\n</tr>\n<tr>\n<td>unbuffered-ECC&#x2F;UDIMM</td>\n<td>服务器条</td>\n<td>服务器专用，带ECC纠错但没有缓存寄存器，家用电脑、不支持ECC的主板均无法使用</td>\n</tr>\n<tr>\n<td>REG ECC&#x2F;RDIMM</td>\n<td>大容量内存</td>\n<td>服务器专用，因为大容量颗粒CPU无法直接驱动，所以需要一颗寄存器来做中转，常见于32GB以上内存</td>\n</tr>\n<tr>\n<td>LRDIMM</td>\n<td>低电压大容量内存</td>\n<td>服务器专用，通过使用简单寄存器降低供电需求从而支持更大容量更多颗粒，常见于128G内存条</td>\n</tr>\n<tr>\n<td>DDR2</td>\n<td>2代内存</td>\n<td>频率：400-1066MHz</td>\n</tr>\n<tr>\n<td>DDR3</td>\n<td>3代内存</td>\n<td>频率：800-2133MHz</td>\n</tr>\n<tr>\n<td>DDR4</td>\n<td>4代内存</td>\n<td>频率：1600-3200MHz</td>\n</tr>\n<tr>\n<td>DDR5</td>\n<td>5代内存</td>\n<td>频率：3000-4000MHz（现在普遍用MT&#x2F;s为单位，也就是6000-8000MT&#x2F;s）</td>\n</tr>\n</tbody></table>\n<p>Intel除至强CPU外均不支持ECC内存</p>\n<p>AMD部分Ryzen消费级CPU也支持ECC，以实际说明为准</p>\n<p>小知识：观察内存条颗粒，单侧颗粒数量为偶数（通常为8颗）的，就是家用non-ECC内存，ECC内存则会多一颗颗粒用于数据校验（有点像RAID5），而有一大堆颗粒，其中还有一颗与众不同的大颗粒的，不用怀疑，那就是服务器专用的大容量RECC内存</p>\n<p>花里胡哨的家用金士顿屌炸天DDR5 8000MT&#x2F;s内存</p>\n<p><img src=\"https://img.hackerbs.com//20240405222648.png\" alt=\"花里胡哨的家用金士顿屌炸天DDR5 8000MT/s内存\"></p>\n<p>服务器RECC内存，中间那个大颗粒就是缓存寄存器</p>\n<p><img src=\"https://img.hackerbs.com//20240405222930.png\" alt=\"服务器RECC内存，中间那个大颗粒就是缓存寄存器\"></p>\n<h2 id=\"硬盘类型\"><a href=\"#硬盘类型\" class=\"headerlink\" title=\"硬盘类型\"></a>硬盘类型</h2><p>HDD：Hard Disk Drive，硬盘驱动器，传统硬盘，俗称机械硬盘<br>SSD：Solid State Drive，固态硬盘</p>\n<table>\n<thead>\n<tr>\n<th>接口</th>\n<th>类型</th>\n<th>速度</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SATA</td>\n<td>HDD</td>\n<td>100-250MB&#x2F;s</td>\n<td>便宜皮实容量大，但速度慢</td>\n</tr>\n<tr>\n<td>SAS</td>\n<td>HDD</td>\n<td>100-1200MB&#x2F;s</td>\n<td>貌似是个挺鸡肋的东西？技术更新迭代的过渡品？</td>\n</tr>\n<tr>\n<td>SATA</td>\n<td>SSD</td>\n<td>300-600MB&#x2F;s</td>\n<td>性价比相对较高，基本一个顶4个机械</td>\n</tr>\n<tr>\n<td>NVMe M.2</td>\n<td>SSD</td>\n<td>500-3500MB&#x2F;s</td>\n<td>价格比较高，速度非常快，体积也小，现在的主流硬盘</td>\n</tr>\n<tr>\n<td>U.2(SFF-8639)</td>\n<td>SSD</td>\n<td>1000-5000MB&#x2F;s</td>\n<td>价格超高，性能超屌，高端存储常用</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>接口</th>\n<th>尺寸</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SATA</td>\n<td>机械盘：3.5&#x2F;2.5寸，SSD：2.5寸</td>\n</tr>\n<tr>\n<td>SAS</td>\n<td>机械盘：3.5&#x2F;2.5寸</td>\n</tr>\n<tr>\n<td>m.2</td>\n<td>常见：2226&#x2F;2230&#x2F;2242&#x2F;2260&#x2F;2280&#x2F;22110</td>\n</tr>\n<tr>\n<td>U.2</td>\n<td>固态盘：比SATA 2.5寸厚一点</td>\n</tr>\n</tbody></table>\n<p>SATA接口的SSD，和SATA机械盘一样的接口</p>\n<p><img src=\"https://img.hackerbs.com//20240405223803.png\" alt=\"SATA接口的SSD，和SATA机械盘一样的接口\"></p>\n<p>SAS接口的HDD</p>\n<p><img src=\"https://img.hackerbs.com//20240405224330.png\" alt=\"SAS接口的HDD\"></p>\n<p>M.2接口的SSD</p>\n<p><img src=\"https://img.hackerbs.com//20240405224108.png\" alt=\"M.2接口的SSD\"></p>\n<p>U.2接口的SSD</p>\n<p><img src=\"https://img.hackerbs.com//20240405224240.png\" alt=\"U.2接口的SSD\"></p>\n<h2 id=\"主板常见接口\"><a href=\"#主板常见接口\" class=\"headerlink\" title=\"主板常见接口\"></a>主板常见接口</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>俗称</th>\n<th>作用</th>\n<th>最新版本</th>\n<th>性能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PS&#x2F;2</td>\n<td>键鼠接口</td>\n<td>相当传统的古董键鼠接口</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>VGA</td>\n<td>显示器接口</td>\n<td>最原始的显示器接口</td>\n<td>无</td>\n<td>1k60Hz</td>\n</tr>\n<tr>\n<td>DVI</td>\n<td>显示器接口</td>\n<td>相对先进一些</td>\n<td>24+5</td>\n<td>2k120Hz</td>\n</tr>\n<tr>\n<td>HDMI</td>\n<td>高清显示器接口</td>\n<td>最普遍</td>\n<td>2.1</td>\n<td>8k30Hz</td>\n</tr>\n<tr>\n<td>DP</td>\n<td>高清显示器接口</td>\n<td>最先进</td>\n<td>2.0</td>\n<td>8k60Hz</td>\n</tr>\n<tr>\n<td>COM</td>\n<td>串口</td>\n<td>传统调试接口，9针</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>USB Type-A</td>\n<td>USB口</td>\n<td>我们常说的USB口，方形</td>\n<td>3.1 Gen 2</td>\n<td>10Gbps</td>\n</tr>\n<tr>\n<td>USB Typc-C</td>\n<td>C口、华为口</td>\n<td>现在主流的手机充电口，也被部分人成为“华为充电器”</td>\n<td>USB 4 Gen 3x2</td>\n<td>40Gbps</td>\n</tr>\n<tr>\n<td>RJ45</td>\n<td>网线电口</td>\n<td>插网线上网，在服务器上通常是紧挨着的两个网口，避免与单独的BMC口混淆</td>\n<td>无</td>\n<td>10Gbps</td>\n</tr>\n<tr>\n<td>SFP+</td>\n<td>万兆光口</td>\n<td>插光模块连光纤</td>\n<td>无</td>\n<td>10Gbps</td>\n</tr>\n<tr>\n<td>BMC</td>\n<td>IPMI管理口</td>\n<td>通常用于服务器远程管理，一般位于USB上方</td>\n<td>无</td>\n<td>通常为千兆</td>\n</tr>\n<tr>\n<td>3.5mm</td>\n<td>耳机口</td>\n<td>通常有红绿蓝三孔或2合1的手机那种3.5mm孔</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>PCIe</td>\n<td>PCIe</td>\n<td>从尺寸上分为x1&#x2F;4&#x2F;8&#x2F;16，但是即便是x16尺寸，内部仍然有可能是x4信号，以主板设置或说明为准</td>\n<td>PCIe 7.x</td>\n<td>x1信号32GB&#x2F;s速率</td>\n</tr>\n<tr>\n<td>3pin</td>\n<td>3针风扇接口</td>\n<td>插机箱风扇，没有温控调速，插上就满速运转</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>4pin</td>\n<td>4针温控风扇接口</td>\n<td>插机箱风扇、CPU风扇（CPU风扇插针有专门的丝印标注），有温控调速，根据温度提升转速</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>SATA DOM</td>\n<td>迷你SSD</td>\n<td>只有一个SATA接口，部分有额外供电口，一种非常小的SSD，直接插在SATA DOM接口即可使用</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>SD</td>\n<td>SD卡</td>\n<td>SD卡并不是手机中的小存储卡（TF卡），SD卡是相机里常用的大卡，下方附图</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>TF</td>\n<td>TF卡</td>\n<td>手机里常用的很小很小的存储卡，摄像机，行车记录仪等都很常用</td>\n<td>无</td>\n<td>无</td>\n</tr>\n</tbody></table>\n<p>SD大卡</p>\n<p><img src=\"https://img.hackerbs.com//20240405231336.png\" alt=\"SD大卡\"></p>\n<p>TF小卡</p>\n<p><img src=\"https://img.hackerbs.com//20240405231412.png\" alt=\"TF小卡\"></p>\n<h2 id=\"GPU知识\"><a href=\"#GPU知识\" class=\"headerlink\" title=\"GPU知识\"></a>GPU知识</h2><p>NVIDIA GPU通常分为：游戏卡、公版、涡轮卡</p>\n<p>游戏卡通常是华硕，七彩虹等第三方生产的卡，其尺寸通常没有固定的标准，难以安装到服务器或安装双GPU</p>\n<p>公版（Founder’s Edition）是由NVIDIA官方设计的GPU，在NVIDIA官网可以查询到其尺寸信息，价格似乎也比较昂贵</p>\n<p>涡轮卡（Turbo Edition）涡轮版，也是最贵的，尺寸为标准的固定尺寸，通常为单宽，双宽，便于安装到高密度的GPU服务器中，但需要注意涡轮进风口的散热空间，尽量不要阻挡</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n<th>A100 80GB PCIe版示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>FP64</td>\n<td>64位双精度浮点数</td>\n<td>9.7TFLOPS</td>\n</tr>\n<tr>\n<td>FP64 Tensor Core</td>\n<td>一种精度格式，它支持半精度（FP16）数据来加速矩阵乘法，并使用单精度（FP32）或双精度（FP64）数据来修正结果，以获得更高的精度</td>\n<td>19.5TFLOPS</td>\n</tr>\n<tr>\n<td>FP32</td>\n<td>32位单精度浮点数</td>\n<td>19.5TFLOPS</td>\n</tr>\n<tr>\n<td>TF32</td>\n<td>一种截短的 Float32 数据格式，将 FP32 中 23 个尾数位截短为 10 bits，而指数位仍为 8 bits，总长度为 19 (&#x3D;1 + 8 + 10) bits</td>\n<td>156 TFLOPS&#x2F;312 TFLOPS</td>\n</tr>\n<tr>\n<td>BFLOAT16 Tensor Core</td>\n<td>一种支持低精度浮点数（BFloat16）计算的计算单元，主要用于深度学习等大规模并行计算场景</td>\n<td>312 TFLOPS&#x2F;624 TFLOPS</td>\n</tr>\n<tr>\n<td>FP16 Tensor Core</td>\n<td>一种支持半精度（FP16）浮点数计算的计算单元，主要用于深度学习等大规模并行计算场景</td>\n<td>312 TFLOPS&#x2F;624 TFLOPS</td>\n</tr>\n<tr>\n<td>INT8 Tensor Core</td>\n<td>一种针对深度学习等大规模并行计算场景的专用矩阵运算单元，它首次出现在Volta架构的GPU中，并在后续的Turing和Ampere架构中得到发展</td>\n<td>624 TOPS&#x2F;1248 TOPS</td>\n</tr>\n<tr>\n<td>GPU Memory</td>\n<td>GPU内存</td>\n<td>80GB HBM2e</td>\n</tr>\n<tr>\n<td>GPU Memory Bandwidth</td>\n<td>GPU内存带宽</td>\n<td>1935GB&#x2F;s</td>\n</tr>\n<tr>\n<td>Max Thermal Design Power (TDP)</td>\n<td>GPU最大功耗</td>\n<td>300W</td>\n</tr>\n</tbody></table>\n<h2 id=\"Windows操作系统\"><a href=\"#Windows操作系统\" class=\"headerlink\" title=\"Windows操作系统\"></a>Windows操作系统</h2><p>Windows消费级：</p>\n<p>已弃用版本：Windows XP、7、8、8.1</p>\n<p>即将弃用版本：Windows 10</p>\n<p>主流版：Windows 11</p>\n<p>Windows 11版本：家庭版、专业版、企业版、教育版、专业工作站版、IoT物联网嵌入式版（也叫Emb）、Team团队版</p>\n<p>通常安装企业版即可，Windows 10、11互联网激活方式如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以管理员权限运行cmd或powershell</span></span><br><span class=\"line\">slmgr /ipk 序列号</span><br><span class=\"line\">slmgr /skms kms服务器</span><br><span class=\"line\">slmgr /ato</span><br></pre></td></tr></table></figure>\n\n<p>常用KMS服务器：kms.03k.org</p>\n<p><a href=\"https://www.coolhub.top/tech-articles/kms_list.html\">KMS服务器状态查询网站</a></p>\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>KMS序列号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>家庭版</td>\n<td>TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</td>\n</tr>\n<tr>\n<td>专业版</td>\n<td>W269N-WFGWX-YVC9B-4J6C9-T83GX</td>\n</tr>\n<tr>\n<td>企业版</td>\n<td>NPPR9-FWDCX-D2C8J-H872K-2YT43</td>\n</tr>\n<tr>\n<td>教育版</td>\n<td>NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</td>\n</tr>\n<tr>\n<td>专业工作站版</td>\n<td>NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J</td>\n</tr>\n</tbody></table>\n<p>Windows服务器级：</p>\n<p>老版本：Windows Server 2003、2008R2、2012R2、2016、2019、2022</p>\n<p>Windows Server 2022版本：标准版、数据中心版</p>\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>KMS序列号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标准版</td>\n<td>RGN6B-MCPWX-6K6GK-HKM33-7VCXY</td>\n</tr>\n<tr>\n<td>数据中心版</td>\n<td>DNVBD-FCT8Y-TQT8Q-HGQ34-QGRRV</td>\n</tr>\n</tbody></table>\n<h2 id=\"Linux操作系统\"><a href=\"#Linux操作系统\" class=\"headerlink\" title=\"Linux操作系统\"></a>Linux操作系统</h2><table>\n<thead>\n<tr>\n<th>发行版</th>\n<th>包管理器</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CentOS</td>\n<td>yum&#x2F;rpm</td>\n<td>截止CentOS 7版本仍是很优秀的稳定系统，但是自8版本后已不再适合做为服务器系统使用</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td>apt&#x2F;deb</td>\n<td>Linux系统先驱者，最著名的Linux发行版，及其稳定，庞大的软件库，自由软件支持，强大的社区支持，多架构支持，<strong>十分推荐做为服务器和桌面操作系统</strong></td>\n</tr>\n<tr>\n<td>Ubuntu</td>\n<td>apt&#x2F;deb</td>\n<td>作为服务器系统使用有点难评，不如Debian，但是做为桌面操作系统还是可以的</td>\n</tr>\n<tr>\n<td>Arch</td>\n<td>pacman&#x2F;yay</td>\n<td>Linux折腾界的No.1，新手入门练习必备，从grub到lvm分区全方位了解Linux，也是做为桌面操作系统的一大神器，yay源软件包丰富到无法形容</td>\n</tr>\n<tr>\n<td>Kali</td>\n<td>apt&#x2F;deb</td>\n<td>最著名的渗透测试、数字取证系统，内置大量安全测试工具和程序，支持多种架构</td>\n</tr>\n<tr>\n<td>UOS</td>\n<td>apt&#x2F;deb</td>\n<td>国产统信，也就那样</td>\n</tr>\n<tr>\n<td>Deepin</td>\n<td>apt&#x2F;deb</td>\n<td>国产深度，也就那样</td>\n</tr>\n<tr>\n<td>Kylin</td>\n<td>apt&#x2F;deb</td>\n<td>我反正是不得用</td>\n</tr>\n<tr>\n<td>Kylin服务器版</td>\n<td>yum&#x2F;rpm</td>\n<td>更不得用</td>\n</tr>\n<tr>\n<td>EularOS</td>\n<td>yum&#x2F;rpm</td>\n<td>华为推出的，为啥不直接用CentOS呢？</td>\n</tr>\n</tbody></table>\n<h2 id=\"板载RAID问题\"><a href=\"#板载RAID问题\" class=\"headerlink\" title=\"板载RAID问题\"></a>板载RAID问题</h2><p>板载RAID通常使用的是Intel VROC技术，该技术仅支持部分Windows，完全不支持Linux，如果用户需要在Linux使用RAID，需配备RAID卡，或考虑mdadm、ZFS软RAID</p>\n<p><strong>建议对Linux系统选配RAID卡，如LSI 9364-8i</strong></p>\n<h2 id=\"RAID-HBA卡知识\"><a href=\"#RAID-HBA卡知识\" class=\"headerlink\" title=\"RAID&#x2F;HBA卡知识\"></a>RAID&#x2F;HBA卡知识</h2><p>以LSI RAID卡为例</p>\n<p>LSI 9364-8i，其中93是RAID卡芯片版本，64则是型号，8i则是接口，8代表支持8个端口（硬盘）也就是两个SFF-8643，i表示内部，如果是e则是外接的扩展卡，常见于HBA</p>\n<p>以LSI HBA卡为例</p>\n<p>LSI 9300-8e，如上所述，8e代表可外接8个port，也就是两个SFF-8644</p>\n<p>HBA直通卡有IR&#x2F;IT两种模式，IT(Initiator Target)是纯直通模式，呈现给系统的盘就是一个个独立磁盘；IR(Integrated RAID)模式则是卡自身支持基础的RAID 0&#x2F;1&#x2F;5，但是RAID 5通常性能低下，一般选用IT卡即可。</p>\n<p>IT卡：LSI 9300-8i<br>IR卡：LSI 9311-8i</p>\n<p>RAID卡的缓存：频繁读写的热数据会加载到RAID卡缓存中，这样可以大幅提升热数据的读写速度，但是缓存掉电丢失，所以如果要启用回写模式，必须配备BBU（RAID超级电容、电池），也可以采用SSD缓存盘的方式实现掉电不掉数据，但是缓存+BBU是最好的方案</p>\n<h2 id=\"交换机、路由器等知识\"><a href=\"#交换机、路由器等知识\" class=\"headerlink\" title=\"交换机、路由器等知识\"></a>交换机、路由器等知识</h2><p>交换机通常分为：二层交换机、三层交换机、核心交换机</p>\n<p>二层交换机也叫傻瓜式交换机，插电接线就能用，常作为接入交换机使用</p>\n<p>三层交换机则是具有管理功能，可以配置VLAN、静态路由、DHCP、ACL策略等数据链路层面功能，可以根据业务需求设置一些规则，能满足大部分业务场景</p>\n<p>核心交换机则具有更大的交换容量，更高的性能，通常还支持堆叠（交换机虚拟化）功能，将多台交换机组合模拟成一台交换机，便于运维等</p>\n<p>路由器则是负责WAN（广域网）和LAN（局域网）的连通，如拨号上网，DHCP，上网策略，终端管控，AP管理，NAT转发等数据包层面的功能</p>\n<p>除此之外，还有上网行为管理设备，其作用如同字面意思，对上网流量进行监督、管控，识别用户的上网行为，判断其流量访问了什么网站，发送了什么消息，该设备对于隐私方面存在一些争议</p>\n<p>其他的园区交换机，ONU等通常不会涉及，在此不做介绍，可以自行在网上了解</p>\n<h2 id=\"常见文件系统\"><a href=\"#常见文件系统\" class=\"headerlink\" title=\"常见文件系统\"></a>常见文件系统</h2><p>fat32：U盘常用，兼容性好，单文件不能超过4GB</p>\n<p>NTFS：Windows常用，支持大文件，大容量</p>\n<p>ext4：Linux常用，稳定性好，支持大文件大容量</p>\n<p>xfs：Linux常用，比ext4更高性能更好，支持更大容量，具有优秀的可扩展性</p>\n<p>zfs：开源高级文件系统，支持大容量，拥有独特的RAID-Z软RAID，支持快照，写时复制，自修复等特性，常用于数据量很大的服务器或存储</p>\n<p>APFS：苹果的存储系统，只适合苹果用</p>\n<h2 id=\"网络基础知识\"><a href=\"#网络基础知识\" class=\"headerlink\" title=\"网络基础知识\"></a>网络基础知识</h2><h3 id=\"IP地址-IP-Address\"><a href=\"#IP地址-IP-Address\" class=\"headerlink\" title=\"IP地址 (IP Address)\"></a>IP地址 (IP Address)</h3><p>IP地址是分配给每个连接到网络的设备的唯一标识符，就像一个设备的“网络身份证”。IP地址有两个主要版本：</p>\n<p>IPv4: 由四个十进制数（0-255）组成，中间用点分隔，例如：192.168.1.1。</p>\n<p>IPv6: 由八组十六进制数（每组四个字符）组成，中间用冒号分隔，例如：2001:0db8:85a3:0000:0000:8a2e:0370:7334。</p>\n<h3 id=\"子网掩码-Subnet-Mask\"><a href=\"#子网掩码-Subnet-Mask\" class=\"headerlink\" title=\"子网掩码 (Subnet Mask)\"></a>子网掩码 (Subnet Mask)</h3><p>子网掩码用于划分IP地址的网络部分和主机部分。它也是由四个十进制数组成，中间用点分隔，例如：255.255.255.0。</p>\n<p>子网掩码的作用是确定IP地址的哪一部分是网络ID，哪一部分是主机ID。对于255.255.255.0的子网掩码，前24位（前3个255）是网络部分，最后8位（0）是主机部分。</p>\n<p>子网掩码主要用于划分网络地址和主机地址。子网掩码中连续的 1 对应的部分表示网络部分，连续的 0 对应的部分就是主机部分</p>\n<p>主机部分的作用主要有以下几点：</p>\n<p>标识单个主机：在特定的子网内，主机部分用于区分不同的主机。</p>\n<p>确定主机数量：通过主机部分可以计算出在该子网中可用的主机数量。</p>\n<p>例如，对于子网掩码 255.255.255.0，最后一个字节的 0 部分就是主机部分。这意味着在这个子网中，可以有 2^8 - 2（减去网络地址和广播地址）&#x3D; 254 台主机。</p>\n<p>在网络通信中，通过子网掩码的主机部分可以准确地找到目标主机在子网内的具体位置，从而实现数据的准确传输和交换。</p>\n<p>再比如，子网掩码 255.255.0.0，后两个字节都是主机部分，这样在该子网中可以容纳的主机数量就大大增加了</p>\n<h3 id=\"前缀-Prefix\"><a href=\"#前缀-Prefix\" class=\"headerlink\" title=\"前缀 (Prefix)\"></a>前缀 (Prefix)</h3><p>前缀长度表示子网掩码的网络部分的长度，用斜杠加数字表示。例如，&#x2F;24表示子网掩码255.255.255.0（前24位是网络部分）。</p>\n<p>192.168.1.0&#x2F;24 表示IP地址的前24位（192.168.1）是网络部分，剩下的8位是主机部分。</p>\n<p>前缀的计算方式很简单，将十进制的子网掩码转换为二进制，有多少个1，前缀就是多少</p>\n<p>255转换为二进制是8个1：11111111</p>\n<p>所以255.255.255.0是：11111111.11111111.11111111.0，前缀便是&#x2F;24</p>\n<p>255.255.252.0则是：11111111.11111111.11111100.0，前缀&#x2F;22</p>\n<p>对照表如下：</p>\n<table>\n<thead>\n<tr>\n<th>子网掩码</th>\n<th>前缀</th>\n<th>可用主机数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>255.0.0.0</td>\n<td>&#x2F;8</td>\n<td>16777214</td>\n</tr>\n<tr>\n<td>255.128.0.0</td>\n<td>&#x2F;9</td>\n<td>8388606</td>\n</tr>\n<tr>\n<td>255.192.0.0</td>\n<td>&#x2F;10</td>\n<td>4194302</td>\n</tr>\n<tr>\n<td>255.224.0.0</td>\n<td>&#x2F;11</td>\n<td>2097150</td>\n</tr>\n<tr>\n<td>255.240.0.0</td>\n<td>&#x2F;12</td>\n<td>1048574</td>\n</tr>\n<tr>\n<td>255.248.0.0</td>\n<td>&#x2F;13</td>\n<td>524286</td>\n</tr>\n<tr>\n<td>255.252.0.0</td>\n<td>&#x2F;14</td>\n<td>262142</td>\n</tr>\n<tr>\n<td>255.254.0.0</td>\n<td>&#x2F;15</td>\n<td>131070</td>\n</tr>\n<tr>\n<td>255.255.0.0</td>\n<td>&#x2F;16</td>\n<td>65534</td>\n</tr>\n<tr>\n<td>255.255.128.0</td>\n<td>&#x2F;17</td>\n<td>32766</td>\n</tr>\n<tr>\n<td>255.255.192.0</td>\n<td>&#x2F;18</td>\n<td>16382</td>\n</tr>\n<tr>\n<td>255.255.224.0</td>\n<td>&#x2F;19</td>\n<td>8190</td>\n</tr>\n<tr>\n<td>255.255.240.0</td>\n<td>&#x2F;20</td>\n<td>4094</td>\n</tr>\n<tr>\n<td>255.255.248.0</td>\n<td>&#x2F;21</td>\n<td>2046</td>\n</tr>\n<tr>\n<td>255.255.252.0</td>\n<td>&#x2F;22</td>\n<td>1022</td>\n</tr>\n<tr>\n<td>255.255.254.0</td>\n<td>&#x2F;23</td>\n<td>510</td>\n</tr>\n<tr>\n<td>255.255.255.0</td>\n<td>&#x2F;24</td>\n<td>254</td>\n</tr>\n<tr>\n<td>255.255.255.128</td>\n<td>&#x2F;25</td>\n<td>126</td>\n</tr>\n<tr>\n<td>255.255.255.192</td>\n<td>&#x2F;26</td>\n<td>62</td>\n</tr>\n<tr>\n<td>255.255.255.224</td>\n<td>&#x2F;27</td>\n<td>30</td>\n</tr>\n<tr>\n<td>255.255.255.240</td>\n<td>&#x2F;28</td>\n<td>14</td>\n</tr>\n<tr>\n<td>255.255.255.248</td>\n<td>&#x2F;29</td>\n<td>6</td>\n</tr>\n<tr>\n<td>255.255.255.252</td>\n<td>&#x2F;30</td>\n<td>2</td>\n</tr>\n</tbody></table>\n<h3 id=\"网关-Gateway\"><a href=\"#网关-Gateway\" class=\"headerlink\" title=\"网关 (Gateway)\"></a>网关 (Gateway)</h3><p>网关是网络中的一个节点，作为其他网络（如互联网）的入口点。通常是路由器的IP地址。</p>\n<p>当一台设备需要与其他网络的设备通信时，会通过网关来转发数据。例如，家庭网络中的网关通常是192.168.1.1。</p>\n<h3 id=\"DNS-Domain-Name-System\"><a href=\"#DNS-Domain-Name-System\" class=\"headerlink\" title=\"DNS (Domain Name System)\"></a>DNS (Domain Name System)</h3><p>DNS是域名系统，将人类易读的域名，如<code>www.example.com</code>转换为机器可读的IP地址如<code>93.184.216.34</code></p>\n<p>DNS服务器负责解析域名，用户在浏览器中输入域名后，DNS服务器会将其转换为对应的IP地址，使得用户可以访问该网站。</p>\n<p>推荐的DNS服务器地址：<br>国内：119.29.29.29<br>国外：8.8.8.8<br>主DNS配119.29.29.29，备DNS配8.8.8.8，无论你是什么网络，只需要这样配即可，不需要使用任何运营商提供的乱七八糟的DNS，这两个DNS一个腾讯的一个谷歌的，足够解析全世界的域名。</p>\n<h3 id=\"网段\"><a href=\"#网段\" class=\"headerlink\" title=\"网段\"></a>网段</h3><p>IP地址由<code>.</code>分隔，分为<code>A.B.C.D</code>四个段，最常见的<code>192.168.1.1</code>，其中<code>192.168</code>这两个<code>A.B</code>段是不变的，而在<code>10.0.0.1</code>中，则是A段固定，比较小的环境中，通常只需要使用<code>192.168</code>这个局域网端，通过调整<code>C</code>段，如<code>192.168.0.0/24</code>、<code>192.168.1.0/24</code>，通过不同的C段和不同的前缀，实现控制局域网络的大小。</p>\n<p>IP地址和子网掩码的使用示例：</p>\n<p>用户有350台电脑，显然一个<code>192.168.0.0</code>段是不够的，所以需要再加一个<code>192.168.1.0</code>段，然而两个段，总共350个主机，所以对应的掩码也需要使用支持510个主机的<code>255.255.254.0</code>段，也就是<code>23</code>段，最终，IP地址范围是从<code>192.168.0.1/23</code>到<code>192.168.1.254/23</code>的510个IP地址</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>IP地址: 网络中设备的唯一标识符。</p>\n<p>子网掩码: 用于划分IP地址的网络部分和主机部分。</p>\n<p>前缀: 表示子网掩码的网络部分的长度。</p>\n<p>网关: 网络中的入口点，用于连接其他网络。</p>\n<p>DNS: 将域名转换为IP地址的系统。</p>\n","site":{"data":{}},"length":4663,"excerpt":"<h2 id=\"常见的SAS线缆\"><a href=\"#常见的SAS线缆\" class=\"headerlink\" title=\"常见的SAS线缆\"></a>常见的SAS线缆</h2><p><a href=\"https://cs-electronics.com/\">一个非常优秀的、介绍各种线缆知识的网站</a></p>\n<h3 id=\"SFF-8643-MINI-SAS-HD\"><a href=\"#SFF-8643-MINI-SAS-HD\" class=\"headerlink\" title=\"SFF-8643 &amp; MINI SAS HD\"></a>SFF-8643 &amp; MINI SAS HD</h3><p><strong>通常JBOD磁盘柜使用的，在机箱外部连接的有保护壳的是SFF-8644</strong></p>","more":"<p><img src=\"https://img.hackerbs.com/2022-10-25-10-45-40.png\" alt=\"2022-10-25-10-45-40\"></p>\n<h3 id=\"SFF-8087-MINI-SAS\"><a href=\"#SFF-8087-MINI-SAS\" class=\"headerlink\" title=\"SFF-8087 &amp; MINI SAS\"></a>SFF-8087 &amp; MINI SAS</h3><p><img src=\"https://img.hackerbs.com/2022-10-25-10-46-10.png\" alt=\"2022-10-25-10-46-10\"></p>\n<h3 id=\"SFF-8654-SLIM-SAS\"><a href=\"#SFF-8654-SLIM-SAS\" class=\"headerlink\" title=\"SFF-8654 &amp; SLIM SAS\"></a>SFF-8654 &amp; SLIM SAS</h3><p>YGR-822平台便有大量SlimSAS用于PCIe扩展连接</p>\n<p><img src=\"https://img.hackerbs.com/2022-10-25-10-44-50.png\" alt=\"2022-10-25-10-44-50\"></p>\n<h2 id=\"机房最常见的光纤及其模块和名称\"><a href=\"#机房最常见的光纤及其模块和名称\" class=\"headerlink\" title=\"机房最常见的光纤及其模块和名称\"></a>机房最常见的光纤及其模块和名称</h2><h3 id=\"最最最普遍的万兆光纤\"><a href=\"#最最最普遍的万兆光纤\" class=\"headerlink\" title=\"最最最普遍的万兆光纤\"></a>最最最普遍的万兆光纤</h3><p><img src=\"https://img.hackerbs.com//20240405213514.png\" alt=\"20240405213514\"></p>\n<p>外观上可以分辨的：两头都是LC接口</p>\n<p>重要参数：</p>\n<ol>\n<li>频率：850nm</li>\n<li>模式：多模</li>\n<li>距离：&lt;300m</li>\n<li>规格：OM3</li>\n</ol>\n<p>规格参数（OM）解读：</p>\n<table>\n<thead>\n<tr>\n<th>规格</th>\n<th>10Gb传输距离（米）</th>\n<th>性能</th>\n<th>带宽</th>\n<th>颜色</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>OM3</td>\n<td>300</td>\n<td>10Gb&#x2F;s</td>\n<td>2000MHz&#x2F;KM</td>\n<td>水蓝色</td>\n</tr>\n<tr>\n<td>OM4</td>\n<td>550</td>\n<td>40&#x2F;100Gb&#x2F;s</td>\n<td>4700MHz&#x2F;KM</td>\n<td>水蓝色</td>\n</tr>\n<tr>\n<td>OM5</td>\n<td>550</td>\n<td>40&#x2F;100&#x2F;200&#x2F;400Gb&#x2F;s</td>\n<td>28000MHz&#x2F;KM</td>\n<td>水绿色</td>\n</tr>\n</tbody></table>\n<h3 id=\"机房常见光模块\"><a href=\"#机房常见光模块\" class=\"headerlink\" title=\"机房常见光模块\"></a>机房常见光模块</h3><table>\n<thead>\n<tr>\n<th>型号</th>\n<th>俗称</th>\n<th>速率</th>\n<th>补充</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SFP</td>\n<td>千兆光模块</td>\n<td>100~4000Mb&#x2F;s</td>\n<td>淘汰产品</td>\n</tr>\n<tr>\n<td>SFP+</td>\n<td>万兆光模块</td>\n<td>10Gb&#x2F;s</td>\n<td>主流产品，机房常用LC接口</td>\n</tr>\n<tr>\n<td>SFP28</td>\n<td>25G光模块</td>\n<td>25Gb&#x2F;s</td>\n<td>比较常用</td>\n</tr>\n<tr>\n<td>QSFP+</td>\n<td>40G光模块</td>\n<td>40Gb&#x2F;s</td>\n<td>还行</td>\n</tr>\n<tr>\n<td>QSFP28</td>\n<td>100G光模块</td>\n<td>100Gb&#x2F;s</td>\n<td>很牛逼</td>\n</tr>\n</tbody></table>\n<h2 id=\"网线类型\"><a href=\"#网线类型\" class=\"headerlink\" title=\"网线类型\"></a>网线类型</h2><table>\n<thead>\n<tr>\n<th>规格</th>\n<th>俗称</th>\n<th>传输速度</th>\n<th>频率带宽</th>\n<th>传输距离m</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CAT5</td>\n<td>五类</td>\n<td>100Mbps</td>\n<td>100MHz</td>\n<td>100</td>\n</tr>\n<tr>\n<td>CAT5E</td>\n<td>超五类</td>\n<td>1000Mbps</td>\n<td>100MHz</td>\n<td>100（1Gbps）</td>\n</tr>\n<tr>\n<td>CAT6</td>\n<td>六类</td>\n<td>10Gbps</td>\n<td>250MHz</td>\n<td>55（10Gbps）</td>\n</tr>\n<tr>\n<td>CAT6A</td>\n<td>超六类</td>\n<td>10Gbps</td>\n<td>500MHz</td>\n<td>100（10Gbps）</td>\n</tr>\n<tr>\n<td>CAT7</td>\n<td>七类</td>\n<td>10Gbps</td>\n<td>600Mhz</td>\n<td>100（10Gbps）</td>\n</tr>\n<tr>\n<td>CAT8</td>\n<td>八类</td>\n<td>25&#x2F;40Gbps</td>\n<td>2000MHz</td>\n<td>30</td>\n</tr>\n</tbody></table>\n<p>非屏蔽：UTP（不抗干扰）<br>屏蔽：STP（抗干扰，前提是设备必须接地，否则电磁干扰会在屏蔽层内反弹加剧干扰）</p>\n<h2 id=\"内存类型\"><a href=\"#内存类型\" class=\"headerlink\" title=\"内存类型\"></a>内存类型</h2><table>\n<thead>\n<tr>\n<th>型号</th>\n<th>俗称</th>\n<th>区别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>non-ECC</td>\n<td>普条</td>\n<td>家用，没有数据纠错功能</td>\n</tr>\n<tr>\n<td>SODIMM</td>\n<td>小内存</td>\n<td>笔记本用</td>\n</tr>\n<tr>\n<td>unbuffered-ECC&#x2F;UDIMM</td>\n<td>服务器条</td>\n<td>服务器专用，带ECC纠错但没有缓存寄存器，家用电脑、不支持ECC的主板均无法使用</td>\n</tr>\n<tr>\n<td>REG ECC&#x2F;RDIMM</td>\n<td>大容量内存</td>\n<td>服务器专用，因为大容量颗粒CPU无法直接驱动，所以需要一颗寄存器来做中转，常见于32GB以上内存</td>\n</tr>\n<tr>\n<td>LRDIMM</td>\n<td>低电压大容量内存</td>\n<td>服务器专用，通过使用简单寄存器降低供电需求从而支持更大容量更多颗粒，常见于128G内存条</td>\n</tr>\n<tr>\n<td>DDR2</td>\n<td>2代内存</td>\n<td>频率：400-1066MHz</td>\n</tr>\n<tr>\n<td>DDR3</td>\n<td>3代内存</td>\n<td>频率：800-2133MHz</td>\n</tr>\n<tr>\n<td>DDR4</td>\n<td>4代内存</td>\n<td>频率：1600-3200MHz</td>\n</tr>\n<tr>\n<td>DDR5</td>\n<td>5代内存</td>\n<td>频率：3000-4000MHz（现在普遍用MT&#x2F;s为单位，也就是6000-8000MT&#x2F;s）</td>\n</tr>\n</tbody></table>\n<p>Intel除至强CPU外均不支持ECC内存</p>\n<p>AMD部分Ryzen消费级CPU也支持ECC，以实际说明为准</p>\n<p>小知识：观察内存条颗粒，单侧颗粒数量为偶数（通常为8颗）的，就是家用non-ECC内存，ECC内存则会多一颗颗粒用于数据校验（有点像RAID5），而有一大堆颗粒，其中还有一颗与众不同的大颗粒的，不用怀疑，那就是服务器专用的大容量RECC内存</p>\n<p>花里胡哨的家用金士顿屌炸天DDR5 8000MT&#x2F;s内存</p>\n<p><img src=\"https://img.hackerbs.com//20240405222648.png\" alt=\"花里胡哨的家用金士顿屌炸天DDR5 8000MT/s内存\"></p>\n<p>服务器RECC内存，中间那个大颗粒就是缓存寄存器</p>\n<p><img src=\"https://img.hackerbs.com//20240405222930.png\" alt=\"服务器RECC内存，中间那个大颗粒就是缓存寄存器\"></p>\n<h2 id=\"硬盘类型\"><a href=\"#硬盘类型\" class=\"headerlink\" title=\"硬盘类型\"></a>硬盘类型</h2><p>HDD：Hard Disk Drive，硬盘驱动器，传统硬盘，俗称机械硬盘<br>SSD：Solid State Drive，固态硬盘</p>\n<table>\n<thead>\n<tr>\n<th>接口</th>\n<th>类型</th>\n<th>速度</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SATA</td>\n<td>HDD</td>\n<td>100-250MB&#x2F;s</td>\n<td>便宜皮实容量大，但速度慢</td>\n</tr>\n<tr>\n<td>SAS</td>\n<td>HDD</td>\n<td>100-1200MB&#x2F;s</td>\n<td>貌似是个挺鸡肋的东西？技术更新迭代的过渡品？</td>\n</tr>\n<tr>\n<td>SATA</td>\n<td>SSD</td>\n<td>300-600MB&#x2F;s</td>\n<td>性价比相对较高，基本一个顶4个机械</td>\n</tr>\n<tr>\n<td>NVMe M.2</td>\n<td>SSD</td>\n<td>500-3500MB&#x2F;s</td>\n<td>价格比较高，速度非常快，体积也小，现在的主流硬盘</td>\n</tr>\n<tr>\n<td>U.2(SFF-8639)</td>\n<td>SSD</td>\n<td>1000-5000MB&#x2F;s</td>\n<td>价格超高，性能超屌，高端存储常用</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>接口</th>\n<th>尺寸</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SATA</td>\n<td>机械盘：3.5&#x2F;2.5寸，SSD：2.5寸</td>\n</tr>\n<tr>\n<td>SAS</td>\n<td>机械盘：3.5&#x2F;2.5寸</td>\n</tr>\n<tr>\n<td>m.2</td>\n<td>常见：2226&#x2F;2230&#x2F;2242&#x2F;2260&#x2F;2280&#x2F;22110</td>\n</tr>\n<tr>\n<td>U.2</td>\n<td>固态盘：比SATA 2.5寸厚一点</td>\n</tr>\n</tbody></table>\n<p>SATA接口的SSD，和SATA机械盘一样的接口</p>\n<p><img src=\"https://img.hackerbs.com//20240405223803.png\" alt=\"SATA接口的SSD，和SATA机械盘一样的接口\"></p>\n<p>SAS接口的HDD</p>\n<p><img src=\"https://img.hackerbs.com//20240405224330.png\" alt=\"SAS接口的HDD\"></p>\n<p>M.2接口的SSD</p>\n<p><img src=\"https://img.hackerbs.com//20240405224108.png\" alt=\"M.2接口的SSD\"></p>\n<p>U.2接口的SSD</p>\n<p><img src=\"https://img.hackerbs.com//20240405224240.png\" alt=\"U.2接口的SSD\"></p>\n<h2 id=\"主板常见接口\"><a href=\"#主板常见接口\" class=\"headerlink\" title=\"主板常见接口\"></a>主板常见接口</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>俗称</th>\n<th>作用</th>\n<th>最新版本</th>\n<th>性能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PS&#x2F;2</td>\n<td>键鼠接口</td>\n<td>相当传统的古董键鼠接口</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>VGA</td>\n<td>显示器接口</td>\n<td>最原始的显示器接口</td>\n<td>无</td>\n<td>1k60Hz</td>\n</tr>\n<tr>\n<td>DVI</td>\n<td>显示器接口</td>\n<td>相对先进一些</td>\n<td>24+5</td>\n<td>2k120Hz</td>\n</tr>\n<tr>\n<td>HDMI</td>\n<td>高清显示器接口</td>\n<td>最普遍</td>\n<td>2.1</td>\n<td>8k30Hz</td>\n</tr>\n<tr>\n<td>DP</td>\n<td>高清显示器接口</td>\n<td>最先进</td>\n<td>2.0</td>\n<td>8k60Hz</td>\n</tr>\n<tr>\n<td>COM</td>\n<td>串口</td>\n<td>传统调试接口，9针</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>USB Type-A</td>\n<td>USB口</td>\n<td>我们常说的USB口，方形</td>\n<td>3.1 Gen 2</td>\n<td>10Gbps</td>\n</tr>\n<tr>\n<td>USB Typc-C</td>\n<td>C口、华为口</td>\n<td>现在主流的手机充电口，也被部分人成为“华为充电器”</td>\n<td>USB 4 Gen 3x2</td>\n<td>40Gbps</td>\n</tr>\n<tr>\n<td>RJ45</td>\n<td>网线电口</td>\n<td>插网线上网，在服务器上通常是紧挨着的两个网口，避免与单独的BMC口混淆</td>\n<td>无</td>\n<td>10Gbps</td>\n</tr>\n<tr>\n<td>SFP+</td>\n<td>万兆光口</td>\n<td>插光模块连光纤</td>\n<td>无</td>\n<td>10Gbps</td>\n</tr>\n<tr>\n<td>BMC</td>\n<td>IPMI管理口</td>\n<td>通常用于服务器远程管理，一般位于USB上方</td>\n<td>无</td>\n<td>通常为千兆</td>\n</tr>\n<tr>\n<td>3.5mm</td>\n<td>耳机口</td>\n<td>通常有红绿蓝三孔或2合1的手机那种3.5mm孔</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>PCIe</td>\n<td>PCIe</td>\n<td>从尺寸上分为x1&#x2F;4&#x2F;8&#x2F;16，但是即便是x16尺寸，内部仍然有可能是x4信号，以主板设置或说明为准</td>\n<td>PCIe 7.x</td>\n<td>x1信号32GB&#x2F;s速率</td>\n</tr>\n<tr>\n<td>3pin</td>\n<td>3针风扇接口</td>\n<td>插机箱风扇，没有温控调速，插上就满速运转</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>4pin</td>\n<td>4针温控风扇接口</td>\n<td>插机箱风扇、CPU风扇（CPU风扇插针有专门的丝印标注），有温控调速，根据温度提升转速</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>SATA DOM</td>\n<td>迷你SSD</td>\n<td>只有一个SATA接口，部分有额外供电口，一种非常小的SSD，直接插在SATA DOM接口即可使用</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>SD</td>\n<td>SD卡</td>\n<td>SD卡并不是手机中的小存储卡（TF卡），SD卡是相机里常用的大卡，下方附图</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>TF</td>\n<td>TF卡</td>\n<td>手机里常用的很小很小的存储卡，摄像机，行车记录仪等都很常用</td>\n<td>无</td>\n<td>无</td>\n</tr>\n</tbody></table>\n<p>SD大卡</p>\n<p><img src=\"https://img.hackerbs.com//20240405231336.png\" alt=\"SD大卡\"></p>\n<p>TF小卡</p>\n<p><img src=\"https://img.hackerbs.com//20240405231412.png\" alt=\"TF小卡\"></p>\n<h2 id=\"GPU知识\"><a href=\"#GPU知识\" class=\"headerlink\" title=\"GPU知识\"></a>GPU知识</h2><p>NVIDIA GPU通常分为：游戏卡、公版、涡轮卡</p>\n<p>游戏卡通常是华硕，七彩虹等第三方生产的卡，其尺寸通常没有固定的标准，难以安装到服务器或安装双GPU</p>\n<p>公版（Founder’s Edition）是由NVIDIA官方设计的GPU，在NVIDIA官网可以查询到其尺寸信息，价格似乎也比较昂贵</p>\n<p>涡轮卡（Turbo Edition）涡轮版，也是最贵的，尺寸为标准的固定尺寸，通常为单宽，双宽，便于安装到高密度的GPU服务器中，但需要注意涡轮进风口的散热空间，尽量不要阻挡</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作用</th>\n<th>A100 80GB PCIe版示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>FP64</td>\n<td>64位双精度浮点数</td>\n<td>9.7TFLOPS</td>\n</tr>\n<tr>\n<td>FP64 Tensor Core</td>\n<td>一种精度格式，它支持半精度（FP16）数据来加速矩阵乘法，并使用单精度（FP32）或双精度（FP64）数据来修正结果，以获得更高的精度</td>\n<td>19.5TFLOPS</td>\n</tr>\n<tr>\n<td>FP32</td>\n<td>32位单精度浮点数</td>\n<td>19.5TFLOPS</td>\n</tr>\n<tr>\n<td>TF32</td>\n<td>一种截短的 Float32 数据格式，将 FP32 中 23 个尾数位截短为 10 bits，而指数位仍为 8 bits，总长度为 19 (&#x3D;1 + 8 + 10) bits</td>\n<td>156 TFLOPS&#x2F;312 TFLOPS</td>\n</tr>\n<tr>\n<td>BFLOAT16 Tensor Core</td>\n<td>一种支持低精度浮点数（BFloat16）计算的计算单元，主要用于深度学习等大规模并行计算场景</td>\n<td>312 TFLOPS&#x2F;624 TFLOPS</td>\n</tr>\n<tr>\n<td>FP16 Tensor Core</td>\n<td>一种支持半精度（FP16）浮点数计算的计算单元，主要用于深度学习等大规模并行计算场景</td>\n<td>312 TFLOPS&#x2F;624 TFLOPS</td>\n</tr>\n<tr>\n<td>INT8 Tensor Core</td>\n<td>一种针对深度学习等大规模并行计算场景的专用矩阵运算单元，它首次出现在Volta架构的GPU中，并在后续的Turing和Ampere架构中得到发展</td>\n<td>624 TOPS&#x2F;1248 TOPS</td>\n</tr>\n<tr>\n<td>GPU Memory</td>\n<td>GPU内存</td>\n<td>80GB HBM2e</td>\n</tr>\n<tr>\n<td>GPU Memory Bandwidth</td>\n<td>GPU内存带宽</td>\n<td>1935GB&#x2F;s</td>\n</tr>\n<tr>\n<td>Max Thermal Design Power (TDP)</td>\n<td>GPU最大功耗</td>\n<td>300W</td>\n</tr>\n</tbody></table>\n<h2 id=\"Windows操作系统\"><a href=\"#Windows操作系统\" class=\"headerlink\" title=\"Windows操作系统\"></a>Windows操作系统</h2><p>Windows消费级：</p>\n<p>已弃用版本：Windows XP、7、8、8.1</p>\n<p>即将弃用版本：Windows 10</p>\n<p>主流版：Windows 11</p>\n<p>Windows 11版本：家庭版、专业版、企业版、教育版、专业工作站版、IoT物联网嵌入式版（也叫Emb）、Team团队版</p>\n<p>通常安装企业版即可，Windows 10、11互联网激活方式如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以管理员权限运行cmd或powershell</span></span><br><span class=\"line\">slmgr /ipk 序列号</span><br><span class=\"line\">slmgr /skms kms服务器</span><br><span class=\"line\">slmgr /ato</span><br></pre></td></tr></table></figure>\n\n<p>常用KMS服务器：kms.03k.org</p>\n<p><a href=\"https://www.coolhub.top/tech-articles/kms_list.html\">KMS服务器状态查询网站</a></p>\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>KMS序列号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>家庭版</td>\n<td>TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</td>\n</tr>\n<tr>\n<td>专业版</td>\n<td>W269N-WFGWX-YVC9B-4J6C9-T83GX</td>\n</tr>\n<tr>\n<td>企业版</td>\n<td>NPPR9-FWDCX-D2C8J-H872K-2YT43</td>\n</tr>\n<tr>\n<td>教育版</td>\n<td>NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</td>\n</tr>\n<tr>\n<td>专业工作站版</td>\n<td>NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J</td>\n</tr>\n</tbody></table>\n<p>Windows服务器级：</p>\n<p>老版本：Windows Server 2003、2008R2、2012R2、2016、2019、2022</p>\n<p>Windows Server 2022版本：标准版、数据中心版</p>\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>KMS序列号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标准版</td>\n<td>RGN6B-MCPWX-6K6GK-HKM33-7VCXY</td>\n</tr>\n<tr>\n<td>数据中心版</td>\n<td>DNVBD-FCT8Y-TQT8Q-HGQ34-QGRRV</td>\n</tr>\n</tbody></table>\n<h2 id=\"Linux操作系统\"><a href=\"#Linux操作系统\" class=\"headerlink\" title=\"Linux操作系统\"></a>Linux操作系统</h2><table>\n<thead>\n<tr>\n<th>发行版</th>\n<th>包管理器</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CentOS</td>\n<td>yum&#x2F;rpm</td>\n<td>截止CentOS 7版本仍是很优秀的稳定系统，但是自8版本后已不再适合做为服务器系统使用</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td>apt&#x2F;deb</td>\n<td>Linux系统先驱者，最著名的Linux发行版，及其稳定，庞大的软件库，自由软件支持，强大的社区支持，多架构支持，<strong>十分推荐做为服务器和桌面操作系统</strong></td>\n</tr>\n<tr>\n<td>Ubuntu</td>\n<td>apt&#x2F;deb</td>\n<td>作为服务器系统使用有点难评，不如Debian，但是做为桌面操作系统还是可以的</td>\n</tr>\n<tr>\n<td>Arch</td>\n<td>pacman&#x2F;yay</td>\n<td>Linux折腾界的No.1，新手入门练习必备，从grub到lvm分区全方位了解Linux，也是做为桌面操作系统的一大神器，yay源软件包丰富到无法形容</td>\n</tr>\n<tr>\n<td>Kali</td>\n<td>apt&#x2F;deb</td>\n<td>最著名的渗透测试、数字取证系统，内置大量安全测试工具和程序，支持多种架构</td>\n</tr>\n<tr>\n<td>UOS</td>\n<td>apt&#x2F;deb</td>\n<td>国产统信，也就那样</td>\n</tr>\n<tr>\n<td>Deepin</td>\n<td>apt&#x2F;deb</td>\n<td>国产深度，也就那样</td>\n</tr>\n<tr>\n<td>Kylin</td>\n<td>apt&#x2F;deb</td>\n<td>我反正是不得用</td>\n</tr>\n<tr>\n<td>Kylin服务器版</td>\n<td>yum&#x2F;rpm</td>\n<td>更不得用</td>\n</tr>\n<tr>\n<td>EularOS</td>\n<td>yum&#x2F;rpm</td>\n<td>华为推出的，为啥不直接用CentOS呢？</td>\n</tr>\n</tbody></table>\n<h2 id=\"板载RAID问题\"><a href=\"#板载RAID问题\" class=\"headerlink\" title=\"板载RAID问题\"></a>板载RAID问题</h2><p>板载RAID通常使用的是Intel VROC技术，该技术仅支持部分Windows，完全不支持Linux，如果用户需要在Linux使用RAID，需配备RAID卡，或考虑mdadm、ZFS软RAID</p>\n<p><strong>建议对Linux系统选配RAID卡，如LSI 9364-8i</strong></p>\n<h2 id=\"RAID-HBA卡知识\"><a href=\"#RAID-HBA卡知识\" class=\"headerlink\" title=\"RAID&#x2F;HBA卡知识\"></a>RAID&#x2F;HBA卡知识</h2><p>以LSI RAID卡为例</p>\n<p>LSI 9364-8i，其中93是RAID卡芯片版本，64则是型号，8i则是接口，8代表支持8个端口（硬盘）也就是两个SFF-8643，i表示内部，如果是e则是外接的扩展卡，常见于HBA</p>\n<p>以LSI HBA卡为例</p>\n<p>LSI 9300-8e，如上所述，8e代表可外接8个port，也就是两个SFF-8644</p>\n<p>HBA直通卡有IR&#x2F;IT两种模式，IT(Initiator Target)是纯直通模式，呈现给系统的盘就是一个个独立磁盘；IR(Integrated RAID)模式则是卡自身支持基础的RAID 0&#x2F;1&#x2F;5，但是RAID 5通常性能低下，一般选用IT卡即可。</p>\n<p>IT卡：LSI 9300-8i<br>IR卡：LSI 9311-8i</p>\n<p>RAID卡的缓存：频繁读写的热数据会加载到RAID卡缓存中，这样可以大幅提升热数据的读写速度，但是缓存掉电丢失，所以如果要启用回写模式，必须配备BBU（RAID超级电容、电池），也可以采用SSD缓存盘的方式实现掉电不掉数据，但是缓存+BBU是最好的方案</p>\n<h2 id=\"交换机、路由器等知识\"><a href=\"#交换机、路由器等知识\" class=\"headerlink\" title=\"交换机、路由器等知识\"></a>交换机、路由器等知识</h2><p>交换机通常分为：二层交换机、三层交换机、核心交换机</p>\n<p>二层交换机也叫傻瓜式交换机，插电接线就能用，常作为接入交换机使用</p>\n<p>三层交换机则是具有管理功能，可以配置VLAN、静态路由、DHCP、ACL策略等数据链路层面功能，可以根据业务需求设置一些规则，能满足大部分业务场景</p>\n<p>核心交换机则具有更大的交换容量，更高的性能，通常还支持堆叠（交换机虚拟化）功能，将多台交换机组合模拟成一台交换机，便于运维等</p>\n<p>路由器则是负责WAN（广域网）和LAN（局域网）的连通，如拨号上网，DHCP，上网策略，终端管控，AP管理，NAT转发等数据包层面的功能</p>\n<p>除此之外，还有上网行为管理设备，其作用如同字面意思，对上网流量进行监督、管控，识别用户的上网行为，判断其流量访问了什么网站，发送了什么消息，该设备对于隐私方面存在一些争议</p>\n<p>其他的园区交换机，ONU等通常不会涉及，在此不做介绍，可以自行在网上了解</p>\n<h2 id=\"常见文件系统\"><a href=\"#常见文件系统\" class=\"headerlink\" title=\"常见文件系统\"></a>常见文件系统</h2><p>fat32：U盘常用，兼容性好，单文件不能超过4GB</p>\n<p>NTFS：Windows常用，支持大文件，大容量</p>\n<p>ext4：Linux常用，稳定性好，支持大文件大容量</p>\n<p>xfs：Linux常用，比ext4更高性能更好，支持更大容量，具有优秀的可扩展性</p>\n<p>zfs：开源高级文件系统，支持大容量，拥有独特的RAID-Z软RAID，支持快照，写时复制，自修复等特性，常用于数据量很大的服务器或存储</p>\n<p>APFS：苹果的存储系统，只适合苹果用</p>\n<h2 id=\"网络基础知识\"><a href=\"#网络基础知识\" class=\"headerlink\" title=\"网络基础知识\"></a>网络基础知识</h2><h3 id=\"IP地址-IP-Address\"><a href=\"#IP地址-IP-Address\" class=\"headerlink\" title=\"IP地址 (IP Address)\"></a>IP地址 (IP Address)</h3><p>IP地址是分配给每个连接到网络的设备的唯一标识符，就像一个设备的“网络身份证”。IP地址有两个主要版本：</p>\n<p>IPv4: 由四个十进制数（0-255）组成，中间用点分隔，例如：192.168.1.1。</p>\n<p>IPv6: 由八组十六进制数（每组四个字符）组成，中间用冒号分隔，例如：2001:0db8:85a3:0000:0000:8a2e:0370:7334。</p>\n<h3 id=\"子网掩码-Subnet-Mask\"><a href=\"#子网掩码-Subnet-Mask\" class=\"headerlink\" title=\"子网掩码 (Subnet Mask)\"></a>子网掩码 (Subnet Mask)</h3><p>子网掩码用于划分IP地址的网络部分和主机部分。它也是由四个十进制数组成，中间用点分隔，例如：255.255.255.0。</p>\n<p>子网掩码的作用是确定IP地址的哪一部分是网络ID，哪一部分是主机ID。对于255.255.255.0的子网掩码，前24位（前3个255）是网络部分，最后8位（0）是主机部分。</p>\n<p>子网掩码主要用于划分网络地址和主机地址。子网掩码中连续的 1 对应的部分表示网络部分，连续的 0 对应的部分就是主机部分</p>\n<p>主机部分的作用主要有以下几点：</p>\n<p>标识单个主机：在特定的子网内，主机部分用于区分不同的主机。</p>\n<p>确定主机数量：通过主机部分可以计算出在该子网中可用的主机数量。</p>\n<p>例如，对于子网掩码 255.255.255.0，最后一个字节的 0 部分就是主机部分。这意味着在这个子网中，可以有 2^8 - 2（减去网络地址和广播地址）&#x3D; 254 台主机。</p>\n<p>在网络通信中，通过子网掩码的主机部分可以准确地找到目标主机在子网内的具体位置，从而实现数据的准确传输和交换。</p>\n<p>再比如，子网掩码 255.255.0.0，后两个字节都是主机部分，这样在该子网中可以容纳的主机数量就大大增加了</p>\n<h3 id=\"前缀-Prefix\"><a href=\"#前缀-Prefix\" class=\"headerlink\" title=\"前缀 (Prefix)\"></a>前缀 (Prefix)</h3><p>前缀长度表示子网掩码的网络部分的长度，用斜杠加数字表示。例如，&#x2F;24表示子网掩码255.255.255.0（前24位是网络部分）。</p>\n<p>192.168.1.0&#x2F;24 表示IP地址的前24位（192.168.1）是网络部分，剩下的8位是主机部分。</p>\n<p>前缀的计算方式很简单，将十进制的子网掩码转换为二进制，有多少个1，前缀就是多少</p>\n<p>255转换为二进制是8个1：11111111</p>\n<p>所以255.255.255.0是：11111111.11111111.11111111.0，前缀便是&#x2F;24</p>\n<p>255.255.252.0则是：11111111.11111111.11111100.0，前缀&#x2F;22</p>\n<p>对照表如下：</p>\n<table>\n<thead>\n<tr>\n<th>子网掩码</th>\n<th>前缀</th>\n<th>可用主机数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>255.0.0.0</td>\n<td>&#x2F;8</td>\n<td>16777214</td>\n</tr>\n<tr>\n<td>255.128.0.0</td>\n<td>&#x2F;9</td>\n<td>8388606</td>\n</tr>\n<tr>\n<td>255.192.0.0</td>\n<td>&#x2F;10</td>\n<td>4194302</td>\n</tr>\n<tr>\n<td>255.224.0.0</td>\n<td>&#x2F;11</td>\n<td>2097150</td>\n</tr>\n<tr>\n<td>255.240.0.0</td>\n<td>&#x2F;12</td>\n<td>1048574</td>\n</tr>\n<tr>\n<td>255.248.0.0</td>\n<td>&#x2F;13</td>\n<td>524286</td>\n</tr>\n<tr>\n<td>255.252.0.0</td>\n<td>&#x2F;14</td>\n<td>262142</td>\n</tr>\n<tr>\n<td>255.254.0.0</td>\n<td>&#x2F;15</td>\n<td>131070</td>\n</tr>\n<tr>\n<td>255.255.0.0</td>\n<td>&#x2F;16</td>\n<td>65534</td>\n</tr>\n<tr>\n<td>255.255.128.0</td>\n<td>&#x2F;17</td>\n<td>32766</td>\n</tr>\n<tr>\n<td>255.255.192.0</td>\n<td>&#x2F;18</td>\n<td>16382</td>\n</tr>\n<tr>\n<td>255.255.224.0</td>\n<td>&#x2F;19</td>\n<td>8190</td>\n</tr>\n<tr>\n<td>255.255.240.0</td>\n<td>&#x2F;20</td>\n<td>4094</td>\n</tr>\n<tr>\n<td>255.255.248.0</td>\n<td>&#x2F;21</td>\n<td>2046</td>\n</tr>\n<tr>\n<td>255.255.252.0</td>\n<td>&#x2F;22</td>\n<td>1022</td>\n</tr>\n<tr>\n<td>255.255.254.0</td>\n<td>&#x2F;23</td>\n<td>510</td>\n</tr>\n<tr>\n<td>255.255.255.0</td>\n<td>&#x2F;24</td>\n<td>254</td>\n</tr>\n<tr>\n<td>255.255.255.128</td>\n<td>&#x2F;25</td>\n<td>126</td>\n</tr>\n<tr>\n<td>255.255.255.192</td>\n<td>&#x2F;26</td>\n<td>62</td>\n</tr>\n<tr>\n<td>255.255.255.224</td>\n<td>&#x2F;27</td>\n<td>30</td>\n</tr>\n<tr>\n<td>255.255.255.240</td>\n<td>&#x2F;28</td>\n<td>14</td>\n</tr>\n<tr>\n<td>255.255.255.248</td>\n<td>&#x2F;29</td>\n<td>6</td>\n</tr>\n<tr>\n<td>255.255.255.252</td>\n<td>&#x2F;30</td>\n<td>2</td>\n</tr>\n</tbody></table>\n<h3 id=\"网关-Gateway\"><a href=\"#网关-Gateway\" class=\"headerlink\" title=\"网关 (Gateway)\"></a>网关 (Gateway)</h3><p>网关是网络中的一个节点，作为其他网络（如互联网）的入口点。通常是路由器的IP地址。</p>\n<p>当一台设备需要与其他网络的设备通信时，会通过网关来转发数据。例如，家庭网络中的网关通常是192.168.1.1。</p>\n<h3 id=\"DNS-Domain-Name-System\"><a href=\"#DNS-Domain-Name-System\" class=\"headerlink\" title=\"DNS (Domain Name System)\"></a>DNS (Domain Name System)</h3><p>DNS是域名系统，将人类易读的域名，如<code>www.example.com</code>转换为机器可读的IP地址如<code>93.184.216.34</code></p>\n<p>DNS服务器负责解析域名，用户在浏览器中输入域名后，DNS服务器会将其转换为对应的IP地址，使得用户可以访问该网站。</p>\n<p>推荐的DNS服务器地址：<br>国内：119.29.29.29<br>国外：8.8.8.8<br>主DNS配119.29.29.29，备DNS配8.8.8.8，无论你是什么网络，只需要这样配即可，不需要使用任何运营商提供的乱七八糟的DNS，这两个DNS一个腾讯的一个谷歌的，足够解析全世界的域名。</p>\n<h3 id=\"网段\"><a href=\"#网段\" class=\"headerlink\" title=\"网段\"></a>网段</h3><p>IP地址由<code>.</code>分隔，分为<code>A.B.C.D</code>四个段，最常见的<code>192.168.1.1</code>，其中<code>192.168</code>这两个<code>A.B</code>段是不变的，而在<code>10.0.0.1</code>中，则是A段固定，比较小的环境中，通常只需要使用<code>192.168</code>这个局域网端，通过调整<code>C</code>段，如<code>192.168.0.0/24</code>、<code>192.168.1.0/24</code>，通过不同的C段和不同的前缀，实现控制局域网络的大小。</p>\n<p>IP地址和子网掩码的使用示例：</p>\n<p>用户有350台电脑，显然一个<code>192.168.0.0</code>段是不够的，所以需要再加一个<code>192.168.1.0</code>段，然而两个段，总共350个主机，所以对应的掩码也需要使用支持510个主机的<code>255.255.254.0</code>段，也就是<code>23</code>段，最终，IP地址范围是从<code>192.168.0.1/23</code>到<code>192.168.1.254/23</code>的510个IP地址</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>IP地址: 网络中设备的唯一标识符。</p>\n<p>子网掩码: 用于划分IP地址的网络部分和主机部分。</p>\n<p>前缀: 表示子网掩码的网络部分的长度。</p>\n<p>网关: 网络中的入口点，用于连接其他网络。</p>\n<p>DNS: 将域名转换为IP地址的系统。</p>"},{"title":"Debian安装教程","comments":1,"date":"2024-06-03T06:29:16.000Z","keywords":["Debian","Linux安装"],"_content":"\n## debian-live-12.5.0-amd64-standard安装教程\n\n该系统下载地址：\n\n[中科大镜像站下载](https://iso.mirrors.ustc.edu.cn/debian-cd/current-live/amd64/iso-hybrid/debian-live-12.5.0-amd64-standard.iso)\n\n[网盘ISO文件夹中下载](https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa)\n\n> nano打开文件便可直接编辑，保存则需要先使用Ctrl+o保存然后使用Ctrl+x退出\n\n<!-- more -->\n\n### 进入安装程序\n\n选择`Start installer`\n\n![20240603143147](https://img.hackerbs.com//20240603143147.png)\n\n### 选择语言\n\n**这一步切记，只选择English，不要选择其他，否则在命令行模式会导致无法正常显示字体，出现方块状乱码**\n\n![20240603143249](https://img.hackerbs.com//20240603143249.png)\n\n### 选择地区\n\n选择other -> Asia -> China\n\n![20240603143317](https://img.hackerbs.com//20240603143317.png)\n\n![20240603143329](https://img.hackerbs.com//20240603143329.png)\n\n![20240603143338](https://img.hackerbs.com//20240603143338.png)\n\n### 本地化配置\n\n这一步和上一步都相当于Windows的地区/语言，跟着教程选择默认的即可，除了English、en_UF.UTF-8之外的任何，除非你是老手，否则新手一律选择默认，避免字体显示错误\n\n![20240603143448](https://img.hackerbs.com//20240603143448.png)\n\n### 配置键盘\n\n默认 American English\n\n![20240603143508](https://img.hackerbs.com//20240603143508.png)\n\n### 配置网络\n\n如果有DHCP，这一步会直接跳过，没有DHCP需要手动配置的参考下文手动配置IP\n\n![20240603143600](https://img.hackerbs.com//20240603143600.png)\n\n#### 手动配置IP\n\n若没有DHCP或没有网线,这一步会提示网络连接失败\n\n图中提示的内容大概意思是`您的网络没有DHCP服务器或DHCP响应过慢`\n\n![20240603143716](https://img.hackerbs.com//20240603143716.png)\n\n选择`Continue`，选择`Configure network manually`手动配置网络\n\n![20240603143838](https://img.hackerbs.com//20240603143838.png)\n\n填写IP地址和子网掩码前缀，在Linux建议更多是使用前缀，而不是输一堆255\n\n255.255.255.0 = 11111111.11111111.11111111.0 = 24 （前缀就是有多少个1就是多少，所以是24）\n\n255.255.252.0 = 11111111.11111111.11111100.0 = 22\n\n![20240603145231](https://img.hackerbs.com//20240603145231.png)\n\n填写网关\n\n![20240603145247](https://img.hackerbs.com//20240603145247.png)\n\n填写DNS\n\n国内腾讯`119.29.29.29`，境外谷歌`8.8.8.8`，这两个DNS足够解析全世界的域名并兼顾速度了\n\n![20240603154540](https://img.hackerbs.com//20240603154540.png)\n\n### 填写主机名\n\n也就是hostname，没啥可说的，默认或者按需修改\n\n![20240603154644](https://img.hackerbs.com//20240603154644.png)\n\n### 填写域名\n\n留空或者按需填写\n\n![20240603154725](https://img.hackerbs.com//20240603154725.png)\n\n### 设置root用户密码\n\n设强点，别老用弱密码\n\n![20240603154847](https://img.hackerbs.com//20240603154847.png)\n\n### 创建新用户\n\n这一步无法跳过，如果没有特别需要，直接随便建，进了系统删了即可\n\n这一步`Full name for the new user:`是显示名称，和登陆无关，可以理解为QQ名\n\n![20240603154927](https://img.hackerbs.com//20240603154927.png)\n\n这一步才是用户名，要遵循规范，可以理解为QQ号，是登陆系统的账号\n\n![20240603155108](https://img.hackerbs.com//20240603155108.png)\n\n设密码\n\n![20240603155132](https://img.hackerbs.com//20240603155132.png)\n\n### 格式化磁盘\n\n如果你玩不来（你都看我教程了肯定是玩不来），那就记住了，选`Guided - use entire disk and set up LVM`，**必须必须必须使用LVM逻辑卷**，不然后期调整磁盘你就整个傻住了（恕我直言，不用lvm逻辑卷的全是瓜娃子！）\n\n![20240603160221](https://img.hackerbs.com//20240603160221.png)\n\n选择硬盘\n\n![20240603160247](https://img.hackerbs.com//20240603160247.png)\n\n### 选择分区方式\n\n新手，听我的，直接第一个`All files in  one partition`，将所有文件放到一个分区就行，别觉得分开分区有什么卵用，就算是生产环境都基本用不着\n\n![20240603160451](https://img.hackerbs.com//20240603160451.png)\n\n### 确认是否分区\n\n选Yes然后Enter就完事儿了\n\n![20240603160521](https://img.hackerbs.com//20240603160521.png)\n\n默认会选择全部空间，或者你也可以输个max\n\n![20240603160550](https://img.hackerbs.com//20240603160550.png)\n\n选择`Finish partitionging and write changes to disk`然后`Continue`\n\n![20240603160627](https://img.hackerbs.com//20240603160627.png)\n\n选择Yes然后Enter\n\n![20240603160645](https://img.hackerbs.com//20240603160645.png)\n\n### 等待系统安装\n\n![20240603160756](https://img.hackerbs.com//20240603160756.png)\n\n### 是否启用网络镜像\n\n没网的直接NO，有网的Yes然后Enter\n\n![20240603160857](https://img.hackerbs.com//20240603160857.png)\n\n选择China\n\n![20240603160918](https://img.hackerbs.com//20240603160918.png)\n\n建议`mirrors.ustc.edu.cn`，中科大万岁\n\n![20240603160943](https://img.hackerbs.com//20240603160943.png)\n\n不需要代理，直接Enter下一步\n\n![20240603161008](https://img.hackerbs.com//20240603161008.png)\n\n开始配置apt，也就是网络镜像\n\n![20240603161318](https://img.hackerbs.com//20240603161318.png)\n\n#### 提示镜像故障\n\n这一步就是网络问题了，可以考虑直接先不用网络镜像\n\n![20240603161048](https://img.hackerbs.com//20240603161048.png)\n\n### 安装完毕\n\n安装完毕，Continue重启\n\n![20240603161655](https://img.hackerbs.com//20240603161655.png)\n\n### 删除安装过程中不得不创建的用户\n\n登陆\n\n![20240603161753](https://img.hackerbs.com//20240603161753.png)\n\n使用`userdel -r 用户名`删除创建的用户\n\n![20240603161857](https://img.hackerbs.com//20240603161857.png)\n\n### 额外内容\n\n#### 手动配置网络\n\n使用`ip addr`查看网卡名称\n\n本次演示的只有一张网卡，是enp6s18，其中`state UP`表示该网卡已经插好网线\n\n![20240603162420](https://img.hackerbs.com//20240603162420.png)\n\n使用`nano /etc/network/interfaces`编辑网络配置文件\n\n使用`nano /etc/resolv.conf`编辑DNS配置文件\n\n|配置项|作用|注意事项|\n|---|---|---|\n|auto enp6s18|网卡开机自启||\n|iface enp6s18 inet static|指定配置哪张网卡|static表示静态IP,dhcp则是动态|\n|address|IP地址/前缀||\n|gateway|网关地址||\n|dns-search|对应安装过程中的domain域名||\n|nameserver|DNS服务器|一行一个，nameserver 119.29.29.29|\n\n网卡配置文件示例\n\n![20240603162336](https://img.hackerbs.com//20240603162336.png)\n\nDNS配置文件示例\n\n![20240603163137](https://img.hackerbs.com//20240603163137.png)\n\n编辑完成后使用`systemctl restart networking.service`重启网络\n\n![20240603163210](https://img.hackerbs.com//20240603163210.png)\n\n#### 手动配置apt源\n\n**如果安装的时候没有使用网络镜像，且需要配置apt源的话，进行该步骤，否则忽略**\n\n直接使用`rm -f /etc/apt/sources.list`删除源配置文件\n\n编辑`nano /etc/apt/sources.list`源配置文件，先手动添加第一行\n\n`deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware`\n\n![20240603163523](https://img.hackerbs.com//20240603163523.png)\n\n编辑后使用`apt update`更新源\n\n![20240603163751](https://img.hackerbs.com//20240603163751.png)\n\n#### 安装OpenSSH-server并配置root密码登陆\n\n使用`apt install openssh-server -f`安装OpenSSH server\n\n![20240603163908](https://img.hackerbs.com//20240603163908.png)\n\n`nano /etc/ssh/sshd_config`编辑ssh配置文件，在原本的`#PermitRootLogin prohibit-password`下方添加`PermitRootLogin yes`\n\n上方的`#Port 22`取消注释修改为其他端口即可实现修改ssh端口功能，如`Port 10022`\n\n![20240603164013](https://img.hackerbs.com//20240603164013.png)\n\n编辑后使用`systemctl restart ssh`重启ssh服务，之后便可使用ssh连接服务器了\n\n#### 配置完全apt国内镜像\n\n继上文配置ssh后，便可使用ssh远程访问服务器，这样复制粘贴便方便多了\n\n在这里推荐snullp大佬开发的[配置生成器](https://mirrors.ustc.edu.cn/repogen/)，注意根据你的Debian版本选择不同的内容，本教程使用的是bookworm，apt完全配置内容如下，其他配置内容可以查看本站的[apt等各种源列表（持续更新）](https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html)\n\n```shell\ndeb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\n\ndeb https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\n\ndeb https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\n\ndeb https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\n```\n\n同样的，还是编辑`/etc/apt/sources.list`\n\n![20240603164707](https://img.hackerbs.com//20240603164707.png)\n\n编辑后还是使用`apt update`更新源即可","source":"_posts/Debian安装教程.md","raw":"---\ntitle: Debian安装教程\ncomments: true\ncategories: [知识库]\ndate: 2024-06-03 14:29:16\nkeywords:\n    - Debian\n    - Linux安装\ntags:\n    - Debian\n    - Debian安装\n    - Linux安装\n    - Debian服务器\n    - Linux\n---\n\n## debian-live-12.5.0-amd64-standard安装教程\n\n该系统下载地址：\n\n[中科大镜像站下载](https://iso.mirrors.ustc.edu.cn/debian-cd/current-live/amd64/iso-hybrid/debian-live-12.5.0-amd64-standard.iso)\n\n[网盘ISO文件夹中下载](https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa)\n\n> nano打开文件便可直接编辑，保存则需要先使用Ctrl+o保存然后使用Ctrl+x退出\n\n<!-- more -->\n\n### 进入安装程序\n\n选择`Start installer`\n\n![20240603143147](https://img.hackerbs.com//20240603143147.png)\n\n### 选择语言\n\n**这一步切记，只选择English，不要选择其他，否则在命令行模式会导致无法正常显示字体，出现方块状乱码**\n\n![20240603143249](https://img.hackerbs.com//20240603143249.png)\n\n### 选择地区\n\n选择other -> Asia -> China\n\n![20240603143317](https://img.hackerbs.com//20240603143317.png)\n\n![20240603143329](https://img.hackerbs.com//20240603143329.png)\n\n![20240603143338](https://img.hackerbs.com//20240603143338.png)\n\n### 本地化配置\n\n这一步和上一步都相当于Windows的地区/语言，跟着教程选择默认的即可，除了English、en_UF.UTF-8之外的任何，除非你是老手，否则新手一律选择默认，避免字体显示错误\n\n![20240603143448](https://img.hackerbs.com//20240603143448.png)\n\n### 配置键盘\n\n默认 American English\n\n![20240603143508](https://img.hackerbs.com//20240603143508.png)\n\n### 配置网络\n\n如果有DHCP，这一步会直接跳过，没有DHCP需要手动配置的参考下文手动配置IP\n\n![20240603143600](https://img.hackerbs.com//20240603143600.png)\n\n#### 手动配置IP\n\n若没有DHCP或没有网线,这一步会提示网络连接失败\n\n图中提示的内容大概意思是`您的网络没有DHCP服务器或DHCP响应过慢`\n\n![20240603143716](https://img.hackerbs.com//20240603143716.png)\n\n选择`Continue`，选择`Configure network manually`手动配置网络\n\n![20240603143838](https://img.hackerbs.com//20240603143838.png)\n\n填写IP地址和子网掩码前缀，在Linux建议更多是使用前缀，而不是输一堆255\n\n255.255.255.0 = 11111111.11111111.11111111.0 = 24 （前缀就是有多少个1就是多少，所以是24）\n\n255.255.252.0 = 11111111.11111111.11111100.0 = 22\n\n![20240603145231](https://img.hackerbs.com//20240603145231.png)\n\n填写网关\n\n![20240603145247](https://img.hackerbs.com//20240603145247.png)\n\n填写DNS\n\n国内腾讯`119.29.29.29`，境外谷歌`8.8.8.8`，这两个DNS足够解析全世界的域名并兼顾速度了\n\n![20240603154540](https://img.hackerbs.com//20240603154540.png)\n\n### 填写主机名\n\n也就是hostname，没啥可说的，默认或者按需修改\n\n![20240603154644](https://img.hackerbs.com//20240603154644.png)\n\n### 填写域名\n\n留空或者按需填写\n\n![20240603154725](https://img.hackerbs.com//20240603154725.png)\n\n### 设置root用户密码\n\n设强点，别老用弱密码\n\n![20240603154847](https://img.hackerbs.com//20240603154847.png)\n\n### 创建新用户\n\n这一步无法跳过，如果没有特别需要，直接随便建，进了系统删了即可\n\n这一步`Full name for the new user:`是显示名称，和登陆无关，可以理解为QQ名\n\n![20240603154927](https://img.hackerbs.com//20240603154927.png)\n\n这一步才是用户名，要遵循规范，可以理解为QQ号，是登陆系统的账号\n\n![20240603155108](https://img.hackerbs.com//20240603155108.png)\n\n设密码\n\n![20240603155132](https://img.hackerbs.com//20240603155132.png)\n\n### 格式化磁盘\n\n如果你玩不来（你都看我教程了肯定是玩不来），那就记住了，选`Guided - use entire disk and set up LVM`，**必须必须必须使用LVM逻辑卷**，不然后期调整磁盘你就整个傻住了（恕我直言，不用lvm逻辑卷的全是瓜娃子！）\n\n![20240603160221](https://img.hackerbs.com//20240603160221.png)\n\n选择硬盘\n\n![20240603160247](https://img.hackerbs.com//20240603160247.png)\n\n### 选择分区方式\n\n新手，听我的，直接第一个`All files in  one partition`，将所有文件放到一个分区就行，别觉得分开分区有什么卵用，就算是生产环境都基本用不着\n\n![20240603160451](https://img.hackerbs.com//20240603160451.png)\n\n### 确认是否分区\n\n选Yes然后Enter就完事儿了\n\n![20240603160521](https://img.hackerbs.com//20240603160521.png)\n\n默认会选择全部空间，或者你也可以输个max\n\n![20240603160550](https://img.hackerbs.com//20240603160550.png)\n\n选择`Finish partitionging and write changes to disk`然后`Continue`\n\n![20240603160627](https://img.hackerbs.com//20240603160627.png)\n\n选择Yes然后Enter\n\n![20240603160645](https://img.hackerbs.com//20240603160645.png)\n\n### 等待系统安装\n\n![20240603160756](https://img.hackerbs.com//20240603160756.png)\n\n### 是否启用网络镜像\n\n没网的直接NO，有网的Yes然后Enter\n\n![20240603160857](https://img.hackerbs.com//20240603160857.png)\n\n选择China\n\n![20240603160918](https://img.hackerbs.com//20240603160918.png)\n\n建议`mirrors.ustc.edu.cn`，中科大万岁\n\n![20240603160943](https://img.hackerbs.com//20240603160943.png)\n\n不需要代理，直接Enter下一步\n\n![20240603161008](https://img.hackerbs.com//20240603161008.png)\n\n开始配置apt，也就是网络镜像\n\n![20240603161318](https://img.hackerbs.com//20240603161318.png)\n\n#### 提示镜像故障\n\n这一步就是网络问题了，可以考虑直接先不用网络镜像\n\n![20240603161048](https://img.hackerbs.com//20240603161048.png)\n\n### 安装完毕\n\n安装完毕，Continue重启\n\n![20240603161655](https://img.hackerbs.com//20240603161655.png)\n\n### 删除安装过程中不得不创建的用户\n\n登陆\n\n![20240603161753](https://img.hackerbs.com//20240603161753.png)\n\n使用`userdel -r 用户名`删除创建的用户\n\n![20240603161857](https://img.hackerbs.com//20240603161857.png)\n\n### 额外内容\n\n#### 手动配置网络\n\n使用`ip addr`查看网卡名称\n\n本次演示的只有一张网卡，是enp6s18，其中`state UP`表示该网卡已经插好网线\n\n![20240603162420](https://img.hackerbs.com//20240603162420.png)\n\n使用`nano /etc/network/interfaces`编辑网络配置文件\n\n使用`nano /etc/resolv.conf`编辑DNS配置文件\n\n|配置项|作用|注意事项|\n|---|---|---|\n|auto enp6s18|网卡开机自启||\n|iface enp6s18 inet static|指定配置哪张网卡|static表示静态IP,dhcp则是动态|\n|address|IP地址/前缀||\n|gateway|网关地址||\n|dns-search|对应安装过程中的domain域名||\n|nameserver|DNS服务器|一行一个，nameserver 119.29.29.29|\n\n网卡配置文件示例\n\n![20240603162336](https://img.hackerbs.com//20240603162336.png)\n\nDNS配置文件示例\n\n![20240603163137](https://img.hackerbs.com//20240603163137.png)\n\n编辑完成后使用`systemctl restart networking.service`重启网络\n\n![20240603163210](https://img.hackerbs.com//20240603163210.png)\n\n#### 手动配置apt源\n\n**如果安装的时候没有使用网络镜像，且需要配置apt源的话，进行该步骤，否则忽略**\n\n直接使用`rm -f /etc/apt/sources.list`删除源配置文件\n\n编辑`nano /etc/apt/sources.list`源配置文件，先手动添加第一行\n\n`deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware`\n\n![20240603163523](https://img.hackerbs.com//20240603163523.png)\n\n编辑后使用`apt update`更新源\n\n![20240603163751](https://img.hackerbs.com//20240603163751.png)\n\n#### 安装OpenSSH-server并配置root密码登陆\n\n使用`apt install openssh-server -f`安装OpenSSH server\n\n![20240603163908](https://img.hackerbs.com//20240603163908.png)\n\n`nano /etc/ssh/sshd_config`编辑ssh配置文件，在原本的`#PermitRootLogin prohibit-password`下方添加`PermitRootLogin yes`\n\n上方的`#Port 22`取消注释修改为其他端口即可实现修改ssh端口功能，如`Port 10022`\n\n![20240603164013](https://img.hackerbs.com//20240603164013.png)\n\n编辑后使用`systemctl restart ssh`重启ssh服务，之后便可使用ssh连接服务器了\n\n#### 配置完全apt国内镜像\n\n继上文配置ssh后，便可使用ssh远程访问服务器，这样复制粘贴便方便多了\n\n在这里推荐snullp大佬开发的[配置生成器](https://mirrors.ustc.edu.cn/repogen/)，注意根据你的Debian版本选择不同的内容，本教程使用的是bookworm，apt完全配置内容如下，其他配置内容可以查看本站的[apt等各种源列表（持续更新）](https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html)\n\n```shell\ndeb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\n\ndeb https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\n\ndeb https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\n\ndeb https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\ndeb-src https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\n```\n\n同样的，还是编辑`/etc/apt/sources.list`\n\n![20240603164707](https://img.hackerbs.com//20240603164707.png)\n\n编辑后还是使用`apt update`更新源即可","slug":"Debian安装教程","published":1,"updated":"2025-09-04T06:44:07.220Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwto000a9szwgbxz1mg0","content":"<h2 id=\"debian-live-12-5-0-amd64-standard安装教程\"><a href=\"#debian-live-12-5-0-amd64-standard安装教程\" class=\"headerlink\" title=\"debian-live-12.5.0-amd64-standard安装教程\"></a>debian-live-12.5.0-amd64-standard安装教程</h2><p>该系统下载地址：</p>\n<p><a href=\"https://iso.mirrors.ustc.edu.cn/debian-cd/current-live/amd64/iso-hybrid/debian-live-12.5.0-amd64-standard.iso\">中科大镜像站下载</a></p>\n<p><a href=\"https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa\">网盘ISO文件夹中下载</a></p>\n<blockquote>\n<p>nano打开文件便可直接编辑，保存则需要先使用Ctrl+o保存然后使用Ctrl+x退出</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h3 id=\"进入安装程序\"><a href=\"#进入安装程序\" class=\"headerlink\" title=\"进入安装程序\"></a>进入安装程序</h3><p>选择<code>Start installer</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603143147.png\" alt=\"20240603143147\"></p>\n<h3 id=\"选择语言\"><a href=\"#选择语言\" class=\"headerlink\" title=\"选择语言\"></a>选择语言</h3><p><strong>这一步切记，只选择English，不要选择其他，否则在命令行模式会导致无法正常显示字体，出现方块状乱码</strong></p>\n<p><img src=\"https://img.hackerbs.com//20240603143249.png\" alt=\"20240603143249\"></p>\n<h3 id=\"选择地区\"><a href=\"#选择地区\" class=\"headerlink\" title=\"选择地区\"></a>选择地区</h3><p>选择other -&gt; Asia -&gt; China</p>\n<p><img src=\"https://img.hackerbs.com//20240603143317.png\" alt=\"20240603143317\"></p>\n<p><img src=\"https://img.hackerbs.com//20240603143329.png\" alt=\"20240603143329\"></p>\n<p><img src=\"https://img.hackerbs.com//20240603143338.png\" alt=\"20240603143338\"></p>\n<h3 id=\"本地化配置\"><a href=\"#本地化配置\" class=\"headerlink\" title=\"本地化配置\"></a>本地化配置</h3><p>这一步和上一步都相当于Windows的地区&#x2F;语言，跟着教程选择默认的即可，除了English、en_UF.UTF-8之外的任何，除非你是老手，否则新手一律选择默认，避免字体显示错误</p>\n<p><img src=\"https://img.hackerbs.com//20240603143448.png\" alt=\"20240603143448\"></p>\n<h3 id=\"配置键盘\"><a href=\"#配置键盘\" class=\"headerlink\" title=\"配置键盘\"></a>配置键盘</h3><p>默认 American English</p>\n<p><img src=\"https://img.hackerbs.com//20240603143508.png\" alt=\"20240603143508\"></p>\n<h3 id=\"配置网络\"><a href=\"#配置网络\" class=\"headerlink\" title=\"配置网络\"></a>配置网络</h3><p>如果有DHCP，这一步会直接跳过，没有DHCP需要手动配置的参考下文手动配置IP</p>\n<p><img src=\"https://img.hackerbs.com//20240603143600.png\" alt=\"20240603143600\"></p>\n<h4 id=\"手动配置IP\"><a href=\"#手动配置IP\" class=\"headerlink\" title=\"手动配置IP\"></a>手动配置IP</h4><p>若没有DHCP或没有网线,这一步会提示网络连接失败</p>\n<p>图中提示的内容大概意思是<code>您的网络没有DHCP服务器或DHCP响应过慢</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603143716.png\" alt=\"20240603143716\"></p>\n<p>选择<code>Continue</code>，选择<code>Configure network manually</code>手动配置网络</p>\n<p><img src=\"https://img.hackerbs.com//20240603143838.png\" alt=\"20240603143838\"></p>\n<p>填写IP地址和子网掩码前缀，在Linux建议更多是使用前缀，而不是输一堆255</p>\n<p>255.255.255.0 &#x3D; 11111111.11111111.11111111.0 &#x3D; 24 （前缀就是有多少个1就是多少，所以是24）</p>\n<p>255.255.252.0 &#x3D; 11111111.11111111.11111100.0 &#x3D; 22</p>\n<p><img src=\"https://img.hackerbs.com//20240603145231.png\" alt=\"20240603145231\"></p>\n<p>填写网关</p>\n<p><img src=\"https://img.hackerbs.com//20240603145247.png\" alt=\"20240603145247\"></p>\n<p>填写DNS</p>\n<p>国内腾讯<code>119.29.29.29</code>，境外谷歌<code>8.8.8.8</code>，这两个DNS足够解析全世界的域名并兼顾速度了</p>\n<p><img src=\"https://img.hackerbs.com//20240603154540.png\" alt=\"20240603154540\"></p>\n<h3 id=\"填写主机名\"><a href=\"#填写主机名\" class=\"headerlink\" title=\"填写主机名\"></a>填写主机名</h3><p>也就是hostname，没啥可说的，默认或者按需修改</p>\n<p><img src=\"https://img.hackerbs.com//20240603154644.png\" alt=\"20240603154644\"></p>\n<h3 id=\"填写域名\"><a href=\"#填写域名\" class=\"headerlink\" title=\"填写域名\"></a>填写域名</h3><p>留空或者按需填写</p>\n<p><img src=\"https://img.hackerbs.com//20240603154725.png\" alt=\"20240603154725\"></p>\n<h3 id=\"设置root用户密码\"><a href=\"#设置root用户密码\" class=\"headerlink\" title=\"设置root用户密码\"></a>设置root用户密码</h3><p>设强点，别老用弱密码</p>\n<p><img src=\"https://img.hackerbs.com//20240603154847.png\" alt=\"20240603154847\"></p>\n<h3 id=\"创建新用户\"><a href=\"#创建新用户\" class=\"headerlink\" title=\"创建新用户\"></a>创建新用户</h3><p>这一步无法跳过，如果没有特别需要，直接随便建，进了系统删了即可</p>\n<p>这一步<code>Full name for the new user:</code>是显示名称，和登陆无关，可以理解为QQ名</p>\n<p><img src=\"https://img.hackerbs.com//20240603154927.png\" alt=\"20240603154927\"></p>\n<p>这一步才是用户名，要遵循规范，可以理解为QQ号，是登陆系统的账号</p>\n<p><img src=\"https://img.hackerbs.com//20240603155108.png\" alt=\"20240603155108\"></p>\n<p>设密码</p>\n<p><img src=\"https://img.hackerbs.com//20240603155132.png\" alt=\"20240603155132\"></p>\n<h3 id=\"格式化磁盘\"><a href=\"#格式化磁盘\" class=\"headerlink\" title=\"格式化磁盘\"></a>格式化磁盘</h3><p>如果你玩不来（你都看我教程了肯定是玩不来），那就记住了，选<code>Guided - use entire disk and set up LVM</code>，<strong>必须必须必须使用LVM逻辑卷</strong>，不然后期调整磁盘你就整个傻住了（恕我直言，不用lvm逻辑卷的全是瓜娃子！）</p>\n<p><img src=\"https://img.hackerbs.com//20240603160221.png\" alt=\"20240603160221\"></p>\n<p>选择硬盘</p>\n<p><img src=\"https://img.hackerbs.com//20240603160247.png\" alt=\"20240603160247\"></p>\n<h3 id=\"选择分区方式\"><a href=\"#选择分区方式\" class=\"headerlink\" title=\"选择分区方式\"></a>选择分区方式</h3><p>新手，听我的，直接第一个<code>All files in  one partition</code>，将所有文件放到一个分区就行，别觉得分开分区有什么卵用，就算是生产环境都基本用不着</p>\n<p><img src=\"https://img.hackerbs.com//20240603160451.png\" alt=\"20240603160451\"></p>\n<h3 id=\"确认是否分区\"><a href=\"#确认是否分区\" class=\"headerlink\" title=\"确认是否分区\"></a>确认是否分区</h3><p>选Yes然后Enter就完事儿了</p>\n<p><img src=\"https://img.hackerbs.com//20240603160521.png\" alt=\"20240603160521\"></p>\n<p>默认会选择全部空间，或者你也可以输个max</p>\n<p><img src=\"https://img.hackerbs.com//20240603160550.png\" alt=\"20240603160550\"></p>\n<p>选择<code>Finish partitionging and write changes to disk</code>然后<code>Continue</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603160627.png\" alt=\"20240603160627\"></p>\n<p>选择Yes然后Enter</p>\n<p><img src=\"https://img.hackerbs.com//20240603160645.png\" alt=\"20240603160645\"></p>\n<h3 id=\"等待系统安装\"><a href=\"#等待系统安装\" class=\"headerlink\" title=\"等待系统安装\"></a>等待系统安装</h3><p><img src=\"https://img.hackerbs.com//20240603160756.png\" alt=\"20240603160756\"></p>\n<h3 id=\"是否启用网络镜像\"><a href=\"#是否启用网络镜像\" class=\"headerlink\" title=\"是否启用网络镜像\"></a>是否启用网络镜像</h3><p>没网的直接NO，有网的Yes然后Enter</p>\n<p><img src=\"https://img.hackerbs.com//20240603160857.png\" alt=\"20240603160857\"></p>\n<p>选择China</p>\n<p><img src=\"https://img.hackerbs.com//20240603160918.png\" alt=\"20240603160918\"></p>\n<p>建议<code>mirrors.ustc.edu.cn</code>，中科大万岁</p>\n<p><img src=\"https://img.hackerbs.com//20240603160943.png\" alt=\"20240603160943\"></p>\n<p>不需要代理，直接Enter下一步</p>\n<p><img src=\"https://img.hackerbs.com//20240603161008.png\" alt=\"20240603161008\"></p>\n<p>开始配置apt，也就是网络镜像</p>\n<p><img src=\"https://img.hackerbs.com//20240603161318.png\" alt=\"20240603161318\"></p>\n<h4 id=\"提示镜像故障\"><a href=\"#提示镜像故障\" class=\"headerlink\" title=\"提示镜像故障\"></a>提示镜像故障</h4><p>这一步就是网络问题了，可以考虑直接先不用网络镜像</p>\n<p><img src=\"https://img.hackerbs.com//20240603161048.png\" alt=\"20240603161048\"></p>\n<h3 id=\"安装完毕\"><a href=\"#安装完毕\" class=\"headerlink\" title=\"安装完毕\"></a>安装完毕</h3><p>安装完毕，Continue重启</p>\n<p><img src=\"https://img.hackerbs.com//20240603161655.png\" alt=\"20240603161655\"></p>\n<h3 id=\"删除安装过程中不得不创建的用户\"><a href=\"#删除安装过程中不得不创建的用户\" class=\"headerlink\" title=\"删除安装过程中不得不创建的用户\"></a>删除安装过程中不得不创建的用户</h3><p>登陆</p>\n<p><img src=\"https://img.hackerbs.com//20240603161753.png\" alt=\"20240603161753\"></p>\n<p>使用<code>userdel -r 用户名</code>删除创建的用户</p>\n<p><img src=\"https://img.hackerbs.com//20240603161857.png\" alt=\"20240603161857\"></p>\n<h3 id=\"额外内容\"><a href=\"#额外内容\" class=\"headerlink\" title=\"额外内容\"></a>额外内容</h3><h4 id=\"手动配置网络\"><a href=\"#手动配置网络\" class=\"headerlink\" title=\"手动配置网络\"></a>手动配置网络</h4><p>使用<code>ip addr</code>查看网卡名称</p>\n<p>本次演示的只有一张网卡，是enp6s18，其中<code>state UP</code>表示该网卡已经插好网线</p>\n<p><img src=\"https://img.hackerbs.com//20240603162420.png\" alt=\"20240603162420\"></p>\n<p>使用<code>nano /etc/network/interfaces</code>编辑网络配置文件</p>\n<p>使用<code>nano /etc/resolv.conf</code>编辑DNS配置文件</p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>作用</th>\n<th>注意事项</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>auto enp6s18</td>\n<td>网卡开机自启</td>\n<td></td>\n</tr>\n<tr>\n<td>iface enp6s18 inet static</td>\n<td>指定配置哪张网卡</td>\n<td>static表示静态IP,dhcp则是动态</td>\n</tr>\n<tr>\n<td>address</td>\n<td>IP地址&#x2F;前缀</td>\n<td></td>\n</tr>\n<tr>\n<td>gateway</td>\n<td>网关地址</td>\n<td></td>\n</tr>\n<tr>\n<td>dns-search</td>\n<td>对应安装过程中的domain域名</td>\n<td></td>\n</tr>\n<tr>\n<td>nameserver</td>\n<td>DNS服务器</td>\n<td>一行一个，nameserver 119.29.29.29</td>\n</tr>\n</tbody></table>\n<p>网卡配置文件示例</p>\n<p><img src=\"https://img.hackerbs.com//20240603162336.png\" alt=\"20240603162336\"></p>\n<p>DNS配置文件示例</p>\n<p><img src=\"https://img.hackerbs.com//20240603163137.png\" alt=\"20240603163137\"></p>\n<p>编辑完成后使用<code>systemctl restart networking.service</code>重启网络</p>\n<p><img src=\"https://img.hackerbs.com//20240603163210.png\" alt=\"20240603163210\"></p>\n<h4 id=\"手动配置apt源\"><a href=\"#手动配置apt源\" class=\"headerlink\" title=\"手动配置apt源\"></a>手动配置apt源</h4><p><strong>如果安装的时候没有使用网络镜像，且需要配置apt源的话，进行该步骤，否则忽略</strong></p>\n<p>直接使用<code>rm -f /etc/apt/sources.list</code>删除源配置文件</p>\n<p>编辑<code>nano /etc/apt/sources.list</code>源配置文件，先手动添加第一行</p>\n<p><code>deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603163523.png\" alt=\"20240603163523\"></p>\n<p>编辑后使用<code>apt update</code>更新源</p>\n<p><img src=\"https://img.hackerbs.com//20240603163751.png\" alt=\"20240603163751\"></p>\n<h4 id=\"安装OpenSSH-server并配置root密码登陆\"><a href=\"#安装OpenSSH-server并配置root密码登陆\" class=\"headerlink\" title=\"安装OpenSSH-server并配置root密码登陆\"></a>安装OpenSSH-server并配置root密码登陆</h4><p>使用<code>apt install openssh-server -f</code>安装OpenSSH server</p>\n<p><img src=\"https://img.hackerbs.com//20240603163908.png\" alt=\"20240603163908\"></p>\n<p><code>nano /etc/ssh/sshd_config</code>编辑ssh配置文件，在原本的<code>#PermitRootLogin prohibit-password</code>下方添加<code>PermitRootLogin yes</code></p>\n<p>上方的<code>#Port 22</code>取消注释修改为其他端口即可实现修改ssh端口功能，如<code>Port 10022</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603164013.png\" alt=\"20240603164013\"></p>\n<p>编辑后使用<code>systemctl restart ssh</code>重启ssh服务，之后便可使用ssh连接服务器了</p>\n<h4 id=\"配置完全apt国内镜像\"><a href=\"#配置完全apt国内镜像\" class=\"headerlink\" title=\"配置完全apt国内镜像\"></a>配置完全apt国内镜像</h4><p>继上文配置ssh后，便可使用ssh远程访问服务器，这样复制粘贴便方便多了</p>\n<p>在这里推荐snullp大佬开发的<a href=\"https://mirrors.ustc.edu.cn/repogen/\">配置生成器</a>，注意根据你的Debian版本选择不同的内容，本教程使用的是bookworm，apt完全配置内容如下，其他配置内容可以查看本站的<a href=\"https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html\">apt等各种源列表（持续更新）</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure>\n\n<p>同样的，还是编辑<code>/etc/apt/sources.list</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603164707.png\" alt=\"20240603164707\"></p>\n<p>编辑后还是使用<code>apt update</code>更新源即可</p>\n","site":{"data":{}},"length":1532,"excerpt":"<h2 id=\"debian-live-12-5-0-amd64-standard安装教程\"><a href=\"#debian-live-12-5-0-amd64-standard安装教程\" class=\"headerlink\" title=\"debian-live-12.5.0-amd64-standard安装教程\"></a>debian-live-12.5.0-amd64-standard安装教程</h2><p>该系统下载地址：</p>\n<p><a href=\"https://iso.mirrors.ustc.edu.cn/debian-cd/current-live/amd64/iso-hybrid/debian-live-12.5.0-amd64-standard.iso\">中科大镜像站下载</a></p>\n<p><a href=\"https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa\">网盘ISO文件夹中下载</a></p>\n<blockquote>\n<p>nano打开文件便可直接编辑，保存则需要先使用Ctrl+o保存然后使用Ctrl+x退出</p>\n</blockquote>","more":"<h3 id=\"进入安装程序\"><a href=\"#进入安装程序\" class=\"headerlink\" title=\"进入安装程序\"></a>进入安装程序</h3><p>选择<code>Start installer</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603143147.png\" alt=\"20240603143147\"></p>\n<h3 id=\"选择语言\"><a href=\"#选择语言\" class=\"headerlink\" title=\"选择语言\"></a>选择语言</h3><p><strong>这一步切记，只选择English，不要选择其他，否则在命令行模式会导致无法正常显示字体，出现方块状乱码</strong></p>\n<p><img src=\"https://img.hackerbs.com//20240603143249.png\" alt=\"20240603143249\"></p>\n<h3 id=\"选择地区\"><a href=\"#选择地区\" class=\"headerlink\" title=\"选择地区\"></a>选择地区</h3><p>选择other -&gt; Asia -&gt; China</p>\n<p><img src=\"https://img.hackerbs.com//20240603143317.png\" alt=\"20240603143317\"></p>\n<p><img src=\"https://img.hackerbs.com//20240603143329.png\" alt=\"20240603143329\"></p>\n<p><img src=\"https://img.hackerbs.com//20240603143338.png\" alt=\"20240603143338\"></p>\n<h3 id=\"本地化配置\"><a href=\"#本地化配置\" class=\"headerlink\" title=\"本地化配置\"></a>本地化配置</h3><p>这一步和上一步都相当于Windows的地区&#x2F;语言，跟着教程选择默认的即可，除了English、en_UF.UTF-8之外的任何，除非你是老手，否则新手一律选择默认，避免字体显示错误</p>\n<p><img src=\"https://img.hackerbs.com//20240603143448.png\" alt=\"20240603143448\"></p>\n<h3 id=\"配置键盘\"><a href=\"#配置键盘\" class=\"headerlink\" title=\"配置键盘\"></a>配置键盘</h3><p>默认 American English</p>\n<p><img src=\"https://img.hackerbs.com//20240603143508.png\" alt=\"20240603143508\"></p>\n<h3 id=\"配置网络\"><a href=\"#配置网络\" class=\"headerlink\" title=\"配置网络\"></a>配置网络</h3><p>如果有DHCP，这一步会直接跳过，没有DHCP需要手动配置的参考下文手动配置IP</p>\n<p><img src=\"https://img.hackerbs.com//20240603143600.png\" alt=\"20240603143600\"></p>\n<h4 id=\"手动配置IP\"><a href=\"#手动配置IP\" class=\"headerlink\" title=\"手动配置IP\"></a>手动配置IP</h4><p>若没有DHCP或没有网线,这一步会提示网络连接失败</p>\n<p>图中提示的内容大概意思是<code>您的网络没有DHCP服务器或DHCP响应过慢</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603143716.png\" alt=\"20240603143716\"></p>\n<p>选择<code>Continue</code>，选择<code>Configure network manually</code>手动配置网络</p>\n<p><img src=\"https://img.hackerbs.com//20240603143838.png\" alt=\"20240603143838\"></p>\n<p>填写IP地址和子网掩码前缀，在Linux建议更多是使用前缀，而不是输一堆255</p>\n<p>255.255.255.0 &#x3D; 11111111.11111111.11111111.0 &#x3D; 24 （前缀就是有多少个1就是多少，所以是24）</p>\n<p>255.255.252.0 &#x3D; 11111111.11111111.11111100.0 &#x3D; 22</p>\n<p><img src=\"https://img.hackerbs.com//20240603145231.png\" alt=\"20240603145231\"></p>\n<p>填写网关</p>\n<p><img src=\"https://img.hackerbs.com//20240603145247.png\" alt=\"20240603145247\"></p>\n<p>填写DNS</p>\n<p>国内腾讯<code>119.29.29.29</code>，境外谷歌<code>8.8.8.8</code>，这两个DNS足够解析全世界的域名并兼顾速度了</p>\n<p><img src=\"https://img.hackerbs.com//20240603154540.png\" alt=\"20240603154540\"></p>\n<h3 id=\"填写主机名\"><a href=\"#填写主机名\" class=\"headerlink\" title=\"填写主机名\"></a>填写主机名</h3><p>也就是hostname，没啥可说的，默认或者按需修改</p>\n<p><img src=\"https://img.hackerbs.com//20240603154644.png\" alt=\"20240603154644\"></p>\n<h3 id=\"填写域名\"><a href=\"#填写域名\" class=\"headerlink\" title=\"填写域名\"></a>填写域名</h3><p>留空或者按需填写</p>\n<p><img src=\"https://img.hackerbs.com//20240603154725.png\" alt=\"20240603154725\"></p>\n<h3 id=\"设置root用户密码\"><a href=\"#设置root用户密码\" class=\"headerlink\" title=\"设置root用户密码\"></a>设置root用户密码</h3><p>设强点，别老用弱密码</p>\n<p><img src=\"https://img.hackerbs.com//20240603154847.png\" alt=\"20240603154847\"></p>\n<h3 id=\"创建新用户\"><a href=\"#创建新用户\" class=\"headerlink\" title=\"创建新用户\"></a>创建新用户</h3><p>这一步无法跳过，如果没有特别需要，直接随便建，进了系统删了即可</p>\n<p>这一步<code>Full name for the new user:</code>是显示名称，和登陆无关，可以理解为QQ名</p>\n<p><img src=\"https://img.hackerbs.com//20240603154927.png\" alt=\"20240603154927\"></p>\n<p>这一步才是用户名，要遵循规范，可以理解为QQ号，是登陆系统的账号</p>\n<p><img src=\"https://img.hackerbs.com//20240603155108.png\" alt=\"20240603155108\"></p>\n<p>设密码</p>\n<p><img src=\"https://img.hackerbs.com//20240603155132.png\" alt=\"20240603155132\"></p>\n<h3 id=\"格式化磁盘\"><a href=\"#格式化磁盘\" class=\"headerlink\" title=\"格式化磁盘\"></a>格式化磁盘</h3><p>如果你玩不来（你都看我教程了肯定是玩不来），那就记住了，选<code>Guided - use entire disk and set up LVM</code>，<strong>必须必须必须使用LVM逻辑卷</strong>，不然后期调整磁盘你就整个傻住了（恕我直言，不用lvm逻辑卷的全是瓜娃子！）</p>\n<p><img src=\"https://img.hackerbs.com//20240603160221.png\" alt=\"20240603160221\"></p>\n<p>选择硬盘</p>\n<p><img src=\"https://img.hackerbs.com//20240603160247.png\" alt=\"20240603160247\"></p>\n<h3 id=\"选择分区方式\"><a href=\"#选择分区方式\" class=\"headerlink\" title=\"选择分区方式\"></a>选择分区方式</h3><p>新手，听我的，直接第一个<code>All files in  one partition</code>，将所有文件放到一个分区就行，别觉得分开分区有什么卵用，就算是生产环境都基本用不着</p>\n<p><img src=\"https://img.hackerbs.com//20240603160451.png\" alt=\"20240603160451\"></p>\n<h3 id=\"确认是否分区\"><a href=\"#确认是否分区\" class=\"headerlink\" title=\"确认是否分区\"></a>确认是否分区</h3><p>选Yes然后Enter就完事儿了</p>\n<p><img src=\"https://img.hackerbs.com//20240603160521.png\" alt=\"20240603160521\"></p>\n<p>默认会选择全部空间，或者你也可以输个max</p>\n<p><img src=\"https://img.hackerbs.com//20240603160550.png\" alt=\"20240603160550\"></p>\n<p>选择<code>Finish partitionging and write changes to disk</code>然后<code>Continue</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603160627.png\" alt=\"20240603160627\"></p>\n<p>选择Yes然后Enter</p>\n<p><img src=\"https://img.hackerbs.com//20240603160645.png\" alt=\"20240603160645\"></p>\n<h3 id=\"等待系统安装\"><a href=\"#等待系统安装\" class=\"headerlink\" title=\"等待系统安装\"></a>等待系统安装</h3><p><img src=\"https://img.hackerbs.com//20240603160756.png\" alt=\"20240603160756\"></p>\n<h3 id=\"是否启用网络镜像\"><a href=\"#是否启用网络镜像\" class=\"headerlink\" title=\"是否启用网络镜像\"></a>是否启用网络镜像</h3><p>没网的直接NO，有网的Yes然后Enter</p>\n<p><img src=\"https://img.hackerbs.com//20240603160857.png\" alt=\"20240603160857\"></p>\n<p>选择China</p>\n<p><img src=\"https://img.hackerbs.com//20240603160918.png\" alt=\"20240603160918\"></p>\n<p>建议<code>mirrors.ustc.edu.cn</code>，中科大万岁</p>\n<p><img src=\"https://img.hackerbs.com//20240603160943.png\" alt=\"20240603160943\"></p>\n<p>不需要代理，直接Enter下一步</p>\n<p><img src=\"https://img.hackerbs.com//20240603161008.png\" alt=\"20240603161008\"></p>\n<p>开始配置apt，也就是网络镜像</p>\n<p><img src=\"https://img.hackerbs.com//20240603161318.png\" alt=\"20240603161318\"></p>\n<h4 id=\"提示镜像故障\"><a href=\"#提示镜像故障\" class=\"headerlink\" title=\"提示镜像故障\"></a>提示镜像故障</h4><p>这一步就是网络问题了，可以考虑直接先不用网络镜像</p>\n<p><img src=\"https://img.hackerbs.com//20240603161048.png\" alt=\"20240603161048\"></p>\n<h3 id=\"安装完毕\"><a href=\"#安装完毕\" class=\"headerlink\" title=\"安装完毕\"></a>安装完毕</h3><p>安装完毕，Continue重启</p>\n<p><img src=\"https://img.hackerbs.com//20240603161655.png\" alt=\"20240603161655\"></p>\n<h3 id=\"删除安装过程中不得不创建的用户\"><a href=\"#删除安装过程中不得不创建的用户\" class=\"headerlink\" title=\"删除安装过程中不得不创建的用户\"></a>删除安装过程中不得不创建的用户</h3><p>登陆</p>\n<p><img src=\"https://img.hackerbs.com//20240603161753.png\" alt=\"20240603161753\"></p>\n<p>使用<code>userdel -r 用户名</code>删除创建的用户</p>\n<p><img src=\"https://img.hackerbs.com//20240603161857.png\" alt=\"20240603161857\"></p>\n<h3 id=\"额外内容\"><a href=\"#额外内容\" class=\"headerlink\" title=\"额外内容\"></a>额外内容</h3><h4 id=\"手动配置网络\"><a href=\"#手动配置网络\" class=\"headerlink\" title=\"手动配置网络\"></a>手动配置网络</h4><p>使用<code>ip addr</code>查看网卡名称</p>\n<p>本次演示的只有一张网卡，是enp6s18，其中<code>state UP</code>表示该网卡已经插好网线</p>\n<p><img src=\"https://img.hackerbs.com//20240603162420.png\" alt=\"20240603162420\"></p>\n<p>使用<code>nano /etc/network/interfaces</code>编辑网络配置文件</p>\n<p>使用<code>nano /etc/resolv.conf</code>编辑DNS配置文件</p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>作用</th>\n<th>注意事项</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>auto enp6s18</td>\n<td>网卡开机自启</td>\n<td></td>\n</tr>\n<tr>\n<td>iface enp6s18 inet static</td>\n<td>指定配置哪张网卡</td>\n<td>static表示静态IP,dhcp则是动态</td>\n</tr>\n<tr>\n<td>address</td>\n<td>IP地址&#x2F;前缀</td>\n<td></td>\n</tr>\n<tr>\n<td>gateway</td>\n<td>网关地址</td>\n<td></td>\n</tr>\n<tr>\n<td>dns-search</td>\n<td>对应安装过程中的domain域名</td>\n<td></td>\n</tr>\n<tr>\n<td>nameserver</td>\n<td>DNS服务器</td>\n<td>一行一个，nameserver 119.29.29.29</td>\n</tr>\n</tbody></table>\n<p>网卡配置文件示例</p>\n<p><img src=\"https://img.hackerbs.com//20240603162336.png\" alt=\"20240603162336\"></p>\n<p>DNS配置文件示例</p>\n<p><img src=\"https://img.hackerbs.com//20240603163137.png\" alt=\"20240603163137\"></p>\n<p>编辑完成后使用<code>systemctl restart networking.service</code>重启网络</p>\n<p><img src=\"https://img.hackerbs.com//20240603163210.png\" alt=\"20240603163210\"></p>\n<h4 id=\"手动配置apt源\"><a href=\"#手动配置apt源\" class=\"headerlink\" title=\"手动配置apt源\"></a>手动配置apt源</h4><p><strong>如果安装的时候没有使用网络镜像，且需要配置apt源的话，进行该步骤，否则忽略</strong></p>\n<p>直接使用<code>rm -f /etc/apt/sources.list</code>删除源配置文件</p>\n<p>编辑<code>nano /etc/apt/sources.list</code>源配置文件，先手动添加第一行</p>\n<p><code>deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603163523.png\" alt=\"20240603163523\"></p>\n<p>编辑后使用<code>apt update</code>更新源</p>\n<p><img src=\"https://img.hackerbs.com//20240603163751.png\" alt=\"20240603163751\"></p>\n<h4 id=\"安装OpenSSH-server并配置root密码登陆\"><a href=\"#安装OpenSSH-server并配置root密码登陆\" class=\"headerlink\" title=\"安装OpenSSH-server并配置root密码登陆\"></a>安装OpenSSH-server并配置root密码登陆</h4><p>使用<code>apt install openssh-server -f</code>安装OpenSSH server</p>\n<p><img src=\"https://img.hackerbs.com//20240603163908.png\" alt=\"20240603163908\"></p>\n<p><code>nano /etc/ssh/sshd_config</code>编辑ssh配置文件，在原本的<code>#PermitRootLogin prohibit-password</code>下方添加<code>PermitRootLogin yes</code></p>\n<p>上方的<code>#Port 22</code>取消注释修改为其他端口即可实现修改ssh端口功能，如<code>Port 10022</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603164013.png\" alt=\"20240603164013\"></p>\n<p>编辑后使用<code>systemctl restart ssh</code>重启ssh服务，之后便可使用ssh连接服务器了</p>\n<h4 id=\"配置完全apt国内镜像\"><a href=\"#配置完全apt国内镜像\" class=\"headerlink\" title=\"配置完全apt国内镜像\"></a>配置完全apt国内镜像</h4><p>继上文配置ssh后，便可使用ssh远程访问服务器，这样复制粘贴便方便多了</p>\n<p>在这里推荐snullp大佬开发的<a href=\"https://mirrors.ustc.edu.cn/repogen/\">配置生成器</a>，注意根据你的Debian版本选择不同的内容，本教程使用的是bookworm，apt完全配置内容如下，其他配置内容可以查看本站的<a href=\"https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html\">apt等各种源列表（持续更新）</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure>\n\n<p>同样的，还是编辑<code>/etc/apt/sources.list</code></p>\n<p><img src=\"https://img.hackerbs.com//20240603164707.png\" alt=\"20240603164707\"></p>\n<p>编辑后还是使用<code>apt update</code>更新源即可</p>"},{"title":"Debian x86_64平台搭建arm docker环境","comments":1,"date":"2023-09-12T13:51:36.000Z","keywords":"Docker","_content":"\n在Debian x86_64平台搭建Docker arm环境的方法\n\n<!-- more -->\n\n```shell\n# 安装QEMU用户模式工具：QEMU将用于在x86_64主机上模拟ARMv8架构\napt install qemu-system binfmt-support qemu-user-static\n\n# 启用QEMU用户模式支持\nupdate-binfmts --enable qemu-arm\nupdate-binfmts --enable qemu-aarch64\n```\n\n使用以上命令便可搭建Docker的arm环境，再使用如下命令即可测试环境是否可以正常使用\n\n```shell\n# 拉取debian armv8镜像\ndocker pull arm64v8/debian\n\n# 运行该镜像，使用了--rm参数，会在退出时自动删除容器\n# 执行成功便会自动进入容器shell，使用exit即可退出\ndocker run -it --rm arm64v8/debian /bin/bash\n```","source":"_posts/Debian-x86-64平台搭建arm-docker环境.md","raw":"---\ntitle: Debian x86_64平台搭建arm docker环境\ncategories: [知识库]\ncomments: true\ndate: 2023-09-12 21:51:36\nkeywords: Docker\ntags:\n    - Docker\n    - ARM\n---\n\n在Debian x86_64平台搭建Docker arm环境的方法\n\n<!-- more -->\n\n```shell\n# 安装QEMU用户模式工具：QEMU将用于在x86_64主机上模拟ARMv8架构\napt install qemu-system binfmt-support qemu-user-static\n\n# 启用QEMU用户模式支持\nupdate-binfmts --enable qemu-arm\nupdate-binfmts --enable qemu-aarch64\n```\n\n使用以上命令便可搭建Docker的arm环境，再使用如下命令即可测试环境是否可以正常使用\n\n```shell\n# 拉取debian armv8镜像\ndocker pull arm64v8/debian\n\n# 运行该镜像，使用了--rm参数，会在退出时自动删除容器\n# 执行成功便会自动进入容器shell，使用exit即可退出\ndocker run -it --rm arm64v8/debian /bin/bash\n```","slug":"Debian-x86-64平台搭建arm-docker环境","published":1,"updated":"2025-09-04T06:44:07.219Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwto000b9szwbllgg54u","content":"<p>在Debian x86_64平台搭建Docker arm环境的方法</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装QEMU用户模式工具：QEMU将用于在x86_64主机上模拟ARMv8架构</span></span><br><span class=\"line\">apt install qemu-system binfmt-support qemu-user-static</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启用QEMU用户模式支持</span></span><br><span class=\"line\">update-binfmts --enable qemu-arm</span><br><span class=\"line\">update-binfmts --enable qemu-aarch64</span><br></pre></td></tr></table></figure>\n\n<p>使用以上命令便可搭建Docker的arm环境，再使用如下命令即可测试环境是否可以正常使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">拉取debian armv8镜像</span></span><br><span class=\"line\">docker pull arm64v8/debian</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">运行该镜像，使用了--<span class=\"built_in\">rm</span>参数，会在退出时自动删除容器</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">执行成功便会自动进入容器shell，使用<span class=\"built_in\">exit</span>即可退出</span></span><br><span class=\"line\">docker run -it --rm arm64v8/debian /bin/bash</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":164,"excerpt":"<p>在Debian x86_64平台搭建Docker arm环境的方法</p>","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装QEMU用户模式工具：QEMU将用于在x86_64主机上模拟ARMv8架构</span></span><br><span class=\"line\">apt install qemu-system binfmt-support qemu-user-static</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启用QEMU用户模式支持</span></span><br><span class=\"line\">update-binfmts --enable qemu-arm</span><br><span class=\"line\">update-binfmts --enable qemu-aarch64</span><br></pre></td></tr></table></figure>\n\n<p>使用以上命令便可搭建Docker的arm环境，再使用如下命令即可测试环境是否可以正常使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">拉取debian armv8镜像</span></span><br><span class=\"line\">docker pull arm64v8/debian</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">运行该镜像，使用了--<span class=\"built_in\">rm</span>参数，会在退出时自动删除容器</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">执行成功便会自动进入容器shell，使用<span class=\"built_in\">exit</span>即可退出</span></span><br><span class=\"line\">docker run -it --rm arm64v8/debian /bin/bash</span><br></pre></td></tr></table></figure>"},{"title":"Linux技巧【持续更新】","comments":1,"date":"2022-11-17T08:15:48.000Z","keywords":["Linux"],"sticky":null,"_content":"\n>若您有任何技术问题，可以通过本站展示的联系方式咨询我\n\n<!--more-->\n\n## Linux查看硬盘SN\n\n```shell\n# 将#替换为你对应的硬盘号 如sda\nlsblk --nodeps -no serial /dev/sd*\n```\n\n## Linux解除文件、目录占用\n\n```shell\n# 使用该命令查看占用文件、文件夹的程序id\nfuser -cu /你要查询的文件或目录\n# 示例\nfuser -cu docker-application/\n# 我的输出结果\n/mnt/TEST/docker-application: 16676m(root) 16702m(root)\n# 其中16676m(root)和16702m(root)便是表明该目录由id为16676和16702的进程占用\n# 使用kill id杀死进程后便可删除或使用mount -f强制卸载\n```\n\n## Linux使用iostat查看磁盘io信息\n\n```shell\n# 使用iostat可以查看简要的磁盘io信息\niostat\n\n# 在此列出部分iostat参数:\n# -c 查看CPU信息\n# -d 仅显示磁盘信息,默认是显示CPU和磁盘信息\n# -x 显示详细信息\n# -k或-m分别是以KB/MB为显示单位\n# -p显示磁盘及其分区的信息\n\n# 演示实例\niostat -x -m 1\n# 输出结果为每1秒刷新一次以MB为单位的详细信息,一直刷新\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           1.12    1.12   20.66    5.81    0.00   71.29\n\nDevice            r/s     rMB/s   rrqm/s  %rrqm r_await rareq-sz     w/s     wMB/s   wrqm/s  %wrqm w_await wareq-sz     d/s     dMB/s   drqm/s  %drqm d_await dareq-sz     f/s f_await  aqu-sz  %util\ndm-0             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-1             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-2             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-3             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-4             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd123            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd124            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd125            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd126            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd127            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nnvme0n1          7.00      0.02     0.00   0.00    6.14     3.43  120.00      1.32     0.00   0.00    1.31    11.30    0.00      0.00     0.00   0.00    0.00     0.00    2.00    2.50    0.21   9.20\nsda              2.00      0.00     0.00   0.00   38.00     0.00  920.00     32.91     2.00   0.22    0.52    36.63    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.63  63.60\nsdb              3.00      0.00     0.00   0.00   35.33     1.33  964.00     34.25     3.00   0.31    0.37    36.38    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.00    0.54  61.20\nsdc              2.00      0.00     0.00   0.00   42.00     0.00  883.00     34.25     3.00   0.34    0.82    39.72    0.00      0.00     0.00   0.00    0.00     0.00    2.00   42.00    0.89  71.20\nsdd              2.00      0.00     0.00   0.00   39.50     0.00  956.00     34.21     2.00   0.21    0.36    36.65    0.00      0.00     0.00   0.00    0.00     0.00    2.00   39.00    0.50  59.20\nsde              3.00      0.00     0.00   0.00   36.00     1.33  780.00     34.26     1.00   0.13    0.43    44.98    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.50    0.53  61.20\nsdf              2.00      0.00     0.00   0.00   29.50     0.00  772.00     34.21     2.00   0.26    0.44    45.37    0.00      0.00     0.00   0.00    0.00     0.00    2.00   30.00    0.46  58.80\nsdg              3.00      0.00     0.00   0.00   22.00     1.33  773.00     34.21     2.00   0.26    0.43    45.31    0.00      0.00     0.00   0.00    0.00     0.00    2.00   33.00    0.46  58.00\nsdh              2.00      0.00     0.00   0.00   49.50     0.00  738.00     33.76     3.00   0.40    0.66    46.85    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.50    0.68  64.80\nsdi              3.00      0.00     0.00   0.00   31.33     1.33  680.00     34.21     2.00   0.29    0.86    51.52    0.00      0.00     0.00   0.00    0.00     0.00    2.00   47.00    0.77  66.80\nsdj              2.00      0.00     0.00   0.00   44.50     0.00  801.00     34.25     1.00   0.12    0.43    43.79    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.00    0.52  61.20\nsdk              2.00      0.00     0.00   0.00   49.00     0.00  675.00     33.88     3.00   0.44    1.00    51.39    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.00    0.87  71.20\nsdl              2.00      0.00     0.00   0.00   38.50     0.00  697.00     34.62     1.00   0.14    1.20    50.87    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.99  76.40\nsdm              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nsr0              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\n\n# 其中1代表刷新频率,1秒,3代表次数,刷新3次,如果不填写3,则为一直刷新\niostat -x -m 1 3\n```\n\n### 参数详解\n\n|参数|释义|\n|---|---|\n|-c|显示CPU利用率报告|\n|--compact|不要将“设备利用率报告”拆分为子报告，以便所有指标都显示在一行中|\n|-d|显示设备利用率报告|\n|--dec={ 0 \\| 1 \\| 2 }|指定要使用的小数位数（0到2，默认值为2）|\n|-f|官方对该参数的解释略微复杂,烦请查阅[官方文档](https://manpages.debian.org/testing/sysstat/iostat.1.en.html#f)|\n|-g|将所有设备汇总显示,-g参数后面填group_name|\n|-H|此选项必须与选项-g一起使用，并指示只显示组的全局统计信息，而不显示组中单个设备的统计信息|\n|-h|该选项将输出结果分类显示,便于阅读|\n|--human|以人类可读格式打印大小（例如1.0k、1.2M等）。使用此选项显示的单位将取代与度量相关的任何其他默认单位（例如千字节、扇区…）|\n|-j|在参数后跟(ID/LABEL/PATH/UUID)等,以替换原/dev/sd*的显示,[官方文档](https://manpages.debian.org/testing/sysstat/iostat.1.en.html#j)|\n|-k|以KB为单位进行显示|\n|-m|以MB为单位进行显示|\n|-N|显示任何设备映射器设备的注册设备映射器名称。用于查看LVM2统计信息|\n|-o JSON|以json格式输出结果|\n|-p|显示磁盘及其分区信息,可以在后跟指定磁盘以显示单个磁盘的分区信息|\n|--pretty|将报告以更易于阅读的方式显示,同--human|\n|-s|显示报告的短（窄）版本，该版本应适合80个字符宽的屏幕|\n|-t|打印显示的每个报告的时间。时间戳格式可能取决于S_TIME_format环境变量的值|\n|-V|打印iostat版本号|\n|-x|显示扩展统计信息|\n|-y|如果在给定的时间间隔内显示多个记录，则省略系统启动后的第一个统计报告|\n|-z|告诉iostat忽略在采样期间没有活动的任何设备的输出|\n\n### 输出结果参数解读\n\n|参数|释义|\n|---|---|\n|%user|显示在用户级别（应用程序）执行时发生的 CPU 使用率百分比|\n|%nice|显示在具有良好优先级的用户级别执行时发生的 CPU 使用率百分比|\n|%system|显示在系统级别（内核）执行时发生的 CPU 使用率百分比|\n|%iowait|显示系统有未完成的磁盘 I/O 请求期间 CPU 或 CPU 空闲的时间百分比|\n|%steal|显示虚拟机管理程序为另一个虚拟处理器提供服务时虚拟 CPU 或 CPU 非自愿等待所花费的时间百分比|\n|%idle|显示 CPU 或 CPU 空闲且系统没有未完成的磁盘 I/O 请求的时间百分比|\n|r/s|设备每秒完成的读取请求数（合并后）|\n|rMB/s|每秒读字节数,单位随参数-k/-m分别对应KB和MB|\n|rrqm/s|每秒合并到设备队列的读取请求数|\n|%rrqm|在发送到设备之前合并在一起的读取请求的百分比|\n|r_await|平均每次设备读I/O操作的等待时间 (毫秒)|\n|rareq-sz|向设备发出的读取请求的平均大小（以KB为单位）|\n|w/s|设备每秒完成的写入请求数（合并后）|\n|wMB/s|每秒写字节数,单位随参数-k/-m分别对应KB和MB|\n|wrqm/s|每秒合并到设备队列的写入请求数|\n|%wrqm|在发送到设备之前合并在一起的写入请求的百分比|\n|w_await|平均每次设备写I/O操作的等待时间 (毫秒)|\n|wareq-sz|向设备发出的写入请求的平均大小（以KB为单位）|\n|d/s|设备每秒完成的丢弃请求数（合并后）|\n|dMB/s|每秒为设备丢弃的扇区数,单位随参数-k/-m分别对应KB和MB|\n|drqm/s|每秒排队到设备的合并丢弃请求数|\n|%drqm|在发送到设备之前合并在一起的丢弃请求的百分比|\n|d_await|向要服务的设备发出的丢弃请求的平均时间（以毫秒为单位）。这包括队列中的请求所花费的时间以及为它们提供服务所花费的|\n|dareq-sz|向设备发出的丢弃请求的平均大小（以KB为单位）|\n|f/s|设备每秒完成的刷新请求数（合并后）。这对磁盘执行的刷新请求进行计数。不跟踪分区的刷新请求。在合并之前，刷新操作算作写入操作|\n|f_await|向要服务的设备发出刷新请求的平均时间（以毫秒为单位）。块层合并刷新请求并且一次最多执行一个。因此刷新操作可能是两倍长：等待当前刷新请求，然后执行它，然后等待下一个|\n|aqu-sz|向设备发出的请求的平均队列长度,在以前的版本中,此字段称为 avgqu-sz|\n|%util|向设备发出 I/O 请求所用时间的百分比（设备的带宽利用率）。对于串行服务请求的设备，当此值接近 100% 时，就会发生设备饱和。但对于并行处理请求的设备，例如 RAID 阵列和现代 SSD，这个数字并不反映它们的性能限制|\n\n> %iowait的值过高,表示硬盘存在I/O瓶颈\n> %idle值高,表示CPU较空闲\n> %idle值高但系统响应慢时,有可能是CPU等待分配内存,此时应加大内存容量\n> %idle值如果持续低于10,那么系统的CPU处理能力相对较低,表明系统中最需要解决的资源是CPU\n> %util 接近 100%，说明产生的I/O请求太多，I/O系统已经满负荷，该磁盘可能存在瓶颈\n>\n> 该文章内容参考[iostat官方文档https://manpages.debian.org/testing/sysstat/iostat.1.en.html](https://manpages.debian.org/testing/sysstat/iostat.1.en.html)\n\n## fio测试工具详细教程\n\n> 待完善,先临时记录一条\n\n```shell\nfio -name=stress_disk -filename=/mnt/DATA/test/a -size=30T -runtime=240h -bs=1m -direct=1 -rw=randrw -ioengine=libaio -numjobs=12 -group_reporting -iodepth=8 -rwmixwrite=50 -time_based -ramp_time=60s\n\n# 其中name是本次测试任务的名称\n# filename则为指定测试目录和文件名\n# size则为指定测试文件大小,此处为30T,无论运行多久,该测试文件a都不会超过30T\n# runtime为指定运行时间,240h则为240小时,单位可以为秒s分m时h\n# bs为块大小,顺序读写通常为1m,4k则填写4k即可\n# direct有0和1选项,0为使用文件系统缓存,1则为直接操作磁盘\n# rw可选的参数有read/write/rw/randread/randwrite/randrw,分别为读/写/读写/随机读/随机写/随机读写\n# ioengine IO测试引擎,在linux下选择libaio即可\n# numjobs线程数,一般设置为硬盘数量,根据实际需要自行调整\n# group_reporting合并报告,将性能测试结果合并汇报,显示所有硬盘性能测试的总结果\n# iodepth IO队列深度,指定IO队列深度,提高每次请求的IO数量\n# rwmixwrite/rwmixread 这两个参数都可以指定,按百分比指定,如rwmixwrite=30则表示写占比30%,只需使用其中一个即可,无需同时指定两个参数\n# time_based 设置即便fio写完了指定的size依旧不结束，直至runtime的时间\n# ramp_time=60s 设置fio执行任务时的预热时间，可以使性能测试结果更加精确可靠\n```\n\n## Linux NFS挂载及使用systemctl自动挂载\n\n```shell\n# NFS挂载基础命令及其作用\nmount -t nfs -o vers=3,rw,hard,sync 10.0.0.100:/mnt/TEST/nfs /mnt/100nfs\n# mount linux挂载命令\n# -t nfs 指定挂载协议为nfs -o也就是options，选项的意思\n# vers=3 指定NFS版本，NFSv3\n# rw 读写\n# hard硬链接\n# 补充：soft为软连接，二者的特点是硬链接保障数据安全但需要持续等待服务器响应，软连接的特点是快速响应但如果服务器断开则可能导致数据损坏或丢失\n# 简单来说，硬链接适合网络环境较差或数据安全要求严格的场景，软连接适合网络稳定需要快速响应的场景\n# 【技术是严谨的，如果我的解释有误烦请立刻指正，十分感谢！】\n# sync，同步写入，写入到磁盘，IO响应较慢但数据安全，async，异步写入，IO响应快，数据安全性低，类似RAID write back\n# 参数指定完成后便是服务器路径和本地路径，格式为 服务器地址:路径 本地路径，如 example:/example /example\n\n# 使用systemctl管理nfs挂载\n# 创建nfs.service文件【我的环境为Debian 11.6，该文件放在/usr/lib/systemd/system/下】\n# 2024/1/13更新，因实际使用过程中遇到过网络并未第一时间连通导致的挂载失败，所以在mount操作前增加ping操作\n# 原命令为：ExecStart=/usr/bin/mount -t nfs -o vers=3,rw,hard,sync 10.0.0.100:/mnt/data /data\n# 下列代码中10.0.0.100为我的nfs服务器地址，需要替换为你自己的，包括服务器的路径:/mnt/data/storage和挂载路径/mnt/nfs都需要替换为你自己的\n# 如有问题可以通过文末的联系方式咨询我\n[Unit]\nDescription=auto mount nfs\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/bin/bash -c 'until ping -c1 10.0.0.100 &>/dev/null; do sleep 5; done && /usr/bin/mount -t nfs -o vers=4,rw,hard,sync 10.0.0.100:/mnt/data/storage /mnt/nfs'\nRestart=no\n\n[Install]\nWantedBy=multi-user.target\n\n# 挂载nfs\nsystemctl start nfs.service\n# 开机自动挂载\nsystemctl enable nfs.service\n```\n\n## mdadm管理软RAID阵列\n\nmdadm全称Multiple Disk and Device Administration（多磁盘和设备管理），是一个Linux软件RAID管理工具，可以使用它来创建各种级别的RAID阵列，包括RAID 0、RAID 1、RAID 5、RAID 6等。\n\n### 使用mdadm创建RAID的一般步骤：\n\n1. 安装mdadm软件\n\n在大多数Linux发行版中，mdadm已经预装了，如果没有预装，则可以使用`sudo apt install mdadm`命令进行安装\n\n1. 准备好磁盘分区，推荐使用`parted`进行磁盘分区\n\n2. 创建RAID设备\n\n使用mdadm命令创建RAID设备。例如，以下命令将使用指定的磁盘分区创建一个RAID5设备\n\n```shell\nsudo mdadm --create /dev/md0 --level=5 --raid-devices=3 /dev/sda1 /dev/sdb1 /dev/sdc1\n```\n\n其中，/dev/md0是要创建的RAID设备的名称，自定义为md开头的设备即可，如`md233`等，--level=5指定RAID级别为5（RAID 5），--raid-devices=3指定有3个磁盘参与RAID，/dev/sda1、/dev/sdb1和/dev/sdc1是要组成RAID设备的分区。\n\n4. 格式化RAID设备\n\n创建RAID设备后，需要对其进行格式化，以便可以在其中存储数据。可以使用mkfs命令格式化RAID设备。例如，以下命令将对RAID设备进行ext4格式化：\n\n```shell\nsudo mkfs.ext4 /dev/md0\n```\n\n1. 挂载RAID设备\n\n格式化RAID设备后，需要将其挂载到文件系统中，以便可以访问其中的数据。可以使用mount命令将RAID设备挂载到指定的挂载点。例如，以下命令将RAID设备挂载到/mnt/raid5目录：\n\n```shell\nsudo mount /dev/md0 /mnt/raid5\n```\n\n### 使用mdadm删除RAID的一般步骤：\n\n1. 卸载RAID设备\n\n在删除RAID设备之前，需要先将其从文件系统中卸载。可以使用以下命令卸载挂载在/mnt/raid0目录的RAID设备：\n\n```shell\nsudo umount /mnt/raid5\n```\n\n2. 停用RAID设备\n\n在删除RAID设备之前，需要停用该设备。可以使用以下命令停用RAID设备：\n\n```shell\nsudo mdadm --stop /dev/md0\n```\n\n其中，/dev/md0是要停用的RAID设备的名称。\n\n3. 删除RAID设备\n\n在停用RAID设备之后，可以使用以下命令删除RAID设备：\n\n```shell\nsudo mdadm --remove /dev/md0\n```\n\n其中，/dev/md0是要删除的RAID设备的名称。\n\n4. 清除RAID设备元数据\n\n在删除RAID设备之后，需要清除RAID设备的元数据，以确保在以后不会误认为该设备是RAID设备。可以使用以下命令清除RAID设备的元数据：\n\n```shell\nsudo mdadm --zero-superblock /dev/sda1 /dev/sdb1 /dev/sdc1\n```\n\n其中，/dev/sda1、/dev/sdb1和/dev/sdc1是原始磁盘分区，是用来创建RAID设备的。使用该命令清除元数据可以确保将来使用这些分区时不会出现问题。\n\n以上就是删除mdadm创建的RAID设备的步骤。请注意，在删除RAID设备之前，务必备份其中的数据，以免误删除数据。\n\n## fstab自动挂载失败导致无法开机的解决办法\n\n首先，fstab的挂载强烈建议使用UUID，可以通过`blkid`命令查询UUID，UUID是不会变的，但是你的sda可能变成sdb，尤其是在iscsi挂载时\n\n通常`fstab`的挂载命令中有一条`default`，改为`nofail`即可。\n```shell\n# 原挂载方式\n/dev/sdc1 /mnt/data xfs default 0 0\n# 修改为nofail，该命令的作用为在挂载时如果失败则不会阻止系统启动。使用UUID挂载\nUUID=\"4048c1b1-1bde-49ee-8d40-8d437ce32783\" /mnt/data xfs nofail 0 0\n```\n\n**注意！修改fstab后强烈建议使用`mount -a`来测试挂载是否正常**\n\n**使用`blkid`查询UUID时，如果你的设备过多，可以指定某个设备或其分区查询，这样还可避免粗心错误挂载了设备本身，例如`blkid /dev/sdc1`这样查询的便是sdc设备的sdc1分区**\n\n## Linux使用stress-ng让CPU始终维持在百分比占用的办法\n\n首先，你需要安装stress-ng，同时，也推荐你使用dstat观察CPU占用率\n这两个软件通过`apt install stress-ng dstat`即可安装\n\n```shell\nstress-ng --cpu <线程数> --cpu-method matrixprod --cpu-load <百分比数字> --matrix-size 400 --timeout 0 --metrics-brief\n# 参数解析\n# --cpu <线程数>是使用多少个线程\n# --cpu-load <百分比数字>是占用率维持在多少\n# 上面这个两个参数需要配合使用，假设你的CPU是4核8线程，想要达到整个CPU50%占用率\n# 则需要设置为--cpu 8 --cpu-load 50或者是--cpu 4 --cpu-load 100，总占用率=线程数*百分比\n# --cpu-method matrixprod 这个选项指定了要使用的 CPU 负载类型，这里设置为 matrixprod，表示使用矩阵乘法来进行负载测试\n# --matrix-size 400 这个选项指定了矩阵乘法中的矩阵大小，这里设置为 400x400，表示要进行 400x400 的矩阵乘法计算\n# --timeout 0表示一直运行，也可设置为秒s分m时h的自定义时间如120s，也可写为2m\n# --metrics-brief 这个选项指定了在结束测试后输出的统计信息，这里设置为 brief，表示只输出简要的统计信息 -- 如果只是单纯为了占用CPU，可以不用这个\n\n# 示例，56核112线程的CPU使其占用维持在64%\n# 可以采用两个方案，控制满载的线程，或者直接设定总负载率\n# 因为我需要其余线程用于测试，所以下面采用的是控制满载线程的方式，使剩余线程空闲\nstress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --matrix-size 400 --timeout 0 --metrics-brief\n\n# 补充，因为stress-ng需要使用内存，考虑到你可能需要限制占用的内存量，可以使用以下方式实现\n# 指定--vm-bytes参数，该参数的作用是每个线程能使用的内存大小\n# --vm-bytes参数允许的范围是4KB-256TB，默认似乎是20MB\n# 我修改后的测试代码如下：\nstress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --vm-bytes 4K --matrix-size 400 --timeout 0 --metrics-brief\n```\n\n## Linux使用vsftp部署 FTP服务器的办法\n\n---\n本站新发布了使用docker部署 vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\n---\n\n第一步，根据你的发行版使用`apt`或`yum`及其他命令，安装`vsftp`软件包\n\n![20230906162643](https://img.hackerbs.com//20230906162643.png)\n\n第二步，编辑`vsftpd.conf`文件\n\n![20230906162829](https://img.hackerbs.com//20230906162829.png)\n\n确认以下内容：\n\n|参数|用途|\n|---|---|\n|anonymous_enable=NO|禁止匿名访问|\n|local_enable=YES|允许本地用户登录|\n|write_enable=YES|允许用户上传文件|\n|chroot_local_user=YES|限制用户的根目录为其主目录|\n\n第三步，添加以下行以指定允许登录的用户列表，这里我们创建一个名为`test`的用户\n\n```shell\nuserlist_enable=YES\nuserlist_file=/etc/vsftpd.userlist\nuserlist_deny=NO\nlocal_root=指定目录\n```\n\n编辑完成后保存退出\n\n![20230906171602](https://img.hackerbs.com//20230906171602.png)\n\n第四步，创建指定用户，此处以`abc`用户作为演示\n\n使用`useradd abc`创建`abc`用户\n\n**各发行版创建过程并不一致，请以你的发行版为准！**\n\n![20230906171833](https://img.hackerbs.com//20230906171833.png)\n\n使用`mkdir`命令，创建一个用于ftp的目录\n\n修改该目录所有者及所有组权限为`abc`，并赋予755权限\n\n```shell\n# 因vsftp安全策略原因，用户主目录，也就是/opt/ftp，将无法具备写权限，所以需要创建子目录用于ftp文件传输\nmkdir -p /opt/ftp/data\n#设置abc用户主目录为/opt/ftp/abc\nusermod -d /opt/ftp abc\n#移除abc用户主目录/opt/ftp的写权限，否则无法登录\nchmod a-w /opt/ftp\n#修改目录所有者及所有组\nchown -R abc:abc /opt/ftp/data\n#修改目录权限为755\nchmod -R 755 /opt/ftp/data\n\n#此处/opt/ftp则为上文中local_root=指定目录：local_root=/opt/ftp\n```\n\n根据上文的`userlist_file=/etc/vsftpd.userlist`，在`/etc`目录下创建`vsftpd.userlist`文件并编辑内容\n\n![20230906164114](https://img.hackerbs.com//20230906164114.png)\n\n输入用户名`abc`退出保存即可，如需添加多个用户，每行一个即可\n\n![20230906171208](https://img.hackerbs.com//20230906171208.png)\n\n第五步，重启`vsftp`服务\n\n`systemctl restart vsftpd`\n\n![20230906164916](https://img.hackerbs.com//20230906164916.png)\n\n如果需要让该ftp用户`abc`无法登录到系统，仅访问ftp，则按照以下步骤设置\n\n首先，找到系统中的`/etc/base`或`/etc/shells`，通常系统中会同时存在这两个文件，需要分别查看这两个文件，选择有内容的那一个，如图，`/etc/bash`为空，则该文件无效\n\n![20230906183203](https://img.hackerbs.com//20230906183203.png)\n\n编辑有文件的`/etc/shells`，在文件末尾添加`/bin/false`后保存退出\n\n![20230906183254](https://img.hackerbs.com//20230906183254.png)\n\n随后使用`usermod -s /bin/false abc`即可使`abc`用户无法登录到系统，但可正常登录ftp，若ftp依旧无法登录，使用上文中的方式重启`vsftp`服务即可。","source":"_posts/Linux技巧【随时更新】.md","raw":"---\ntitle: Linux技巧【持续更新】\ncategories: [知识库]\ntags:\n  - Linux\ncomments: true\ndate: 2022-11-17 16:15:48\nkeywords:\n  - Linux\nsticky:\n---\n\n>若您有任何技术问题，可以通过本站展示的联系方式咨询我\n\n<!--more-->\n\n## Linux查看硬盘SN\n\n```shell\n# 将#替换为你对应的硬盘号 如sda\nlsblk --nodeps -no serial /dev/sd*\n```\n\n## Linux解除文件、目录占用\n\n```shell\n# 使用该命令查看占用文件、文件夹的程序id\nfuser -cu /你要查询的文件或目录\n# 示例\nfuser -cu docker-application/\n# 我的输出结果\n/mnt/TEST/docker-application: 16676m(root) 16702m(root)\n# 其中16676m(root)和16702m(root)便是表明该目录由id为16676和16702的进程占用\n# 使用kill id杀死进程后便可删除或使用mount -f强制卸载\n```\n\n## Linux使用iostat查看磁盘io信息\n\n```shell\n# 使用iostat可以查看简要的磁盘io信息\niostat\n\n# 在此列出部分iostat参数:\n# -c 查看CPU信息\n# -d 仅显示磁盘信息,默认是显示CPU和磁盘信息\n# -x 显示详细信息\n# -k或-m分别是以KB/MB为显示单位\n# -p显示磁盘及其分区的信息\n\n# 演示实例\niostat -x -m 1\n# 输出结果为每1秒刷新一次以MB为单位的详细信息,一直刷新\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           1.12    1.12   20.66    5.81    0.00   71.29\n\nDevice            r/s     rMB/s   rrqm/s  %rrqm r_await rareq-sz     w/s     wMB/s   wrqm/s  %wrqm w_await wareq-sz     d/s     dMB/s   drqm/s  %drqm d_await dareq-sz     f/s f_await  aqu-sz  %util\ndm-0             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-1             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-2             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-3             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\ndm-4             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd123            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd124            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd125            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd126            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nmd127            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nnvme0n1          7.00      0.02     0.00   0.00    6.14     3.43  120.00      1.32     0.00   0.00    1.31    11.30    0.00      0.00     0.00   0.00    0.00     0.00    2.00    2.50    0.21   9.20\nsda              2.00      0.00     0.00   0.00   38.00     0.00  920.00     32.91     2.00   0.22    0.52    36.63    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.63  63.60\nsdb              3.00      0.00     0.00   0.00   35.33     1.33  964.00     34.25     3.00   0.31    0.37    36.38    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.00    0.54  61.20\nsdc              2.00      0.00     0.00   0.00   42.00     0.00  883.00     34.25     3.00   0.34    0.82    39.72    0.00      0.00     0.00   0.00    0.00     0.00    2.00   42.00    0.89  71.20\nsdd              2.00      0.00     0.00   0.00   39.50     0.00  956.00     34.21     2.00   0.21    0.36    36.65    0.00      0.00     0.00   0.00    0.00     0.00    2.00   39.00    0.50  59.20\nsde              3.00      0.00     0.00   0.00   36.00     1.33  780.00     34.26     1.00   0.13    0.43    44.98    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.50    0.53  61.20\nsdf              2.00      0.00     0.00   0.00   29.50     0.00  772.00     34.21     2.00   0.26    0.44    45.37    0.00      0.00     0.00   0.00    0.00     0.00    2.00   30.00    0.46  58.80\nsdg              3.00      0.00     0.00   0.00   22.00     1.33  773.00     34.21     2.00   0.26    0.43    45.31    0.00      0.00     0.00   0.00    0.00     0.00    2.00   33.00    0.46  58.00\nsdh              2.00      0.00     0.00   0.00   49.50     0.00  738.00     33.76     3.00   0.40    0.66    46.85    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.50    0.68  64.80\nsdi              3.00      0.00     0.00   0.00   31.33     1.33  680.00     34.21     2.00   0.29    0.86    51.52    0.00      0.00     0.00   0.00    0.00     0.00    2.00   47.00    0.77  66.80\nsdj              2.00      0.00     0.00   0.00   44.50     0.00  801.00     34.25     1.00   0.12    0.43    43.79    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.00    0.52  61.20\nsdk              2.00      0.00     0.00   0.00   49.00     0.00  675.00     33.88     3.00   0.44    1.00    51.39    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.00    0.87  71.20\nsdl              2.00      0.00     0.00   0.00   38.50     0.00  697.00     34.62     1.00   0.14    1.20    50.87    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.99  76.40\nsdm              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\nsr0              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00\n\n# 其中1代表刷新频率,1秒,3代表次数,刷新3次,如果不填写3,则为一直刷新\niostat -x -m 1 3\n```\n\n### 参数详解\n\n|参数|释义|\n|---|---|\n|-c|显示CPU利用率报告|\n|--compact|不要将“设备利用率报告”拆分为子报告，以便所有指标都显示在一行中|\n|-d|显示设备利用率报告|\n|--dec={ 0 \\| 1 \\| 2 }|指定要使用的小数位数（0到2，默认值为2）|\n|-f|官方对该参数的解释略微复杂,烦请查阅[官方文档](https://manpages.debian.org/testing/sysstat/iostat.1.en.html#f)|\n|-g|将所有设备汇总显示,-g参数后面填group_name|\n|-H|此选项必须与选项-g一起使用，并指示只显示组的全局统计信息，而不显示组中单个设备的统计信息|\n|-h|该选项将输出结果分类显示,便于阅读|\n|--human|以人类可读格式打印大小（例如1.0k、1.2M等）。使用此选项显示的单位将取代与度量相关的任何其他默认单位（例如千字节、扇区…）|\n|-j|在参数后跟(ID/LABEL/PATH/UUID)等,以替换原/dev/sd*的显示,[官方文档](https://manpages.debian.org/testing/sysstat/iostat.1.en.html#j)|\n|-k|以KB为单位进行显示|\n|-m|以MB为单位进行显示|\n|-N|显示任何设备映射器设备的注册设备映射器名称。用于查看LVM2统计信息|\n|-o JSON|以json格式输出结果|\n|-p|显示磁盘及其分区信息,可以在后跟指定磁盘以显示单个磁盘的分区信息|\n|--pretty|将报告以更易于阅读的方式显示,同--human|\n|-s|显示报告的短（窄）版本，该版本应适合80个字符宽的屏幕|\n|-t|打印显示的每个报告的时间。时间戳格式可能取决于S_TIME_format环境变量的值|\n|-V|打印iostat版本号|\n|-x|显示扩展统计信息|\n|-y|如果在给定的时间间隔内显示多个记录，则省略系统启动后的第一个统计报告|\n|-z|告诉iostat忽略在采样期间没有活动的任何设备的输出|\n\n### 输出结果参数解读\n\n|参数|释义|\n|---|---|\n|%user|显示在用户级别（应用程序）执行时发生的 CPU 使用率百分比|\n|%nice|显示在具有良好优先级的用户级别执行时发生的 CPU 使用率百分比|\n|%system|显示在系统级别（内核）执行时发生的 CPU 使用率百分比|\n|%iowait|显示系统有未完成的磁盘 I/O 请求期间 CPU 或 CPU 空闲的时间百分比|\n|%steal|显示虚拟机管理程序为另一个虚拟处理器提供服务时虚拟 CPU 或 CPU 非自愿等待所花费的时间百分比|\n|%idle|显示 CPU 或 CPU 空闲且系统没有未完成的磁盘 I/O 请求的时间百分比|\n|r/s|设备每秒完成的读取请求数（合并后）|\n|rMB/s|每秒读字节数,单位随参数-k/-m分别对应KB和MB|\n|rrqm/s|每秒合并到设备队列的读取请求数|\n|%rrqm|在发送到设备之前合并在一起的读取请求的百分比|\n|r_await|平均每次设备读I/O操作的等待时间 (毫秒)|\n|rareq-sz|向设备发出的读取请求的平均大小（以KB为单位）|\n|w/s|设备每秒完成的写入请求数（合并后）|\n|wMB/s|每秒写字节数,单位随参数-k/-m分别对应KB和MB|\n|wrqm/s|每秒合并到设备队列的写入请求数|\n|%wrqm|在发送到设备之前合并在一起的写入请求的百分比|\n|w_await|平均每次设备写I/O操作的等待时间 (毫秒)|\n|wareq-sz|向设备发出的写入请求的平均大小（以KB为单位）|\n|d/s|设备每秒完成的丢弃请求数（合并后）|\n|dMB/s|每秒为设备丢弃的扇区数,单位随参数-k/-m分别对应KB和MB|\n|drqm/s|每秒排队到设备的合并丢弃请求数|\n|%drqm|在发送到设备之前合并在一起的丢弃请求的百分比|\n|d_await|向要服务的设备发出的丢弃请求的平均时间（以毫秒为单位）。这包括队列中的请求所花费的时间以及为它们提供服务所花费的|\n|dareq-sz|向设备发出的丢弃请求的平均大小（以KB为单位）|\n|f/s|设备每秒完成的刷新请求数（合并后）。这对磁盘执行的刷新请求进行计数。不跟踪分区的刷新请求。在合并之前，刷新操作算作写入操作|\n|f_await|向要服务的设备发出刷新请求的平均时间（以毫秒为单位）。块层合并刷新请求并且一次最多执行一个。因此刷新操作可能是两倍长：等待当前刷新请求，然后执行它，然后等待下一个|\n|aqu-sz|向设备发出的请求的平均队列长度,在以前的版本中,此字段称为 avgqu-sz|\n|%util|向设备发出 I/O 请求所用时间的百分比（设备的带宽利用率）。对于串行服务请求的设备，当此值接近 100% 时，就会发生设备饱和。但对于并行处理请求的设备，例如 RAID 阵列和现代 SSD，这个数字并不反映它们的性能限制|\n\n> %iowait的值过高,表示硬盘存在I/O瓶颈\n> %idle值高,表示CPU较空闲\n> %idle值高但系统响应慢时,有可能是CPU等待分配内存,此时应加大内存容量\n> %idle值如果持续低于10,那么系统的CPU处理能力相对较低,表明系统中最需要解决的资源是CPU\n> %util 接近 100%，说明产生的I/O请求太多，I/O系统已经满负荷，该磁盘可能存在瓶颈\n>\n> 该文章内容参考[iostat官方文档https://manpages.debian.org/testing/sysstat/iostat.1.en.html](https://manpages.debian.org/testing/sysstat/iostat.1.en.html)\n\n## fio测试工具详细教程\n\n> 待完善,先临时记录一条\n\n```shell\nfio -name=stress_disk -filename=/mnt/DATA/test/a -size=30T -runtime=240h -bs=1m -direct=1 -rw=randrw -ioengine=libaio -numjobs=12 -group_reporting -iodepth=8 -rwmixwrite=50 -time_based -ramp_time=60s\n\n# 其中name是本次测试任务的名称\n# filename则为指定测试目录和文件名\n# size则为指定测试文件大小,此处为30T,无论运行多久,该测试文件a都不会超过30T\n# runtime为指定运行时间,240h则为240小时,单位可以为秒s分m时h\n# bs为块大小,顺序读写通常为1m,4k则填写4k即可\n# direct有0和1选项,0为使用文件系统缓存,1则为直接操作磁盘\n# rw可选的参数有read/write/rw/randread/randwrite/randrw,分别为读/写/读写/随机读/随机写/随机读写\n# ioengine IO测试引擎,在linux下选择libaio即可\n# numjobs线程数,一般设置为硬盘数量,根据实际需要自行调整\n# group_reporting合并报告,将性能测试结果合并汇报,显示所有硬盘性能测试的总结果\n# iodepth IO队列深度,指定IO队列深度,提高每次请求的IO数量\n# rwmixwrite/rwmixread 这两个参数都可以指定,按百分比指定,如rwmixwrite=30则表示写占比30%,只需使用其中一个即可,无需同时指定两个参数\n# time_based 设置即便fio写完了指定的size依旧不结束，直至runtime的时间\n# ramp_time=60s 设置fio执行任务时的预热时间，可以使性能测试结果更加精确可靠\n```\n\n## Linux NFS挂载及使用systemctl自动挂载\n\n```shell\n# NFS挂载基础命令及其作用\nmount -t nfs -o vers=3,rw,hard,sync 10.0.0.100:/mnt/TEST/nfs /mnt/100nfs\n# mount linux挂载命令\n# -t nfs 指定挂载协议为nfs -o也就是options，选项的意思\n# vers=3 指定NFS版本，NFSv3\n# rw 读写\n# hard硬链接\n# 补充：soft为软连接，二者的特点是硬链接保障数据安全但需要持续等待服务器响应，软连接的特点是快速响应但如果服务器断开则可能导致数据损坏或丢失\n# 简单来说，硬链接适合网络环境较差或数据安全要求严格的场景，软连接适合网络稳定需要快速响应的场景\n# 【技术是严谨的，如果我的解释有误烦请立刻指正，十分感谢！】\n# sync，同步写入，写入到磁盘，IO响应较慢但数据安全，async，异步写入，IO响应快，数据安全性低，类似RAID write back\n# 参数指定完成后便是服务器路径和本地路径，格式为 服务器地址:路径 本地路径，如 example:/example /example\n\n# 使用systemctl管理nfs挂载\n# 创建nfs.service文件【我的环境为Debian 11.6，该文件放在/usr/lib/systemd/system/下】\n# 2024/1/13更新，因实际使用过程中遇到过网络并未第一时间连通导致的挂载失败，所以在mount操作前增加ping操作\n# 原命令为：ExecStart=/usr/bin/mount -t nfs -o vers=3,rw,hard,sync 10.0.0.100:/mnt/data /data\n# 下列代码中10.0.0.100为我的nfs服务器地址，需要替换为你自己的，包括服务器的路径:/mnt/data/storage和挂载路径/mnt/nfs都需要替换为你自己的\n# 如有问题可以通过文末的联系方式咨询我\n[Unit]\nDescription=auto mount nfs\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/bin/bash -c 'until ping -c1 10.0.0.100 &>/dev/null; do sleep 5; done && /usr/bin/mount -t nfs -o vers=4,rw,hard,sync 10.0.0.100:/mnt/data/storage /mnt/nfs'\nRestart=no\n\n[Install]\nWantedBy=multi-user.target\n\n# 挂载nfs\nsystemctl start nfs.service\n# 开机自动挂载\nsystemctl enable nfs.service\n```\n\n## mdadm管理软RAID阵列\n\nmdadm全称Multiple Disk and Device Administration（多磁盘和设备管理），是一个Linux软件RAID管理工具，可以使用它来创建各种级别的RAID阵列，包括RAID 0、RAID 1、RAID 5、RAID 6等。\n\n### 使用mdadm创建RAID的一般步骤：\n\n1. 安装mdadm软件\n\n在大多数Linux发行版中，mdadm已经预装了，如果没有预装，则可以使用`sudo apt install mdadm`命令进行安装\n\n1. 准备好磁盘分区，推荐使用`parted`进行磁盘分区\n\n2. 创建RAID设备\n\n使用mdadm命令创建RAID设备。例如，以下命令将使用指定的磁盘分区创建一个RAID5设备\n\n```shell\nsudo mdadm --create /dev/md0 --level=5 --raid-devices=3 /dev/sda1 /dev/sdb1 /dev/sdc1\n```\n\n其中，/dev/md0是要创建的RAID设备的名称，自定义为md开头的设备即可，如`md233`等，--level=5指定RAID级别为5（RAID 5），--raid-devices=3指定有3个磁盘参与RAID，/dev/sda1、/dev/sdb1和/dev/sdc1是要组成RAID设备的分区。\n\n4. 格式化RAID设备\n\n创建RAID设备后，需要对其进行格式化，以便可以在其中存储数据。可以使用mkfs命令格式化RAID设备。例如，以下命令将对RAID设备进行ext4格式化：\n\n```shell\nsudo mkfs.ext4 /dev/md0\n```\n\n1. 挂载RAID设备\n\n格式化RAID设备后，需要将其挂载到文件系统中，以便可以访问其中的数据。可以使用mount命令将RAID设备挂载到指定的挂载点。例如，以下命令将RAID设备挂载到/mnt/raid5目录：\n\n```shell\nsudo mount /dev/md0 /mnt/raid5\n```\n\n### 使用mdadm删除RAID的一般步骤：\n\n1. 卸载RAID设备\n\n在删除RAID设备之前，需要先将其从文件系统中卸载。可以使用以下命令卸载挂载在/mnt/raid0目录的RAID设备：\n\n```shell\nsudo umount /mnt/raid5\n```\n\n2. 停用RAID设备\n\n在删除RAID设备之前，需要停用该设备。可以使用以下命令停用RAID设备：\n\n```shell\nsudo mdadm --stop /dev/md0\n```\n\n其中，/dev/md0是要停用的RAID设备的名称。\n\n3. 删除RAID设备\n\n在停用RAID设备之后，可以使用以下命令删除RAID设备：\n\n```shell\nsudo mdadm --remove /dev/md0\n```\n\n其中，/dev/md0是要删除的RAID设备的名称。\n\n4. 清除RAID设备元数据\n\n在删除RAID设备之后，需要清除RAID设备的元数据，以确保在以后不会误认为该设备是RAID设备。可以使用以下命令清除RAID设备的元数据：\n\n```shell\nsudo mdadm --zero-superblock /dev/sda1 /dev/sdb1 /dev/sdc1\n```\n\n其中，/dev/sda1、/dev/sdb1和/dev/sdc1是原始磁盘分区，是用来创建RAID设备的。使用该命令清除元数据可以确保将来使用这些分区时不会出现问题。\n\n以上就是删除mdadm创建的RAID设备的步骤。请注意，在删除RAID设备之前，务必备份其中的数据，以免误删除数据。\n\n## fstab自动挂载失败导致无法开机的解决办法\n\n首先，fstab的挂载强烈建议使用UUID，可以通过`blkid`命令查询UUID，UUID是不会变的，但是你的sda可能变成sdb，尤其是在iscsi挂载时\n\n通常`fstab`的挂载命令中有一条`default`，改为`nofail`即可。\n```shell\n# 原挂载方式\n/dev/sdc1 /mnt/data xfs default 0 0\n# 修改为nofail，该命令的作用为在挂载时如果失败则不会阻止系统启动。使用UUID挂载\nUUID=\"4048c1b1-1bde-49ee-8d40-8d437ce32783\" /mnt/data xfs nofail 0 0\n```\n\n**注意！修改fstab后强烈建议使用`mount -a`来测试挂载是否正常**\n\n**使用`blkid`查询UUID时，如果你的设备过多，可以指定某个设备或其分区查询，这样还可避免粗心错误挂载了设备本身，例如`blkid /dev/sdc1`这样查询的便是sdc设备的sdc1分区**\n\n## Linux使用stress-ng让CPU始终维持在百分比占用的办法\n\n首先，你需要安装stress-ng，同时，也推荐你使用dstat观察CPU占用率\n这两个软件通过`apt install stress-ng dstat`即可安装\n\n```shell\nstress-ng --cpu <线程数> --cpu-method matrixprod --cpu-load <百分比数字> --matrix-size 400 --timeout 0 --metrics-brief\n# 参数解析\n# --cpu <线程数>是使用多少个线程\n# --cpu-load <百分比数字>是占用率维持在多少\n# 上面这个两个参数需要配合使用，假设你的CPU是4核8线程，想要达到整个CPU50%占用率\n# 则需要设置为--cpu 8 --cpu-load 50或者是--cpu 4 --cpu-load 100，总占用率=线程数*百分比\n# --cpu-method matrixprod 这个选项指定了要使用的 CPU 负载类型，这里设置为 matrixprod，表示使用矩阵乘法来进行负载测试\n# --matrix-size 400 这个选项指定了矩阵乘法中的矩阵大小，这里设置为 400x400，表示要进行 400x400 的矩阵乘法计算\n# --timeout 0表示一直运行，也可设置为秒s分m时h的自定义时间如120s，也可写为2m\n# --metrics-brief 这个选项指定了在结束测试后输出的统计信息，这里设置为 brief，表示只输出简要的统计信息 -- 如果只是单纯为了占用CPU，可以不用这个\n\n# 示例，56核112线程的CPU使其占用维持在64%\n# 可以采用两个方案，控制满载的线程，或者直接设定总负载率\n# 因为我需要其余线程用于测试，所以下面采用的是控制满载线程的方式，使剩余线程空闲\nstress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --matrix-size 400 --timeout 0 --metrics-brief\n\n# 补充，因为stress-ng需要使用内存，考虑到你可能需要限制占用的内存量，可以使用以下方式实现\n# 指定--vm-bytes参数，该参数的作用是每个线程能使用的内存大小\n# --vm-bytes参数允许的范围是4KB-256TB，默认似乎是20MB\n# 我修改后的测试代码如下：\nstress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --vm-bytes 4K --matrix-size 400 --timeout 0 --metrics-brief\n```\n\n## Linux使用vsftp部署 FTP服务器的办法\n\n---\n本站新发布了使用docker部署 vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\n---\n\n第一步，根据你的发行版使用`apt`或`yum`及其他命令，安装`vsftp`软件包\n\n![20230906162643](https://img.hackerbs.com//20230906162643.png)\n\n第二步，编辑`vsftpd.conf`文件\n\n![20230906162829](https://img.hackerbs.com//20230906162829.png)\n\n确认以下内容：\n\n|参数|用途|\n|---|---|\n|anonymous_enable=NO|禁止匿名访问|\n|local_enable=YES|允许本地用户登录|\n|write_enable=YES|允许用户上传文件|\n|chroot_local_user=YES|限制用户的根目录为其主目录|\n\n第三步，添加以下行以指定允许登录的用户列表，这里我们创建一个名为`test`的用户\n\n```shell\nuserlist_enable=YES\nuserlist_file=/etc/vsftpd.userlist\nuserlist_deny=NO\nlocal_root=指定目录\n```\n\n编辑完成后保存退出\n\n![20230906171602](https://img.hackerbs.com//20230906171602.png)\n\n第四步，创建指定用户，此处以`abc`用户作为演示\n\n使用`useradd abc`创建`abc`用户\n\n**各发行版创建过程并不一致，请以你的发行版为准！**\n\n![20230906171833](https://img.hackerbs.com//20230906171833.png)\n\n使用`mkdir`命令，创建一个用于ftp的目录\n\n修改该目录所有者及所有组权限为`abc`，并赋予755权限\n\n```shell\n# 因vsftp安全策略原因，用户主目录，也就是/opt/ftp，将无法具备写权限，所以需要创建子目录用于ftp文件传输\nmkdir -p /opt/ftp/data\n#设置abc用户主目录为/opt/ftp/abc\nusermod -d /opt/ftp abc\n#移除abc用户主目录/opt/ftp的写权限，否则无法登录\nchmod a-w /opt/ftp\n#修改目录所有者及所有组\nchown -R abc:abc /opt/ftp/data\n#修改目录权限为755\nchmod -R 755 /opt/ftp/data\n\n#此处/opt/ftp则为上文中local_root=指定目录：local_root=/opt/ftp\n```\n\n根据上文的`userlist_file=/etc/vsftpd.userlist`，在`/etc`目录下创建`vsftpd.userlist`文件并编辑内容\n\n![20230906164114](https://img.hackerbs.com//20230906164114.png)\n\n输入用户名`abc`退出保存即可，如需添加多个用户，每行一个即可\n\n![20230906171208](https://img.hackerbs.com//20230906171208.png)\n\n第五步，重启`vsftp`服务\n\n`systemctl restart vsftpd`\n\n![20230906164916](https://img.hackerbs.com//20230906164916.png)\n\n如果需要让该ftp用户`abc`无法登录到系统，仅访问ftp，则按照以下步骤设置\n\n首先，找到系统中的`/etc/base`或`/etc/shells`，通常系统中会同时存在这两个文件，需要分别查看这两个文件，选择有内容的那一个，如图，`/etc/bash`为空，则该文件无效\n\n![20230906183203](https://img.hackerbs.com//20230906183203.png)\n\n编辑有文件的`/etc/shells`，在文件末尾添加`/bin/false`后保存退出\n\n![20230906183254](https://img.hackerbs.com//20230906183254.png)\n\n随后使用`usermod -s /bin/false abc`即可使`abc`用户无法登录到系统，但可正常登录ftp，若ftp依旧无法登录，使用上文中的方式重启`vsftp`服务即可。","slug":"Linux技巧【随时更新】","published":1,"updated":"2025-09-04T06:44:07.221Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtp000g9szw168lepa2","content":"<blockquote>\n<p>若您有任何技术问题，可以通过本站展示的联系方式咨询我</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"Linux查看硬盘SN\"><a href=\"#Linux查看硬盘SN\" class=\"headerlink\" title=\"Linux查看硬盘SN\"></a>Linux查看硬盘SN</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将<span class=\"comment\">#替换为你对应的硬盘号 如sda</span></span></span><br><span class=\"line\">lsblk --nodeps -no serial /dev/sd*</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux解除文件、目录占用\"><a href=\"#Linux解除文件、目录占用\" class=\"headerlink\" title=\"Linux解除文件、目录占用\"></a>Linux解除文件、目录占用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用该命令查看占用文件、文件夹的程序<span class=\"built_in\">id</span></span></span><br><span class=\"line\">fuser -cu /你要查询的文件或目录</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例</span></span><br><span class=\"line\">fuser -cu docker-application/</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的输出结果</span></span><br><span class=\"line\">/mnt/TEST/docker-application: 16676m(root) 16702m(root)</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中16676m(root)和16702m(root)便是表明该目录由<span class=\"built_in\">id</span>为16676和16702的进程占用</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用<span class=\"built_in\">kill</span> <span class=\"built_in\">id</span>杀死进程后便可删除或使用mount -f强制卸载</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux使用iostat查看磁盘io信息\"><a href=\"#Linux使用iostat查看磁盘io信息\" class=\"headerlink\" title=\"Linux使用iostat查看磁盘io信息\"></a>Linux使用iostat查看磁盘io信息</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用iostat可以查看简要的磁盘io信息</span></span><br><span class=\"line\">iostat</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在此列出部分iostat参数:</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-c 查看CPU信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-d 仅显示磁盘信息,默认是显示CPU和磁盘信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-x 显示详细信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-k或-m分别是以KB/MB为显示单位</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-p显示磁盘及其分区的信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">演示实例</span></span><br><span class=\"line\">iostat -x -m 1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输出结果为每1秒刷新一次以MB为单位的详细信息,一直刷新</span></span><br><span class=\"line\">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class=\"line\">           1.12    1.12   20.66    5.81    0.00   71.29</span><br><span class=\"line\"></span><br><span class=\"line\">Device            r/s     rMB/s   rrqm/s  %rrqm r_await rareq-sz     w/s     wMB/s   wrqm/s  %wrqm w_await wareq-sz     d/s     dMB/s   drqm/s  %drqm d_await dareq-sz     f/s f_await  aqu-sz  %util</span><br><span class=\"line\">dm-0             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-1             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-2             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-3             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-4             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md123            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md124            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md125            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md126            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md127            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">nvme0n1          7.00      0.02     0.00   0.00    6.14     3.43  120.00      1.32     0.00   0.00    1.31    11.30    0.00      0.00     0.00   0.00    0.00     0.00    2.00    2.50    0.21   9.20</span><br><span class=\"line\">sda              2.00      0.00     0.00   0.00   38.00     0.00  920.00     32.91     2.00   0.22    0.52    36.63    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.63  63.60</span><br><span class=\"line\">sdb              3.00      0.00     0.00   0.00   35.33     1.33  964.00     34.25     3.00   0.31    0.37    36.38    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.00    0.54  61.20</span><br><span class=\"line\">sdc              2.00      0.00     0.00   0.00   42.00     0.00  883.00     34.25     3.00   0.34    0.82    39.72    0.00      0.00     0.00   0.00    0.00     0.00    2.00   42.00    0.89  71.20</span><br><span class=\"line\">sdd              2.00      0.00     0.00   0.00   39.50     0.00  956.00     34.21     2.00   0.21    0.36    36.65    0.00      0.00     0.00   0.00    0.00     0.00    2.00   39.00    0.50  59.20</span><br><span class=\"line\">sde              3.00      0.00     0.00   0.00   36.00     1.33  780.00     34.26     1.00   0.13    0.43    44.98    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.50    0.53  61.20</span><br><span class=\"line\">sdf              2.00      0.00     0.00   0.00   29.50     0.00  772.00     34.21     2.00   0.26    0.44    45.37    0.00      0.00     0.00   0.00    0.00     0.00    2.00   30.00    0.46  58.80</span><br><span class=\"line\">sdg              3.00      0.00     0.00   0.00   22.00     1.33  773.00     34.21     2.00   0.26    0.43    45.31    0.00      0.00     0.00   0.00    0.00     0.00    2.00   33.00    0.46  58.00</span><br><span class=\"line\">sdh              2.00      0.00     0.00   0.00   49.50     0.00  738.00     33.76     3.00   0.40    0.66    46.85    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.50    0.68  64.80</span><br><span class=\"line\">sdi              3.00      0.00     0.00   0.00   31.33     1.33  680.00     34.21     2.00   0.29    0.86    51.52    0.00      0.00     0.00   0.00    0.00     0.00    2.00   47.00    0.77  66.80</span><br><span class=\"line\">sdj              2.00      0.00     0.00   0.00   44.50     0.00  801.00     34.25     1.00   0.12    0.43    43.79    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.00    0.52  61.20</span><br><span class=\"line\">sdk              2.00      0.00     0.00   0.00   49.00     0.00  675.00     33.88     3.00   0.44    1.00    51.39    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.00    0.87  71.20</span><br><span class=\"line\">sdl              2.00      0.00     0.00   0.00   38.50     0.00  697.00     34.62     1.00   0.14    1.20    50.87    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.99  76.40</span><br><span class=\"line\">sdm              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">sr0              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中1代表刷新频率,1秒,3代表次数,刷新3次,如果不填写3,则为一直刷新</span></span><br><span class=\"line\">iostat -x -m 1 3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参数详解\"><a href=\"#参数详解\" class=\"headerlink\" title=\"参数详解\"></a>参数详解</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-c</td>\n<td>显示CPU利用率报告</td>\n</tr>\n<tr>\n<td>–compact</td>\n<td>不要将“设备利用率报告”拆分为子报告，以便所有指标都显示在一行中</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>显示设备利用率报告</td>\n</tr>\n<tr>\n<td>–dec&#x3D;{ 0 | 1 | 2 }</td>\n<td>指定要使用的小数位数（0到2，默认值为2）</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>官方对该参数的解释略微复杂,烦请查阅<a href=\"https://manpages.debian.org/testing/sysstat/iostat.1.en.html#f\">官方文档</a></td>\n</tr>\n<tr>\n<td>-g</td>\n<td>将所有设备汇总显示,-g参数后面填group_name</td>\n</tr>\n<tr>\n<td>-H</td>\n<td>此选项必须与选项-g一起使用，并指示只显示组的全局统计信息，而不显示组中单个设备的统计信息</td>\n</tr>\n<tr>\n<td>-h</td>\n<td>该选项将输出结果分类显示,便于阅读</td>\n</tr>\n<tr>\n<td>–human</td>\n<td>以人类可读格式打印大小（例如1.0k、1.2M等）。使用此选项显示的单位将取代与度量相关的任何其他默认单位（例如千字节、扇区…）</td>\n</tr>\n<tr>\n<td>-j</td>\n<td>在参数后跟(ID&#x2F;LABEL&#x2F;PATH&#x2F;UUID)等,以替换原&#x2F;dev&#x2F;sd*的显示,<a href=\"https://manpages.debian.org/testing/sysstat/iostat.1.en.html#j\">官方文档</a></td>\n</tr>\n<tr>\n<td>-k</td>\n<td>以KB为单位进行显示</td>\n</tr>\n<tr>\n<td>-m</td>\n<td>以MB为单位进行显示</td>\n</tr>\n<tr>\n<td>-N</td>\n<td>显示任何设备映射器设备的注册设备映射器名称。用于查看LVM2统计信息</td>\n</tr>\n<tr>\n<td>-o JSON</td>\n<td>以json格式输出结果</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>显示磁盘及其分区信息,可以在后跟指定磁盘以显示单个磁盘的分区信息</td>\n</tr>\n<tr>\n<td>–pretty</td>\n<td>将报告以更易于阅读的方式显示,同–human</td>\n</tr>\n<tr>\n<td>-s</td>\n<td>显示报告的短（窄）版本，该版本应适合80个字符宽的屏幕</td>\n</tr>\n<tr>\n<td>-t</td>\n<td>打印显示的每个报告的时间。时间戳格式可能取决于S_TIME_format环境变量的值</td>\n</tr>\n<tr>\n<td>-V</td>\n<td>打印iostat版本号</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>显示扩展统计信息</td>\n</tr>\n<tr>\n<td>-y</td>\n<td>如果在给定的时间间隔内显示多个记录，则省略系统启动后的第一个统计报告</td>\n</tr>\n<tr>\n<td>-z</td>\n<td>告诉iostat忽略在采样期间没有活动的任何设备的输出</td>\n</tr>\n</tbody></table>\n<h3 id=\"输出结果参数解读\"><a href=\"#输出结果参数解读\" class=\"headerlink\" title=\"输出结果参数解读\"></a>输出结果参数解读</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%user</td>\n<td>显示在用户级别（应用程序）执行时发生的 CPU 使用率百分比</td>\n</tr>\n<tr>\n<td>%nice</td>\n<td>显示在具有良好优先级的用户级别执行时发生的 CPU 使用率百分比</td>\n</tr>\n<tr>\n<td>%system</td>\n<td>显示在系统级别（内核）执行时发生的 CPU 使用率百分比</td>\n</tr>\n<tr>\n<td>%iowait</td>\n<td>显示系统有未完成的磁盘 I&#x2F;O 请求期间 CPU 或 CPU 空闲的时间百分比</td>\n</tr>\n<tr>\n<td>%steal</td>\n<td>显示虚拟机管理程序为另一个虚拟处理器提供服务时虚拟 CPU 或 CPU 非自愿等待所花费的时间百分比</td>\n</tr>\n<tr>\n<td>%idle</td>\n<td>显示 CPU 或 CPU 空闲且系统没有未完成的磁盘 I&#x2F;O 请求的时间百分比</td>\n</tr>\n<tr>\n<td>r&#x2F;s</td>\n<td>设备每秒完成的读取请求数（合并后）</td>\n</tr>\n<tr>\n<td>rMB&#x2F;s</td>\n<td>每秒读字节数,单位随参数-k&#x2F;-m分别对应KB和MB</td>\n</tr>\n<tr>\n<td>rrqm&#x2F;s</td>\n<td>每秒合并到设备队列的读取请求数</td>\n</tr>\n<tr>\n<td>%rrqm</td>\n<td>在发送到设备之前合并在一起的读取请求的百分比</td>\n</tr>\n<tr>\n<td>r_await</td>\n<td>平均每次设备读I&#x2F;O操作的等待时间 (毫秒)</td>\n</tr>\n<tr>\n<td>rareq-sz</td>\n<td>向设备发出的读取请求的平均大小（以KB为单位）</td>\n</tr>\n<tr>\n<td>w&#x2F;s</td>\n<td>设备每秒完成的写入请求数（合并后）</td>\n</tr>\n<tr>\n<td>wMB&#x2F;s</td>\n<td>每秒写字节数,单位随参数-k&#x2F;-m分别对应KB和MB</td>\n</tr>\n<tr>\n<td>wrqm&#x2F;s</td>\n<td>每秒合并到设备队列的写入请求数</td>\n</tr>\n<tr>\n<td>%wrqm</td>\n<td>在发送到设备之前合并在一起的写入请求的百分比</td>\n</tr>\n<tr>\n<td>w_await</td>\n<td>平均每次设备写I&#x2F;O操作的等待时间 (毫秒)</td>\n</tr>\n<tr>\n<td>wareq-sz</td>\n<td>向设备发出的写入请求的平均大小（以KB为单位）</td>\n</tr>\n<tr>\n<td>d&#x2F;s</td>\n<td>设备每秒完成的丢弃请求数（合并后）</td>\n</tr>\n<tr>\n<td>dMB&#x2F;s</td>\n<td>每秒为设备丢弃的扇区数,单位随参数-k&#x2F;-m分别对应KB和MB</td>\n</tr>\n<tr>\n<td>drqm&#x2F;s</td>\n<td>每秒排队到设备的合并丢弃请求数</td>\n</tr>\n<tr>\n<td>%drqm</td>\n<td>在发送到设备之前合并在一起的丢弃请求的百分比</td>\n</tr>\n<tr>\n<td>d_await</td>\n<td>向要服务的设备发出的丢弃请求的平均时间（以毫秒为单位）。这包括队列中的请求所花费的时间以及为它们提供服务所花费的</td>\n</tr>\n<tr>\n<td>dareq-sz</td>\n<td>向设备发出的丢弃请求的平均大小（以KB为单位）</td>\n</tr>\n<tr>\n<td>f&#x2F;s</td>\n<td>设备每秒完成的刷新请求数（合并后）。这对磁盘执行的刷新请求进行计数。不跟踪分区的刷新请求。在合并之前，刷新操作算作写入操作</td>\n</tr>\n<tr>\n<td>f_await</td>\n<td>向要服务的设备发出刷新请求的平均时间（以毫秒为单位）。块层合并刷新请求并且一次最多执行一个。因此刷新操作可能是两倍长：等待当前刷新请求，然后执行它，然后等待下一个</td>\n</tr>\n<tr>\n<td>aqu-sz</td>\n<td>向设备发出的请求的平均队列长度,在以前的版本中,此字段称为 avgqu-sz</td>\n</tr>\n<tr>\n<td>%util</td>\n<td>向设备发出 I&#x2F;O 请求所用时间的百分比（设备的带宽利用率）。对于串行服务请求的设备，当此值接近 100% 时，就会发生设备饱和。但对于并行处理请求的设备，例如 RAID 阵列和现代 SSD，这个数字并不反映它们的性能限制</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>%iowait的值过高,表示硬盘存在I&#x2F;O瓶颈<br>%idle值高,表示CPU较空闲<br>%idle值高但系统响应慢时,有可能是CPU等待分配内存,此时应加大内存容量<br>%idle值如果持续低于10,那么系统的CPU处理能力相对较低,表明系统中最需要解决的资源是CPU<br>%util 接近 100%，说明产生的I&#x2F;O请求太多，I&#x2F;O系统已经满负荷，该磁盘可能存在瓶颈</p>\n<p>该文章内容参考<a href=\"https://manpages.debian.org/testing/sysstat/iostat.1.en.html\">iostat官方文档https://manpages.debian.org/testing/sysstat/iostat.1.en.html</a></p>\n</blockquote>\n<h2 id=\"fio测试工具详细教程\"><a href=\"#fio测试工具详细教程\" class=\"headerlink\" title=\"fio测试工具详细教程\"></a>fio测试工具详细教程</h2><blockquote>\n<p>待完善,先临时记录一条</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fio -name=stress_disk -filename=/mnt/DATA/test/a -size=30T -runtime=240h -bs=1m -direct=1 -rw=randrw -ioengine=libaio -numjobs=12 -group_reporting -iodepth=8 -rwmixwrite=50 -time_based -ramp_time=60s</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中name是本次测试任务的名称</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">filename则为指定测试目录和文件名</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">size则为指定测试文件大小,此处为30T,无论运行多久,该测试文件a都不会超过30T</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">runtime为指定运行时间,240h则为240小时,单位可以为秒s分m时h</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">bs为块大小,顺序读写通常为1m,4k则填写4k即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">direct有0和1选项,0为使用文件系统缓存,1则为直接操作磁盘</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rw可选的参数有<span class=\"built_in\">read</span>/write/rw/randread/randwrite/randrw,分别为读/写/读写/随机读/随机写/随机读写</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ioengine IO测试引擎,在linux下选择libaio即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">numjobs线程数,一般设置为硬盘数量,根据实际需要自行调整</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">group_reporting合并报告,将性能测试结果合并汇报,显示所有硬盘性能测试的总结果</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">iodepth IO队列深度,指定IO队列深度,提高每次请求的IO数量</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rwmixwrite/rwmixread 这两个参数都可以指定,按百分比指定,如rwmixwrite=30则表示写占比30%,只需使用其中一个即可,无需同时指定两个参数</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">time_based 设置即便fio写完了指定的size依旧不结束，直至runtime的时间</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ramp_time=60s 设置fio执行任务时的预热时间，可以使性能测试结果更加精确可靠</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux-NFS挂载及使用systemctl自动挂载\"><a href=\"#Linux-NFS挂载及使用systemctl自动挂载\" class=\"headerlink\" title=\"Linux NFS挂载及使用systemctl自动挂载\"></a>Linux NFS挂载及使用systemctl自动挂载</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">NFS挂载基础命令及其作用</span></span><br><span class=\"line\">mount -t nfs -o vers=3,rw,hard,sync 10.0.0.100:/mnt/TEST/nfs /mnt/100nfs</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">mount linux挂载命令</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-t nfs 指定挂载协议为nfs -o也就是options，选项的意思</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">vers=3 指定NFS版本，NFSv3</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rw 读写</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">hard硬链接</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">补充：soft为软连接，二者的特点是硬链接保障数据安全但需要持续等待服务器响应，软连接的特点是快速响应但如果服务器断开则可能导致数据损坏或丢失</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">简单来说，硬链接适合网络环境较差或数据安全要求严格的场景，软连接适合网络稳定需要快速响应的场景</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">【技术是严谨的，如果我的解释有误烦请立刻指正，十分感谢！】</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">sync</span>，同步写入，写入到磁盘，IO响应较慢但数据安全，async，异步写入，IO响应快，数据安全性低，类似RAID write back</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">参数指定完成后便是服务器路径和本地路径，格式为 服务器地址:路径 本地路径，如 example:/example /example</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用systemctl管理nfs挂载</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建nfs.service文件【我的环境为Debian 11.6，该文件放在/usr/lib/systemd/system/下】</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2024/1/13更新，因实际使用过程中遇到过网络并未第一时间连通导致的挂载失败，所以在mount操作前增加ping操作</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">原命令为：ExecStart=/usr/bin/mount -t nfs -o vers=3,rw,hard,<span class=\"built_in\">sync</span> 10.0.0.100:/mnt/data /data</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下列代码中10.0.0.100为我的nfs服务器地址，需要替换为你自己的，包括服务器的路径:/mnt/data/storage和挂载路径/mnt/nfs都需要替换为你自己的</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如有问题可以通过文末的联系方式咨询我</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=auto mount nfs</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/bin/bash -c &#x27;until ping -c1 10.0.0.100 &amp;&gt;/dev/null; do sleep 5; done &amp;&amp; /usr/bin/mount -t nfs -o vers=4,rw,hard,sync 10.0.0.100:/mnt/data/storage /mnt/nfs&#x27;</span><br><span class=\"line\">Restart=no</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">挂载nfs</span></span><br><span class=\"line\">systemctl start nfs.service</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">开机自动挂载</span></span><br><span class=\"line\">systemctl enable nfs.service</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mdadm管理软RAID阵列\"><a href=\"#mdadm管理软RAID阵列\" class=\"headerlink\" title=\"mdadm管理软RAID阵列\"></a>mdadm管理软RAID阵列</h2><p>mdadm全称Multiple Disk and Device Administration（多磁盘和设备管理），是一个Linux软件RAID管理工具，可以使用它来创建各种级别的RAID阵列，包括RAID 0、RAID 1、RAID 5、RAID 6等。</p>\n<h3 id=\"使用mdadm创建RAID的一般步骤：\"><a href=\"#使用mdadm创建RAID的一般步骤：\" class=\"headerlink\" title=\"使用mdadm创建RAID的一般步骤：\"></a>使用mdadm创建RAID的一般步骤：</h3><ol>\n<li>安装mdadm软件</li>\n</ol>\n<p>在大多数Linux发行版中，mdadm已经预装了，如果没有预装，则可以使用<code>sudo apt install mdadm</code>命令进行安装</p>\n<ol>\n<li><p>准备好磁盘分区，推荐使用<code>parted</code>进行磁盘分区</p>\n</li>\n<li><p>创建RAID设备</p>\n</li>\n</ol>\n<p>使用mdadm命令创建RAID设备。例如，以下命令将使用指定的磁盘分区创建一个RAID5设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --create /dev/md0 --level=5 --raid-devices=3 /dev/sda1 /dev/sdb1 /dev/sdc1</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;md0是要创建的RAID设备的名称，自定义为md开头的设备即可，如<code>md233</code>等，–level&#x3D;5指定RAID级别为5（RAID 5），–raid-devices&#x3D;3指定有3个磁盘参与RAID，&#x2F;dev&#x2F;sda1、&#x2F;dev&#x2F;sdb1和&#x2F;dev&#x2F;sdc1是要组成RAID设备的分区。</p>\n<ol start=\"4\">\n<li>格式化RAID设备</li>\n</ol>\n<p>创建RAID设备后，需要对其进行格式化，以便可以在其中存储数据。可以使用mkfs命令格式化RAID设备。例如，以下命令将对RAID设备进行ext4格式化：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkfs.ext4 /dev/md0</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>挂载RAID设备</li>\n</ol>\n<p>格式化RAID设备后，需要将其挂载到文件系统中，以便可以访问其中的数据。可以使用mount命令将RAID设备挂载到指定的挂载点。例如，以下命令将RAID设备挂载到&#x2F;mnt&#x2F;raid5目录：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/md0 /mnt/raid5</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用mdadm删除RAID的一般步骤：\"><a href=\"#使用mdadm删除RAID的一般步骤：\" class=\"headerlink\" title=\"使用mdadm删除RAID的一般步骤：\"></a>使用mdadm删除RAID的一般步骤：</h3><ol>\n<li>卸载RAID设备</li>\n</ol>\n<p>在删除RAID设备之前，需要先将其从文件系统中卸载。可以使用以下命令卸载挂载在&#x2F;mnt&#x2F;raid0目录的RAID设备：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo umount /mnt/raid5</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>停用RAID设备</li>\n</ol>\n<p>在删除RAID设备之前，需要停用该设备。可以使用以下命令停用RAID设备：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --stop /dev/md0</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;md0是要停用的RAID设备的名称。</p>\n<ol start=\"3\">\n<li>删除RAID设备</li>\n</ol>\n<p>在停用RAID设备之后，可以使用以下命令删除RAID设备：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --remove /dev/md0</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;md0是要删除的RAID设备的名称。</p>\n<ol start=\"4\">\n<li>清除RAID设备元数据</li>\n</ol>\n<p>在删除RAID设备之后，需要清除RAID设备的元数据，以确保在以后不会误认为该设备是RAID设备。可以使用以下命令清除RAID设备的元数据：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --zero-superblock /dev/sda1 /dev/sdb1 /dev/sdc1</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;sda1、&#x2F;dev&#x2F;sdb1和&#x2F;dev&#x2F;sdc1是原始磁盘分区，是用来创建RAID设备的。使用该命令清除元数据可以确保将来使用这些分区时不会出现问题。</p>\n<p>以上就是删除mdadm创建的RAID设备的步骤。请注意，在删除RAID设备之前，务必备份其中的数据，以免误删除数据。</p>\n<h2 id=\"fstab自动挂载失败导致无法开机的解决办法\"><a href=\"#fstab自动挂载失败导致无法开机的解决办法\" class=\"headerlink\" title=\"fstab自动挂载失败导致无法开机的解决办法\"></a>fstab自动挂载失败导致无法开机的解决办法</h2><p>首先，fstab的挂载强烈建议使用UUID，可以通过<code>blkid</code>命令查询UUID，UUID是不会变的，但是你的sda可能变成sdb，尤其是在iscsi挂载时</p>\n<p>通常<code>fstab</code>的挂载命令中有一条<code>default</code>，改为<code>nofail</code>即可。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">原挂载方式</span></span><br><span class=\"line\">/dev/sdc1 /mnt/data xfs default 0 0</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改为nofail，该命令的作用为在挂载时如果失败则不会阻止系统启动。使用UUID挂载</span></span><br><span class=\"line\">UUID=&quot;4048c1b1-1bde-49ee-8d40-8d437ce32783&quot; /mnt/data xfs nofail 0 0</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意！修改fstab后强烈建议使用<code>mount -a</code>来测试挂载是否正常</strong></p>\n<p><strong>使用<code>blkid</code>查询UUID时，如果你的设备过多，可以指定某个设备或其分区查询，这样还可避免粗心错误挂载了设备本身，例如<code>blkid /dev/sdc1</code>这样查询的便是sdc设备的sdc1分区</strong></p>\n<h2 id=\"Linux使用stress-ng让CPU始终维持在百分比占用的办法\"><a href=\"#Linux使用stress-ng让CPU始终维持在百分比占用的办法\" class=\"headerlink\" title=\"Linux使用stress-ng让CPU始终维持在百分比占用的办法\"></a>Linux使用stress-ng让CPU始终维持在百分比占用的办法</h2><p>首先，你需要安装stress-ng，同时，也推荐你使用dstat观察CPU占用率<br>这两个软件通过<code>apt install stress-ng dstat</code>即可安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stress-ng --cpu &lt;线程数&gt; --cpu-method matrixprod --cpu-load &lt;百分比数字&gt; --matrix-size 400 --timeout 0 --metrics-brief</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">参数解析</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--cpu &lt;线程数&gt;是使用多少个线程</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--cpu-load &lt;百分比数字&gt;是占用率维持在多少</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">上面这个两个参数需要配合使用，假设你的CPU是4核8线程，想要达到整个CPU50%占用率</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">则需要设置为--cpu 8 --cpu-load 50或者是--cpu 4 --cpu-load 100，总占用率=线程数*百分比</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--cpu-method matrixprod 这个选项指定了要使用的 CPU 负载类型，这里设置为 matrixprod，表示使用矩阵乘法来进行负载测试</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--matrix-size 400 这个选项指定了矩阵乘法中的矩阵大小，这里设置为 400x400，表示要进行 400x400 的矩阵乘法计算</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--<span class=\"built_in\">timeout</span> 0表示一直运行，也可设置为秒s分m时h的自定义时间如120s，也可写为2m</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--metrics-brief 这个选项指定了在结束测试后输出的统计信息，这里设置为 brief，表示只输出简要的统计信息 -- 如果只是单纯为了占用CPU，可以不用这个</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例，56核112线程的CPU使其占用维持在64%</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">可以采用两个方案，控制满载的线程，或者直接设定总负载率</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因为我需要其余线程用于测试，所以下面采用的是控制满载线程的方式，使剩余线程空闲</span></span><br><span class=\"line\">stress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --matrix-size 400 --timeout 0 --metrics-brief</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">补充，因为stress-ng需要使用内存，考虑到你可能需要限制占用的内存量，可以使用以下方式实现</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">指定--vm-bytes参数，该参数的作用是每个线程能使用的内存大小</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--vm-bytes参数允许的范围是4KB-256TB，默认似乎是20MB</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我修改后的测试代码如下：</span></span><br><span class=\"line\">stress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --vm-bytes 4K --matrix-size 400 --timeout 0 --metrics-brief</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux使用vsftp部署-FTP服务器的办法\"><a href=\"#Linux使用vsftp部署-FTP服务器的办法\" class=\"headerlink\" title=\"Linux使用vsftp部署 FTP服务器的办法\"></a>Linux使用vsftp部署 FTP服务器的办法</h2><hr>\n<h2 id=\"本站新发布了使用docker部署-vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\"><a href=\"#本站新发布了使用docker部署-vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\" class=\"headerlink\" title=\"本站新发布了使用docker部署 vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\"></a>本站新发布了使用docker部署 vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》</h2><p>第一步，根据你的发行版使用<code>apt</code>或<code>yum</code>及其他命令，安装<code>vsftp</code>软件包</p>\n<p><img src=\"https://img.hackerbs.com//20230906162643.png\" alt=\"20230906162643\"></p>\n<p>第二步，编辑<code>vsftpd.conf</code>文件</p>\n<p><img src=\"https://img.hackerbs.com//20230906162829.png\" alt=\"20230906162829\"></p>\n<p>确认以下内容：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>anonymous_enable&#x3D;NO</td>\n<td>禁止匿名访问</td>\n</tr>\n<tr>\n<td>local_enable&#x3D;YES</td>\n<td>允许本地用户登录</td>\n</tr>\n<tr>\n<td>write_enable&#x3D;YES</td>\n<td>允许用户上传文件</td>\n</tr>\n<tr>\n<td>chroot_local_user&#x3D;YES</td>\n<td>限制用户的根目录为其主目录</td>\n</tr>\n</tbody></table>\n<p>第三步，添加以下行以指定允许登录的用户列表，这里我们创建一个名为<code>test</code>的用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">userlist_enable=YES</span><br><span class=\"line\">userlist_file=/etc/vsftpd.userlist</span><br><span class=\"line\">userlist_deny=NO</span><br><span class=\"line\">local_root=指定目录</span><br></pre></td></tr></table></figure>\n\n<p>编辑完成后保存退出</p>\n<p><img src=\"https://img.hackerbs.com//20230906171602.png\" alt=\"20230906171602\"></p>\n<p>第四步，创建指定用户，此处以<code>abc</code>用户作为演示</p>\n<p>使用<code>useradd abc</code>创建<code>abc</code>用户</p>\n<p><strong>各发行版创建过程并不一致，请以你的发行版为准！</strong></p>\n<p><img src=\"https://img.hackerbs.com//20230906171833.png\" alt=\"20230906171833\"></p>\n<p>使用<code>mkdir</code>命令，创建一个用于ftp的目录</p>\n<p>修改该目录所有者及所有组权限为<code>abc</code>，并赋予755权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因vsftp安全策略原因，用户主目录，也就是/opt/ftp，将无法具备写权限，所以需要创建子目录用于ftp文件传输</span></span><br><span class=\"line\">mkdir -p /opt/ftp/data</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置abc用户主目录为/opt/ftp/abc</span></span><br><span class=\"line\">usermod -d /opt/ftp abc</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">移除abc用户主目录/opt/ftp的写权限，否则无法登录</span></span><br><span class=\"line\">chmod a-w /opt/ftp</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">修改目录所有者及所有组</span></span><br><span class=\"line\">chown -R abc:abc /opt/ftp/data</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">修改目录权限为755</span></span><br><span class=\"line\">chmod -R 755 /opt/ftp/data</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">此处/opt/ftp则为上文中local_root=指定目录：local_root=/opt/ftp</span></span><br></pre></td></tr></table></figure>\n\n<p>根据上文的<code>userlist_file=/etc/vsftpd.userlist</code>，在<code>/etc</code>目录下创建<code>vsftpd.userlist</code>文件并编辑内容</p>\n<p><img src=\"https://img.hackerbs.com//20230906164114.png\" alt=\"20230906164114\"></p>\n<p>输入用户名<code>abc</code>退出保存即可，如需添加多个用户，每行一个即可</p>\n<p><img src=\"https://img.hackerbs.com//20230906171208.png\" alt=\"20230906171208\"></p>\n<p>第五步，重启<code>vsftp</code>服务</p>\n<p><code>systemctl restart vsftpd</code></p>\n<p><img src=\"https://img.hackerbs.com//20230906164916.png\" alt=\"20230906164916\"></p>\n<p>如果需要让该ftp用户<code>abc</code>无法登录到系统，仅访问ftp，则按照以下步骤设置</p>\n<p>首先，找到系统中的<code>/etc/base</code>或<code>/etc/shells</code>，通常系统中会同时存在这两个文件，需要分别查看这两个文件，选择有内容的那一个，如图，<code>/etc/bash</code>为空，则该文件无效</p>\n<p><img src=\"https://img.hackerbs.com//20230906183203.png\" alt=\"20230906183203\"></p>\n<p>编辑有文件的<code>/etc/shells</code>，在文件末尾添加<code>/bin/false</code>后保存退出</p>\n<p><img src=\"https://img.hackerbs.com//20230906183254.png\" alt=\"20230906183254\"></p>\n<p>随后使用<code>usermod -s /bin/false abc</code>即可使<code>abc</code>用户无法登录到系统，但可正常登录ftp，若ftp依旧无法登录，使用上文中的方式重启<code>vsftp</code>服务即可。</p>\n","site":{"data":{}},"length":5529,"excerpt":"<blockquote>\n<p>若您有任何技术问题，可以通过本站展示的联系方式咨询我</p>\n</blockquote>","more":"<h2 id=\"Linux查看硬盘SN\"><a href=\"#Linux查看硬盘SN\" class=\"headerlink\" title=\"Linux查看硬盘SN\"></a>Linux查看硬盘SN</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将<span class=\"comment\">#替换为你对应的硬盘号 如sda</span></span></span><br><span class=\"line\">lsblk --nodeps -no serial /dev/sd*</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux解除文件、目录占用\"><a href=\"#Linux解除文件、目录占用\" class=\"headerlink\" title=\"Linux解除文件、目录占用\"></a>Linux解除文件、目录占用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用该命令查看占用文件、文件夹的程序<span class=\"built_in\">id</span></span></span><br><span class=\"line\">fuser -cu /你要查询的文件或目录</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例</span></span><br><span class=\"line\">fuser -cu docker-application/</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的输出结果</span></span><br><span class=\"line\">/mnt/TEST/docker-application: 16676m(root) 16702m(root)</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中16676m(root)和16702m(root)便是表明该目录由<span class=\"built_in\">id</span>为16676和16702的进程占用</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用<span class=\"built_in\">kill</span> <span class=\"built_in\">id</span>杀死进程后便可删除或使用mount -f强制卸载</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux使用iostat查看磁盘io信息\"><a href=\"#Linux使用iostat查看磁盘io信息\" class=\"headerlink\" title=\"Linux使用iostat查看磁盘io信息\"></a>Linux使用iostat查看磁盘io信息</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用iostat可以查看简要的磁盘io信息</span></span><br><span class=\"line\">iostat</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在此列出部分iostat参数:</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-c 查看CPU信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-d 仅显示磁盘信息,默认是显示CPU和磁盘信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-x 显示详细信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-k或-m分别是以KB/MB为显示单位</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-p显示磁盘及其分区的信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">演示实例</span></span><br><span class=\"line\">iostat -x -m 1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输出结果为每1秒刷新一次以MB为单位的详细信息,一直刷新</span></span><br><span class=\"line\">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class=\"line\">           1.12    1.12   20.66    5.81    0.00   71.29</span><br><span class=\"line\"></span><br><span class=\"line\">Device            r/s     rMB/s   rrqm/s  %rrqm r_await rareq-sz     w/s     wMB/s   wrqm/s  %wrqm w_await wareq-sz     d/s     dMB/s   drqm/s  %drqm d_await dareq-sz     f/s f_await  aqu-sz  %util</span><br><span class=\"line\">dm-0             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-1             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-2             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-3             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">dm-4             0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md123            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md124            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md125            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md126            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">md127            0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">nvme0n1          7.00      0.02     0.00   0.00    6.14     3.43  120.00      1.32     0.00   0.00    1.31    11.30    0.00      0.00     0.00   0.00    0.00     0.00    2.00    2.50    0.21   9.20</span><br><span class=\"line\">sda              2.00      0.00     0.00   0.00   38.00     0.00  920.00     32.91     2.00   0.22    0.52    36.63    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.63  63.60</span><br><span class=\"line\">sdb              3.00      0.00     0.00   0.00   35.33     1.33  964.00     34.25     3.00   0.31    0.37    36.38    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.00    0.54  61.20</span><br><span class=\"line\">sdc              2.00      0.00     0.00   0.00   42.00     0.00  883.00     34.25     3.00   0.34    0.82    39.72    0.00      0.00     0.00   0.00    0.00     0.00    2.00   42.00    0.89  71.20</span><br><span class=\"line\">sdd              2.00      0.00     0.00   0.00   39.50     0.00  956.00     34.21     2.00   0.21    0.36    36.65    0.00      0.00     0.00   0.00    0.00     0.00    2.00   39.00    0.50  59.20</span><br><span class=\"line\">sde              3.00      0.00     0.00   0.00   36.00     1.33  780.00     34.26     1.00   0.13    0.43    44.98    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.50    0.53  61.20</span><br><span class=\"line\">sdf              2.00      0.00     0.00   0.00   29.50     0.00  772.00     34.21     2.00   0.26    0.44    45.37    0.00      0.00     0.00   0.00    0.00     0.00    2.00   30.00    0.46  58.80</span><br><span class=\"line\">sdg              3.00      0.00     0.00   0.00   22.00     1.33  773.00     34.21     2.00   0.26    0.43    45.31    0.00      0.00     0.00   0.00    0.00     0.00    2.00   33.00    0.46  58.00</span><br><span class=\"line\">sdh              2.00      0.00     0.00   0.00   49.50     0.00  738.00     33.76     3.00   0.40    0.66    46.85    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.50    0.68  64.80</span><br><span class=\"line\">sdi              3.00      0.00     0.00   0.00   31.33     1.33  680.00     34.21     2.00   0.29    0.86    51.52    0.00      0.00     0.00   0.00    0.00     0.00    2.00   47.00    0.77  66.80</span><br><span class=\"line\">sdj              2.00      0.00     0.00   0.00   44.50     0.00  801.00     34.25     1.00   0.12    0.43    43.79    0.00      0.00     0.00   0.00    0.00     0.00    2.00   44.00    0.52  61.20</span><br><span class=\"line\">sdk              2.00      0.00     0.00   0.00   49.00     0.00  675.00     33.88     3.00   0.44    1.00    51.39    0.00      0.00     0.00   0.00    0.00     0.00    2.00   49.00    0.87  71.20</span><br><span class=\"line\">sdl              2.00      0.00     0.00   0.00   38.50     0.00  697.00     34.62     1.00   0.14    1.20    50.87    0.00      0.00     0.00   0.00    0.00     0.00    2.00   38.50    0.99  76.40</span><br><span class=\"line\">sdm              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\">sr0              0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00      0.00     0.00   0.00    0.00     0.00    0.00    0.00    0.00   0.00</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中1代表刷新频率,1秒,3代表次数,刷新3次,如果不填写3,则为一直刷新</span></span><br><span class=\"line\">iostat -x -m 1 3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参数详解\"><a href=\"#参数详解\" class=\"headerlink\" title=\"参数详解\"></a>参数详解</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-c</td>\n<td>显示CPU利用率报告</td>\n</tr>\n<tr>\n<td>–compact</td>\n<td>不要将“设备利用率报告”拆分为子报告，以便所有指标都显示在一行中</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>显示设备利用率报告</td>\n</tr>\n<tr>\n<td>–dec&#x3D;{ 0 | 1 | 2 }</td>\n<td>指定要使用的小数位数（0到2，默认值为2）</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>官方对该参数的解释略微复杂,烦请查阅<a href=\"https://manpages.debian.org/testing/sysstat/iostat.1.en.html#f\">官方文档</a></td>\n</tr>\n<tr>\n<td>-g</td>\n<td>将所有设备汇总显示,-g参数后面填group_name</td>\n</tr>\n<tr>\n<td>-H</td>\n<td>此选项必须与选项-g一起使用，并指示只显示组的全局统计信息，而不显示组中单个设备的统计信息</td>\n</tr>\n<tr>\n<td>-h</td>\n<td>该选项将输出结果分类显示,便于阅读</td>\n</tr>\n<tr>\n<td>–human</td>\n<td>以人类可读格式打印大小（例如1.0k、1.2M等）。使用此选项显示的单位将取代与度量相关的任何其他默认单位（例如千字节、扇区…）</td>\n</tr>\n<tr>\n<td>-j</td>\n<td>在参数后跟(ID&#x2F;LABEL&#x2F;PATH&#x2F;UUID)等,以替换原&#x2F;dev&#x2F;sd*的显示,<a href=\"https://manpages.debian.org/testing/sysstat/iostat.1.en.html#j\">官方文档</a></td>\n</tr>\n<tr>\n<td>-k</td>\n<td>以KB为单位进行显示</td>\n</tr>\n<tr>\n<td>-m</td>\n<td>以MB为单位进行显示</td>\n</tr>\n<tr>\n<td>-N</td>\n<td>显示任何设备映射器设备的注册设备映射器名称。用于查看LVM2统计信息</td>\n</tr>\n<tr>\n<td>-o JSON</td>\n<td>以json格式输出结果</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>显示磁盘及其分区信息,可以在后跟指定磁盘以显示单个磁盘的分区信息</td>\n</tr>\n<tr>\n<td>–pretty</td>\n<td>将报告以更易于阅读的方式显示,同–human</td>\n</tr>\n<tr>\n<td>-s</td>\n<td>显示报告的短（窄）版本，该版本应适合80个字符宽的屏幕</td>\n</tr>\n<tr>\n<td>-t</td>\n<td>打印显示的每个报告的时间。时间戳格式可能取决于S_TIME_format环境变量的值</td>\n</tr>\n<tr>\n<td>-V</td>\n<td>打印iostat版本号</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>显示扩展统计信息</td>\n</tr>\n<tr>\n<td>-y</td>\n<td>如果在给定的时间间隔内显示多个记录，则省略系统启动后的第一个统计报告</td>\n</tr>\n<tr>\n<td>-z</td>\n<td>告诉iostat忽略在采样期间没有活动的任何设备的输出</td>\n</tr>\n</tbody></table>\n<h3 id=\"输出结果参数解读\"><a href=\"#输出结果参数解读\" class=\"headerlink\" title=\"输出结果参数解读\"></a>输出结果参数解读</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%user</td>\n<td>显示在用户级别（应用程序）执行时发生的 CPU 使用率百分比</td>\n</tr>\n<tr>\n<td>%nice</td>\n<td>显示在具有良好优先级的用户级别执行时发生的 CPU 使用率百分比</td>\n</tr>\n<tr>\n<td>%system</td>\n<td>显示在系统级别（内核）执行时发生的 CPU 使用率百分比</td>\n</tr>\n<tr>\n<td>%iowait</td>\n<td>显示系统有未完成的磁盘 I&#x2F;O 请求期间 CPU 或 CPU 空闲的时间百分比</td>\n</tr>\n<tr>\n<td>%steal</td>\n<td>显示虚拟机管理程序为另一个虚拟处理器提供服务时虚拟 CPU 或 CPU 非自愿等待所花费的时间百分比</td>\n</tr>\n<tr>\n<td>%idle</td>\n<td>显示 CPU 或 CPU 空闲且系统没有未完成的磁盘 I&#x2F;O 请求的时间百分比</td>\n</tr>\n<tr>\n<td>r&#x2F;s</td>\n<td>设备每秒完成的读取请求数（合并后）</td>\n</tr>\n<tr>\n<td>rMB&#x2F;s</td>\n<td>每秒读字节数,单位随参数-k&#x2F;-m分别对应KB和MB</td>\n</tr>\n<tr>\n<td>rrqm&#x2F;s</td>\n<td>每秒合并到设备队列的读取请求数</td>\n</tr>\n<tr>\n<td>%rrqm</td>\n<td>在发送到设备之前合并在一起的读取请求的百分比</td>\n</tr>\n<tr>\n<td>r_await</td>\n<td>平均每次设备读I&#x2F;O操作的等待时间 (毫秒)</td>\n</tr>\n<tr>\n<td>rareq-sz</td>\n<td>向设备发出的读取请求的平均大小（以KB为单位）</td>\n</tr>\n<tr>\n<td>w&#x2F;s</td>\n<td>设备每秒完成的写入请求数（合并后）</td>\n</tr>\n<tr>\n<td>wMB&#x2F;s</td>\n<td>每秒写字节数,单位随参数-k&#x2F;-m分别对应KB和MB</td>\n</tr>\n<tr>\n<td>wrqm&#x2F;s</td>\n<td>每秒合并到设备队列的写入请求数</td>\n</tr>\n<tr>\n<td>%wrqm</td>\n<td>在发送到设备之前合并在一起的写入请求的百分比</td>\n</tr>\n<tr>\n<td>w_await</td>\n<td>平均每次设备写I&#x2F;O操作的等待时间 (毫秒)</td>\n</tr>\n<tr>\n<td>wareq-sz</td>\n<td>向设备发出的写入请求的平均大小（以KB为单位）</td>\n</tr>\n<tr>\n<td>d&#x2F;s</td>\n<td>设备每秒完成的丢弃请求数（合并后）</td>\n</tr>\n<tr>\n<td>dMB&#x2F;s</td>\n<td>每秒为设备丢弃的扇区数,单位随参数-k&#x2F;-m分别对应KB和MB</td>\n</tr>\n<tr>\n<td>drqm&#x2F;s</td>\n<td>每秒排队到设备的合并丢弃请求数</td>\n</tr>\n<tr>\n<td>%drqm</td>\n<td>在发送到设备之前合并在一起的丢弃请求的百分比</td>\n</tr>\n<tr>\n<td>d_await</td>\n<td>向要服务的设备发出的丢弃请求的平均时间（以毫秒为单位）。这包括队列中的请求所花费的时间以及为它们提供服务所花费的</td>\n</tr>\n<tr>\n<td>dareq-sz</td>\n<td>向设备发出的丢弃请求的平均大小（以KB为单位）</td>\n</tr>\n<tr>\n<td>f&#x2F;s</td>\n<td>设备每秒完成的刷新请求数（合并后）。这对磁盘执行的刷新请求进行计数。不跟踪分区的刷新请求。在合并之前，刷新操作算作写入操作</td>\n</tr>\n<tr>\n<td>f_await</td>\n<td>向要服务的设备发出刷新请求的平均时间（以毫秒为单位）。块层合并刷新请求并且一次最多执行一个。因此刷新操作可能是两倍长：等待当前刷新请求，然后执行它，然后等待下一个</td>\n</tr>\n<tr>\n<td>aqu-sz</td>\n<td>向设备发出的请求的平均队列长度,在以前的版本中,此字段称为 avgqu-sz</td>\n</tr>\n<tr>\n<td>%util</td>\n<td>向设备发出 I&#x2F;O 请求所用时间的百分比（设备的带宽利用率）。对于串行服务请求的设备，当此值接近 100% 时，就会发生设备饱和。但对于并行处理请求的设备，例如 RAID 阵列和现代 SSD，这个数字并不反映它们的性能限制</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>%iowait的值过高,表示硬盘存在I&#x2F;O瓶颈<br>%idle值高,表示CPU较空闲<br>%idle值高但系统响应慢时,有可能是CPU等待分配内存,此时应加大内存容量<br>%idle值如果持续低于10,那么系统的CPU处理能力相对较低,表明系统中最需要解决的资源是CPU<br>%util 接近 100%，说明产生的I&#x2F;O请求太多，I&#x2F;O系统已经满负荷，该磁盘可能存在瓶颈</p>\n<p>该文章内容参考<a href=\"https://manpages.debian.org/testing/sysstat/iostat.1.en.html\">iostat官方文档https://manpages.debian.org/testing/sysstat/iostat.1.en.html</a></p>\n</blockquote>\n<h2 id=\"fio测试工具详细教程\"><a href=\"#fio测试工具详细教程\" class=\"headerlink\" title=\"fio测试工具详细教程\"></a>fio测试工具详细教程</h2><blockquote>\n<p>待完善,先临时记录一条</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fio -name=stress_disk -filename=/mnt/DATA/test/a -size=30T -runtime=240h -bs=1m -direct=1 -rw=randrw -ioengine=libaio -numjobs=12 -group_reporting -iodepth=8 -rwmixwrite=50 -time_based -ramp_time=60s</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中name是本次测试任务的名称</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">filename则为指定测试目录和文件名</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">size则为指定测试文件大小,此处为30T,无论运行多久,该测试文件a都不会超过30T</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">runtime为指定运行时间,240h则为240小时,单位可以为秒s分m时h</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">bs为块大小,顺序读写通常为1m,4k则填写4k即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">direct有0和1选项,0为使用文件系统缓存,1则为直接操作磁盘</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rw可选的参数有<span class=\"built_in\">read</span>/write/rw/randread/randwrite/randrw,分别为读/写/读写/随机读/随机写/随机读写</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ioengine IO测试引擎,在linux下选择libaio即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">numjobs线程数,一般设置为硬盘数量,根据实际需要自行调整</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">group_reporting合并报告,将性能测试结果合并汇报,显示所有硬盘性能测试的总结果</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">iodepth IO队列深度,指定IO队列深度,提高每次请求的IO数量</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rwmixwrite/rwmixread 这两个参数都可以指定,按百分比指定,如rwmixwrite=30则表示写占比30%,只需使用其中一个即可,无需同时指定两个参数</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">time_based 设置即便fio写完了指定的size依旧不结束，直至runtime的时间</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ramp_time=60s 设置fio执行任务时的预热时间，可以使性能测试结果更加精确可靠</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux-NFS挂载及使用systemctl自动挂载\"><a href=\"#Linux-NFS挂载及使用systemctl自动挂载\" class=\"headerlink\" title=\"Linux NFS挂载及使用systemctl自动挂载\"></a>Linux NFS挂载及使用systemctl自动挂载</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">NFS挂载基础命令及其作用</span></span><br><span class=\"line\">mount -t nfs -o vers=3,rw,hard,sync 10.0.0.100:/mnt/TEST/nfs /mnt/100nfs</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">mount linux挂载命令</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-t nfs 指定挂载协议为nfs -o也就是options，选项的意思</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">vers=3 指定NFS版本，NFSv3</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rw 读写</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">hard硬链接</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">补充：soft为软连接，二者的特点是硬链接保障数据安全但需要持续等待服务器响应，软连接的特点是快速响应但如果服务器断开则可能导致数据损坏或丢失</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">简单来说，硬链接适合网络环境较差或数据安全要求严格的场景，软连接适合网络稳定需要快速响应的场景</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">【技术是严谨的，如果我的解释有误烦请立刻指正，十分感谢！】</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">sync</span>，同步写入，写入到磁盘，IO响应较慢但数据安全，async，异步写入，IO响应快，数据安全性低，类似RAID write back</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">参数指定完成后便是服务器路径和本地路径，格式为 服务器地址:路径 本地路径，如 example:/example /example</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用systemctl管理nfs挂载</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建nfs.service文件【我的环境为Debian 11.6，该文件放在/usr/lib/systemd/system/下】</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2024/1/13更新，因实际使用过程中遇到过网络并未第一时间连通导致的挂载失败，所以在mount操作前增加ping操作</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">原命令为：ExecStart=/usr/bin/mount -t nfs -o vers=3,rw,hard,<span class=\"built_in\">sync</span> 10.0.0.100:/mnt/data /data</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下列代码中10.0.0.100为我的nfs服务器地址，需要替换为你自己的，包括服务器的路径:/mnt/data/storage和挂载路径/mnt/nfs都需要替换为你自己的</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如有问题可以通过文末的联系方式咨询我</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=auto mount nfs</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/bin/bash -c &#x27;until ping -c1 10.0.0.100 &amp;&gt;/dev/null; do sleep 5; done &amp;&amp; /usr/bin/mount -t nfs -o vers=4,rw,hard,sync 10.0.0.100:/mnt/data/storage /mnt/nfs&#x27;</span><br><span class=\"line\">Restart=no</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">挂载nfs</span></span><br><span class=\"line\">systemctl start nfs.service</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">开机自动挂载</span></span><br><span class=\"line\">systemctl enable nfs.service</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mdadm管理软RAID阵列\"><a href=\"#mdadm管理软RAID阵列\" class=\"headerlink\" title=\"mdadm管理软RAID阵列\"></a>mdadm管理软RAID阵列</h2><p>mdadm全称Multiple Disk and Device Administration（多磁盘和设备管理），是一个Linux软件RAID管理工具，可以使用它来创建各种级别的RAID阵列，包括RAID 0、RAID 1、RAID 5、RAID 6等。</p>\n<h3 id=\"使用mdadm创建RAID的一般步骤：\"><a href=\"#使用mdadm创建RAID的一般步骤：\" class=\"headerlink\" title=\"使用mdadm创建RAID的一般步骤：\"></a>使用mdadm创建RAID的一般步骤：</h3><ol>\n<li>安装mdadm软件</li>\n</ol>\n<p>在大多数Linux发行版中，mdadm已经预装了，如果没有预装，则可以使用<code>sudo apt install mdadm</code>命令进行安装</p>\n<ol>\n<li><p>准备好磁盘分区，推荐使用<code>parted</code>进行磁盘分区</p>\n</li>\n<li><p>创建RAID设备</p>\n</li>\n</ol>\n<p>使用mdadm命令创建RAID设备。例如，以下命令将使用指定的磁盘分区创建一个RAID5设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --create /dev/md0 --level=5 --raid-devices=3 /dev/sda1 /dev/sdb1 /dev/sdc1</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;md0是要创建的RAID设备的名称，自定义为md开头的设备即可，如<code>md233</code>等，–level&#x3D;5指定RAID级别为5（RAID 5），–raid-devices&#x3D;3指定有3个磁盘参与RAID，&#x2F;dev&#x2F;sda1、&#x2F;dev&#x2F;sdb1和&#x2F;dev&#x2F;sdc1是要组成RAID设备的分区。</p>\n<ol start=\"4\">\n<li>格式化RAID设备</li>\n</ol>\n<p>创建RAID设备后，需要对其进行格式化，以便可以在其中存储数据。可以使用mkfs命令格式化RAID设备。例如，以下命令将对RAID设备进行ext4格式化：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkfs.ext4 /dev/md0</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>挂载RAID设备</li>\n</ol>\n<p>格式化RAID设备后，需要将其挂载到文件系统中，以便可以访问其中的数据。可以使用mount命令将RAID设备挂载到指定的挂载点。例如，以下命令将RAID设备挂载到&#x2F;mnt&#x2F;raid5目录：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/md0 /mnt/raid5</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用mdadm删除RAID的一般步骤：\"><a href=\"#使用mdadm删除RAID的一般步骤：\" class=\"headerlink\" title=\"使用mdadm删除RAID的一般步骤：\"></a>使用mdadm删除RAID的一般步骤：</h3><ol>\n<li>卸载RAID设备</li>\n</ol>\n<p>在删除RAID设备之前，需要先将其从文件系统中卸载。可以使用以下命令卸载挂载在&#x2F;mnt&#x2F;raid0目录的RAID设备：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo umount /mnt/raid5</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>停用RAID设备</li>\n</ol>\n<p>在删除RAID设备之前，需要停用该设备。可以使用以下命令停用RAID设备：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --stop /dev/md0</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;md0是要停用的RAID设备的名称。</p>\n<ol start=\"3\">\n<li>删除RAID设备</li>\n</ol>\n<p>在停用RAID设备之后，可以使用以下命令删除RAID设备：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --remove /dev/md0</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;md0是要删除的RAID设备的名称。</p>\n<ol start=\"4\">\n<li>清除RAID设备元数据</li>\n</ol>\n<p>在删除RAID设备之后，需要清除RAID设备的元数据，以确保在以后不会误认为该设备是RAID设备。可以使用以下命令清除RAID设备的元数据：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mdadm --zero-superblock /dev/sda1 /dev/sdb1 /dev/sdc1</span><br></pre></td></tr></table></figure>\n\n<p>其中，&#x2F;dev&#x2F;sda1、&#x2F;dev&#x2F;sdb1和&#x2F;dev&#x2F;sdc1是原始磁盘分区，是用来创建RAID设备的。使用该命令清除元数据可以确保将来使用这些分区时不会出现问题。</p>\n<p>以上就是删除mdadm创建的RAID设备的步骤。请注意，在删除RAID设备之前，务必备份其中的数据，以免误删除数据。</p>\n<h2 id=\"fstab自动挂载失败导致无法开机的解决办法\"><a href=\"#fstab自动挂载失败导致无法开机的解决办法\" class=\"headerlink\" title=\"fstab自动挂载失败导致无法开机的解决办法\"></a>fstab自动挂载失败导致无法开机的解决办法</h2><p>首先，fstab的挂载强烈建议使用UUID，可以通过<code>blkid</code>命令查询UUID，UUID是不会变的，但是你的sda可能变成sdb，尤其是在iscsi挂载时</p>\n<p>通常<code>fstab</code>的挂载命令中有一条<code>default</code>，改为<code>nofail</code>即可。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">原挂载方式</span></span><br><span class=\"line\">/dev/sdc1 /mnt/data xfs default 0 0</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改为nofail，该命令的作用为在挂载时如果失败则不会阻止系统启动。使用UUID挂载</span></span><br><span class=\"line\">UUID=&quot;4048c1b1-1bde-49ee-8d40-8d437ce32783&quot; /mnt/data xfs nofail 0 0</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意！修改fstab后强烈建议使用<code>mount -a</code>来测试挂载是否正常</strong></p>\n<p><strong>使用<code>blkid</code>查询UUID时，如果你的设备过多，可以指定某个设备或其分区查询，这样还可避免粗心错误挂载了设备本身，例如<code>blkid /dev/sdc1</code>这样查询的便是sdc设备的sdc1分区</strong></p>\n<h2 id=\"Linux使用stress-ng让CPU始终维持在百分比占用的办法\"><a href=\"#Linux使用stress-ng让CPU始终维持在百分比占用的办法\" class=\"headerlink\" title=\"Linux使用stress-ng让CPU始终维持在百分比占用的办法\"></a>Linux使用stress-ng让CPU始终维持在百分比占用的办法</h2><p>首先，你需要安装stress-ng，同时，也推荐你使用dstat观察CPU占用率<br>这两个软件通过<code>apt install stress-ng dstat</code>即可安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stress-ng --cpu &lt;线程数&gt; --cpu-method matrixprod --cpu-load &lt;百分比数字&gt; --matrix-size 400 --timeout 0 --metrics-brief</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">参数解析</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--cpu &lt;线程数&gt;是使用多少个线程</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--cpu-load &lt;百分比数字&gt;是占用率维持在多少</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">上面这个两个参数需要配合使用，假设你的CPU是4核8线程，想要达到整个CPU50%占用率</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">则需要设置为--cpu 8 --cpu-load 50或者是--cpu 4 --cpu-load 100，总占用率=线程数*百分比</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--cpu-method matrixprod 这个选项指定了要使用的 CPU 负载类型，这里设置为 matrixprod，表示使用矩阵乘法来进行负载测试</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--matrix-size 400 这个选项指定了矩阵乘法中的矩阵大小，这里设置为 400x400，表示要进行 400x400 的矩阵乘法计算</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--<span class=\"built_in\">timeout</span> 0表示一直运行，也可设置为秒s分m时h的自定义时间如120s，也可写为2m</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--metrics-brief 这个选项指定了在结束测试后输出的统计信息，这里设置为 brief，表示只输出简要的统计信息 -- 如果只是单纯为了占用CPU，可以不用这个</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例，56核112线程的CPU使其占用维持在64%</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">可以采用两个方案，控制满载的线程，或者直接设定总负载率</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因为我需要其余线程用于测试，所以下面采用的是控制满载线程的方式，使剩余线程空闲</span></span><br><span class=\"line\">stress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --matrix-size 400 --timeout 0 --metrics-brief</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">补充，因为stress-ng需要使用内存，考虑到你可能需要限制占用的内存量，可以使用以下方式实现</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">指定--vm-bytes参数，该参数的作用是每个线程能使用的内存大小</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--vm-bytes参数允许的范围是4KB-256TB，默认似乎是20MB</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我修改后的测试代码如下：</span></span><br><span class=\"line\">stress-ng --cpu 72 --cpu-method matrixprod --cpu-load 100 --vm-bytes 4K --matrix-size 400 --timeout 0 --metrics-brief</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux使用vsftp部署-FTP服务器的办法\"><a href=\"#Linux使用vsftp部署-FTP服务器的办法\" class=\"headerlink\" title=\"Linux使用vsftp部署 FTP服务器的办法\"></a>Linux使用vsftp部署 FTP服务器的办法</h2><hr>\n<h2 id=\"本站新发布了使用docker部署-vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\"><a href=\"#本站新发布了使用docker部署-vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\" class=\"headerlink\" title=\"本站新发布了使用docker部署 vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》\"></a>本站新发布了使用docker部署 vsftpd的方法，推荐使用docker部署，请查看文章《使用Docker部署vsftpd》</h2><p>第一步，根据你的发行版使用<code>apt</code>或<code>yum</code>及其他命令，安装<code>vsftp</code>软件包</p>\n<p><img src=\"https://img.hackerbs.com//20230906162643.png\" alt=\"20230906162643\"></p>\n<p>第二步，编辑<code>vsftpd.conf</code>文件</p>\n<p><img src=\"https://img.hackerbs.com//20230906162829.png\" alt=\"20230906162829\"></p>\n<p>确认以下内容：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>anonymous_enable&#x3D;NO</td>\n<td>禁止匿名访问</td>\n</tr>\n<tr>\n<td>local_enable&#x3D;YES</td>\n<td>允许本地用户登录</td>\n</tr>\n<tr>\n<td>write_enable&#x3D;YES</td>\n<td>允许用户上传文件</td>\n</tr>\n<tr>\n<td>chroot_local_user&#x3D;YES</td>\n<td>限制用户的根目录为其主目录</td>\n</tr>\n</tbody></table>\n<p>第三步，添加以下行以指定允许登录的用户列表，这里我们创建一个名为<code>test</code>的用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">userlist_enable=YES</span><br><span class=\"line\">userlist_file=/etc/vsftpd.userlist</span><br><span class=\"line\">userlist_deny=NO</span><br><span class=\"line\">local_root=指定目录</span><br></pre></td></tr></table></figure>\n\n<p>编辑完成后保存退出</p>\n<p><img src=\"https://img.hackerbs.com//20230906171602.png\" alt=\"20230906171602\"></p>\n<p>第四步，创建指定用户，此处以<code>abc</code>用户作为演示</p>\n<p>使用<code>useradd abc</code>创建<code>abc</code>用户</p>\n<p><strong>各发行版创建过程并不一致，请以你的发行版为准！</strong></p>\n<p><img src=\"https://img.hackerbs.com//20230906171833.png\" alt=\"20230906171833\"></p>\n<p>使用<code>mkdir</code>命令，创建一个用于ftp的目录</p>\n<p>修改该目录所有者及所有组权限为<code>abc</code>，并赋予755权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因vsftp安全策略原因，用户主目录，也就是/opt/ftp，将无法具备写权限，所以需要创建子目录用于ftp文件传输</span></span><br><span class=\"line\">mkdir -p /opt/ftp/data</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置abc用户主目录为/opt/ftp/abc</span></span><br><span class=\"line\">usermod -d /opt/ftp abc</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">移除abc用户主目录/opt/ftp的写权限，否则无法登录</span></span><br><span class=\"line\">chmod a-w /opt/ftp</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">修改目录所有者及所有组</span></span><br><span class=\"line\">chown -R abc:abc /opt/ftp/data</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">修改目录权限为755</span></span><br><span class=\"line\">chmod -R 755 /opt/ftp/data</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">此处/opt/ftp则为上文中local_root=指定目录：local_root=/opt/ftp</span></span><br></pre></td></tr></table></figure>\n\n<p>根据上文的<code>userlist_file=/etc/vsftpd.userlist</code>，在<code>/etc</code>目录下创建<code>vsftpd.userlist</code>文件并编辑内容</p>\n<p><img src=\"https://img.hackerbs.com//20230906164114.png\" alt=\"20230906164114\"></p>\n<p>输入用户名<code>abc</code>退出保存即可，如需添加多个用户，每行一个即可</p>\n<p><img src=\"https://img.hackerbs.com//20230906171208.png\" alt=\"20230906171208\"></p>\n<p>第五步，重启<code>vsftp</code>服务</p>\n<p><code>systemctl restart vsftpd</code></p>\n<p><img src=\"https://img.hackerbs.com//20230906164916.png\" alt=\"20230906164916\"></p>\n<p>如果需要让该ftp用户<code>abc</code>无法登录到系统，仅访问ftp，则按照以下步骤设置</p>\n<p>首先，找到系统中的<code>/etc/base</code>或<code>/etc/shells</code>，通常系统中会同时存在这两个文件，需要分别查看这两个文件，选择有内容的那一个，如图，<code>/etc/bash</code>为空，则该文件无效</p>\n<p><img src=\"https://img.hackerbs.com//20230906183203.png\" alt=\"20230906183203\"></p>\n<p>编辑有文件的<code>/etc/shells</code>，在文件末尾添加<code>/bin/false</code>后保存退出</p>\n<p><img src=\"https://img.hackerbs.com//20230906183254.png\" alt=\"20230906183254\"></p>\n<p>随后使用<code>usermod -s /bin/false abc</code>即可使<code>abc</code>用户无法登录到系统，但可正常登录ftp，若ftp依旧无法登录，使用上文中的方式重启<code>vsftp</code>服务即可。</p>"},{"title":"Linux查询ssh日志判断是否被入侵及加强ssh安全的办法","comments":1,"date":"2024-03-05T09:14:44.000Z","keywords":["Linux","ssh","网络安全"],"_content":"\n## 查询ssh登陆日志的办法\n\n\n`journalctl _COMM=sshd`可以查看sshd所有日志\n\n```shell\n# 查询ssh登陆失败总次数\njournalctl _COMM=sshd | grep Failed |wc -l\n\n#查询ssh登陆成功总次数\njournalctl _COMM=sshd | grep Accepted |wc -l\n\n#查询被多少不同IP爆破了\njournalctl _COMM=sshd | grep \"Failed\" | awk '{print $(NF-3)}' | sort -u | wc -l\n\n# 列出爆破你的IP\njournalctl _COMM=sshd | grep \"Failed\" | awk '{print $(NF-3)}' | sort -u\n\n# 列出成功登陆的IP\njournalctl _COMM=sshd | grep -E \"Accepted\" | awk '{match($0, /([0-9]+\\.){3}[0-9]+/); print substr($0, RSTART, RLENGTH)}' | sort -u\n```\n\n<!-- more -->\n\n## 加强ssh安全的办法\n\n1. 禁用root密码登陆\n\n编辑`/etc/ssh/sshd_config`文件，默认会有`PermitRootLogin prohibit-password`\n保持默认的`prohibit-password`可使root用户密码登陆时一直提示密码错误，而不是直接提示禁止密码登陆，起到迷惑入侵者的作用\n\n还可配置`PasswordAuthentication no`使普通用户也无法通过密码登陆并提示需要publickey\n\n2. 修改ssh服务端口\n\n编辑`/etc/ssh/sshd_config`文件，将默认的`# Port 22`修改为`Port 20022`或其他符合规定的端口\n修改端口后ssh连接时需要使用`-p 20022`指定端口\n使用scp上传文件时也需要在scp命令后紧跟着使用`-P 20022`指定端口\n\n3. ssh连接时使用指定的key进行验证\n\nssh客户端在连接服务器时可以使用`-i`参数使用指定的id_rsa私钥进行连接，需要注意，id_rsa私钥文件权限需为600，也就是仅所有者可读写\n使用root指定私钥访问20022端口的服务器示例：\n```shell\nssh -i ./myKeys/id_rsa -p 20022 root@192.168.2.254\n```\n\n修改`sshd_config`文件后需要重启ssh服务，debian通常使用`systemctl restart ssh`即可","source":"_posts/Linux查询ssh日志判断是否被入侵及加强ssh安全的办法.md","raw":"---\ntitle: Linux查询ssh日志判断是否被入侵及加强ssh安全的办法\ncategories: [知识库]\ncomments: true\ndate: 2024-03-05 17:14:44\nkeywords:\n    - Linux\n    - ssh\n    - 网络安全\ntags:\n    - Linux\n    - ssh\n    - 网络安全\n    - ssh爆破\n---\n\n## 查询ssh登陆日志的办法\n\n\n`journalctl _COMM=sshd`可以查看sshd所有日志\n\n```shell\n# 查询ssh登陆失败总次数\njournalctl _COMM=sshd | grep Failed |wc -l\n\n#查询ssh登陆成功总次数\njournalctl _COMM=sshd | grep Accepted |wc -l\n\n#查询被多少不同IP爆破了\njournalctl _COMM=sshd | grep \"Failed\" | awk '{print $(NF-3)}' | sort -u | wc -l\n\n# 列出爆破你的IP\njournalctl _COMM=sshd | grep \"Failed\" | awk '{print $(NF-3)}' | sort -u\n\n# 列出成功登陆的IP\njournalctl _COMM=sshd | grep -E \"Accepted\" | awk '{match($0, /([0-9]+\\.){3}[0-9]+/); print substr($0, RSTART, RLENGTH)}' | sort -u\n```\n\n<!-- more -->\n\n## 加强ssh安全的办法\n\n1. 禁用root密码登陆\n\n编辑`/etc/ssh/sshd_config`文件，默认会有`PermitRootLogin prohibit-password`\n保持默认的`prohibit-password`可使root用户密码登陆时一直提示密码错误，而不是直接提示禁止密码登陆，起到迷惑入侵者的作用\n\n还可配置`PasswordAuthentication no`使普通用户也无法通过密码登陆并提示需要publickey\n\n2. 修改ssh服务端口\n\n编辑`/etc/ssh/sshd_config`文件，将默认的`# Port 22`修改为`Port 20022`或其他符合规定的端口\n修改端口后ssh连接时需要使用`-p 20022`指定端口\n使用scp上传文件时也需要在scp命令后紧跟着使用`-P 20022`指定端口\n\n3. ssh连接时使用指定的key进行验证\n\nssh客户端在连接服务器时可以使用`-i`参数使用指定的id_rsa私钥进行连接，需要注意，id_rsa私钥文件权限需为600，也就是仅所有者可读写\n使用root指定私钥访问20022端口的服务器示例：\n```shell\nssh -i ./myKeys/id_rsa -p 20022 root@192.168.2.254\n```\n\n修改`sshd_config`文件后需要重启ssh服务，debian通常使用`systemctl restart ssh`即可","slug":"Linux查询ssh日志判断是否被入侵及加强ssh安全的办法","published":1,"updated":"2025-09-04T06:44:07.221Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtq000i9szw2r8j5u1p","content":"<h2 id=\"查询ssh登陆日志的办法\"><a href=\"#查询ssh登陆日志的办法\" class=\"headerlink\" title=\"查询ssh登陆日志的办法\"></a>查询ssh登陆日志的办法</h2><p><code>journalctl _COMM=sshd</code>可以查看sshd所有日志</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询ssh登陆失败总次数</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep Failed |wc -l</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查询ssh登陆成功总次数</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep Accepted |wc -l</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查询被多少不同IP爆破了</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep &quot;Failed&quot; | awk &#x27;&#123;print $(NF-3)&#125;&#x27; | sort -u | wc -l</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">列出爆破你的IP</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep &quot;Failed&quot; | awk &#x27;&#123;print $(NF-3)&#125;&#x27; | sort -u</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">列出成功登陆的IP</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep -E &quot;Accepted&quot; | awk &#x27;&#123;match($0, /([0-9]+\\.)&#123;3&#125;[0-9]+/); print substr($0, RSTART, RLENGTH)&#125;&#x27; | sort -u</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<h2 id=\"加强ssh安全的办法\"><a href=\"#加强ssh安全的办法\" class=\"headerlink\" title=\"加强ssh安全的办法\"></a>加强ssh安全的办法</h2><ol>\n<li>禁用root密码登陆</li>\n</ol>\n<p>编辑<code>/etc/ssh/sshd_config</code>文件，默认会有<code>PermitRootLogin prohibit-password</code><br>保持默认的<code>prohibit-password</code>可使root用户密码登陆时一直提示密码错误，而不是直接提示禁止密码登陆，起到迷惑入侵者的作用</p>\n<p>还可配置<code>PasswordAuthentication no</code>使普通用户也无法通过密码登陆并提示需要publickey</p>\n<ol start=\"2\">\n<li>修改ssh服务端口</li>\n</ol>\n<p>编辑<code>/etc/ssh/sshd_config</code>文件，将默认的<code># Port 22</code>修改为<code>Port 20022</code>或其他符合规定的端口<br>修改端口后ssh连接时需要使用<code>-p 20022</code>指定端口<br>使用scp上传文件时也需要在scp命令后紧跟着使用<code>-P 20022</code>指定端口</p>\n<ol start=\"3\">\n<li>ssh连接时使用指定的key进行验证</li>\n</ol>\n<p>ssh客户端在连接服务器时可以使用<code>-i</code>参数使用指定的id_rsa私钥进行连接，需要注意，id_rsa私钥文件权限需为600，也就是仅所有者可读写<br>使用root指定私钥访问20022端口的服务器示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -i ./myKeys/id_rsa -p 20022 root@192.168.2.254</span><br></pre></td></tr></table></figure>\n\n<p>修改<code>sshd_config</code>文件后需要重启ssh服务，debian通常使用<code>systemctl restart ssh</code>即可</p>\n","site":{"data":{}},"length":434,"excerpt":"<h2 id=\"查询ssh登陆日志的办法\"><a href=\"#查询ssh登陆日志的办法\" class=\"headerlink\" title=\"查询ssh登陆日志的办法\"></a>查询ssh登陆日志的办法</h2><p><code>journalctl _COMM=sshd</code>可以查看sshd所有日志</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询ssh登陆失败总次数</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep Failed |wc -l</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查询ssh登陆成功总次数</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep Accepted |wc -l</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查询被多少不同IP爆破了</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep &quot;Failed&quot; | awk &#x27;&#123;print $(NF-3)&#125;&#x27; | sort -u | wc -l</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">列出爆破你的IP</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep &quot;Failed&quot; | awk &#x27;&#123;print $(NF-3)&#125;&#x27; | sort -u</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">列出成功登陆的IP</span></span><br><span class=\"line\">journalctl _COMM=sshd | grep -E &quot;Accepted&quot; | awk &#x27;&#123;match($0, /([0-9]+\\.)&#123;3&#125;[0-9]+/); print substr($0, RSTART, RLENGTH)&#125;&#x27; | sort -u</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"加强ssh安全的办法\"><a href=\"#加强ssh安全的办法\" class=\"headerlink\" title=\"加强ssh安全的办法\"></a>加强ssh安全的办法</h2><ol>\n<li>禁用root密码登陆</li>\n</ol>\n<p>编辑<code>/etc/ssh/sshd_config</code>文件，默认会有<code>PermitRootLogin prohibit-password</code><br>保持默认的<code>prohibit-password</code>可使root用户密码登陆时一直提示密码错误，而不是直接提示禁止密码登陆，起到迷惑入侵者的作用</p>\n<p>还可配置<code>PasswordAuthentication no</code>使普通用户也无法通过密码登陆并提示需要publickey</p>\n<ol start=\"2\">\n<li>修改ssh服务端口</li>\n</ol>\n<p>编辑<code>/etc/ssh/sshd_config</code>文件，将默认的<code># Port 22</code>修改为<code>Port 20022</code>或其他符合规定的端口<br>修改端口后ssh连接时需要使用<code>-p 20022</code>指定端口<br>使用scp上传文件时也需要在scp命令后紧跟着使用<code>-P 20022</code>指定端口</p>\n<ol start=\"3\">\n<li>ssh连接时使用指定的key进行验证</li>\n</ol>\n<p>ssh客户端在连接服务器时可以使用<code>-i</code>参数使用指定的id_rsa私钥进行连接，需要注意，id_rsa私钥文件权限需为600，也就是仅所有者可读写<br>使用root指定私钥访问20022端口的服务器示例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -i ./myKeys/id_rsa -p 20022 root@192.168.2.254</span><br></pre></td></tr></table></figure>\n\n<p>修改<code>sshd_config</code>文件后需要重启ssh服务，debian通常使用<code>systemctl restart ssh</code>即可</p>"},{"title":"Proxmox-VE 导入SylixOS VMware版","comments":1,"date":"2023-02-28T08:31:43.000Z","keywords":"Proxmox-VE,SylixOS,VMware","_content":"\n将SylixOS传到服务器\n\n解压SylixOS VMware版，找到其中的\n\n```shell\nx86_boot.vmdk\nx86_main.vmdk\n```\n\n<!-- more -->\n\n将这两个文件上传到服务器，使用qemu-img命令将vmdk虚拟机磁盘转为qcow2格式\n\n```shell\nqemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_main.qcow2\nqemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_boot.qcow2\n```\n\n切换到虚拟化服务器web界面，创建新虚拟机\n\n1. 操作系统类型：Linux kernel 2.4，不使用任何光盘介质\n    ![20230224155828](https://img.hackerbs.com/20230224155828.png)\n\n2. 创建IDE硬盘，硬盘大小无所谓\n    ![20230224155929](https://img.hackerbs.com/20230224155929.png)\n\n3. 配置CPU，内核数量根据自己需求而定，类型为host\n   ![20230224160025](https://img.hackerbs.com/20230224160025.png)\n\n4. 修改网络模型，如果网卡不可用，尝试修改为其他模型\n    ![20230224160056](https://img.hackerbs.com/20230224160056.png)\n\n创建虚拟机的步骤完毕，现在连接到服务器的shell，可以使用web shell或另行连接\n\n```shell\n# 进入到虚拟机配置文件目录\ncd /etc/pve/qemu-server/\n\n# 编辑刚刚创建的ID为125的虚拟机所属配置文件\nvim 125.conf\n```\n\n原配置文件如下：\n\n![20230224160513](https://img.hackerbs.com/20230224160513.png)\n\n修改第6行ide0开头的内容如下\n\n```shell\nide0: nfshare:125/x86_boot.qcow2\nide1: nfshare:125/x86_main.qcow2\n\n# 注意！\n# 其中，ide0 ide1务必不要重复，以免冲突\n# 其中，nfshare为我虚拟化服务器所在的存储名称，实际名称以你为准！\n```\n\n修改完毕后，将刚刚转化完毕的两个qcow2文件移动到虚拟机磁盘映像所在目录\n\n**先删除现有的文件**\n\n![20230224160856](https://img.hackerbs.com/20230224160856.png)\n\n随后打开web界面，启动虚拟机即可！","source":"_posts/Proxmox-VE-导入SylixOS-VMware版.md","raw":"---\ntitle: Proxmox-VE 导入SylixOS VMware版\ncomments: true\ndate: 2023-02-28 16:31:43\nkeywords: Proxmox-VE,SylixOS,VMware\ntags:\n    - Proxmox-VE\n    - SylixOS\ncategories: [知识库]\n---\n\n将SylixOS传到服务器\n\n解压SylixOS VMware版，找到其中的\n\n```shell\nx86_boot.vmdk\nx86_main.vmdk\n```\n\n<!-- more -->\n\n将这两个文件上传到服务器，使用qemu-img命令将vmdk虚拟机磁盘转为qcow2格式\n\n```shell\nqemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_main.qcow2\nqemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_boot.qcow2\n```\n\n切换到虚拟化服务器web界面，创建新虚拟机\n\n1. 操作系统类型：Linux kernel 2.4，不使用任何光盘介质\n    ![20230224155828](https://img.hackerbs.com/20230224155828.png)\n\n2. 创建IDE硬盘，硬盘大小无所谓\n    ![20230224155929](https://img.hackerbs.com/20230224155929.png)\n\n3. 配置CPU，内核数量根据自己需求而定，类型为host\n   ![20230224160025](https://img.hackerbs.com/20230224160025.png)\n\n4. 修改网络模型，如果网卡不可用，尝试修改为其他模型\n    ![20230224160056](https://img.hackerbs.com/20230224160056.png)\n\n创建虚拟机的步骤完毕，现在连接到服务器的shell，可以使用web shell或另行连接\n\n```shell\n# 进入到虚拟机配置文件目录\ncd /etc/pve/qemu-server/\n\n# 编辑刚刚创建的ID为125的虚拟机所属配置文件\nvim 125.conf\n```\n\n原配置文件如下：\n\n![20230224160513](https://img.hackerbs.com/20230224160513.png)\n\n修改第6行ide0开头的内容如下\n\n```shell\nide0: nfshare:125/x86_boot.qcow2\nide1: nfshare:125/x86_main.qcow2\n\n# 注意！\n# 其中，ide0 ide1务必不要重复，以免冲突\n# 其中，nfshare为我虚拟化服务器所在的存储名称，实际名称以你为准！\n```\n\n修改完毕后，将刚刚转化完毕的两个qcow2文件移动到虚拟机磁盘映像所在目录\n\n**先删除现有的文件**\n\n![20230224160856](https://img.hackerbs.com/20230224160856.png)\n\n随后打开web界面，启动虚拟机即可！","slug":"Proxmox-VE-导入SylixOS-VMware版","published":1,"updated":"2025-09-04T06:44:07.222Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtr000l9szwffgg3ql3","content":"<p>将SylixOS传到服务器</p>\n<p>解压SylixOS VMware版，找到其中的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x86_boot.vmdk</span><br><span class=\"line\">x86_main.vmdk</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<p>将这两个文件上传到服务器，使用qemu-img命令将vmdk虚拟机磁盘转为qcow2格式</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_main.qcow2</span><br><span class=\"line\">qemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_boot.qcow2</span><br></pre></td></tr></table></figure>\n\n<p>切换到虚拟化服务器web界面，创建新虚拟机</p>\n<ol>\n<li><p>操作系统类型：Linux kernel 2.4，不使用任何光盘介质<br> <img src=\"https://img.hackerbs.com/20230224155828.png\" alt=\"20230224155828\"></p>\n</li>\n<li><p>创建IDE硬盘，硬盘大小无所谓<br> <img src=\"https://img.hackerbs.com/20230224155929.png\" alt=\"20230224155929\"></p>\n</li>\n<li><p>配置CPU，内核数量根据自己需求而定，类型为host<br><img src=\"https://img.hackerbs.com/20230224160025.png\" alt=\"20230224160025\"></p>\n</li>\n<li><p>修改网络模型，如果网卡不可用，尝试修改为其他模型<br> <img src=\"https://img.hackerbs.com/20230224160056.png\" alt=\"20230224160056\"></p>\n</li>\n</ol>\n<p>创建虚拟机的步骤完毕，现在连接到服务器的shell，可以使用web shell或另行连接</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入到虚拟机配置文件目录</span></span><br><span class=\"line\">cd /etc/pve/qemu-server/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑刚刚创建的ID为125的虚拟机所属配置文件</span></span><br><span class=\"line\">vim 125.conf</span><br></pre></td></tr></table></figure>\n\n<p>原配置文件如下：</p>\n<p><img src=\"https://img.hackerbs.com/20230224160513.png\" alt=\"20230224160513\"></p>\n<p>修改第6行ide0开头的内容如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ide0: nfshare:125/x86_boot.qcow2</span><br><span class=\"line\">ide1: nfshare:125/x86_main.qcow2</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注意！</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中，ide0 ide1务必不要重复，以免冲突</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中，nfshare为我虚拟化服务器所在的存储名称，实际名称以你为准！</span></span><br></pre></td></tr></table></figure>\n\n<p>修改完毕后，将刚刚转化完毕的两个qcow2文件移动到虚拟机磁盘映像所在目录</p>\n<p><strong>先删除现有的文件</strong></p>\n<p><img src=\"https://img.hackerbs.com/20230224160856.png\" alt=\"20230224160856\"></p>\n<p>随后打开web界面，启动虚拟机即可！</p>\n","site":{"data":{}},"length":366,"excerpt":"<p>将SylixOS传到服务器</p>\n<p>解压SylixOS VMware版，找到其中的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x86_boot.vmdk</span><br><span class=\"line\">x86_main.vmdk</span><br></pre></td></tr></table></figure>","more":"<p>将这两个文件上传到服务器，使用qemu-img命令将vmdk虚拟机磁盘转为qcow2格式</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_main.qcow2</span><br><span class=\"line\">qemu-img convert -f vmdk -O qcow2 x86_boot.vmdk x86_boot.qcow2</span><br></pre></td></tr></table></figure>\n\n<p>切换到虚拟化服务器web界面，创建新虚拟机</p>\n<ol>\n<li><p>操作系统类型：Linux kernel 2.4，不使用任何光盘介质<br> <img src=\"https://img.hackerbs.com/20230224155828.png\" alt=\"20230224155828\"></p>\n</li>\n<li><p>创建IDE硬盘，硬盘大小无所谓<br> <img src=\"https://img.hackerbs.com/20230224155929.png\" alt=\"20230224155929\"></p>\n</li>\n<li><p>配置CPU，内核数量根据自己需求而定，类型为host<br><img src=\"https://img.hackerbs.com/20230224160025.png\" alt=\"20230224160025\"></p>\n</li>\n<li><p>修改网络模型，如果网卡不可用，尝试修改为其他模型<br> <img src=\"https://img.hackerbs.com/20230224160056.png\" alt=\"20230224160056\"></p>\n</li>\n</ol>\n<p>创建虚拟机的步骤完毕，现在连接到服务器的shell，可以使用web shell或另行连接</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入到虚拟机配置文件目录</span></span><br><span class=\"line\">cd /etc/pve/qemu-server/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑刚刚创建的ID为125的虚拟机所属配置文件</span></span><br><span class=\"line\">vim 125.conf</span><br></pre></td></tr></table></figure>\n\n<p>原配置文件如下：</p>\n<p><img src=\"https://img.hackerbs.com/20230224160513.png\" alt=\"20230224160513\"></p>\n<p>修改第6行ide0开头的内容如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ide0: nfshare:125/x86_boot.qcow2</span><br><span class=\"line\">ide1: nfshare:125/x86_main.qcow2</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注意！</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中，ide0 ide1务必不要重复，以免冲突</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中，nfshare为我虚拟化服务器所在的存储名称，实际名称以你为准！</span></span><br></pre></td></tr></table></figure>\n\n<p>修改完毕后，将刚刚转化完毕的两个qcow2文件移动到虚拟机磁盘映像所在目录</p>\n<p><strong>先删除现有的文件</strong></p>\n<p><img src=\"https://img.hackerbs.com/20230224160856.png\" alt=\"20230224160856\"></p>\n<p>随后打开web界面，启动虚拟机即可！</p>"},{"title":"apt等各种源列表（持续更新）","comments":1,"date":"2024-01-28T11:12:01.000Z","keywords":"apt源","_content":"\n# 操作系统源\n\n**使用源时务必注意版本**\n\n若你的系统不是最新版，可以使用*snullp*大佬开发的[配置生成器](https://mirrors.ustc.edu.cn/repogen/)\n\n## 清华debian apt源（最新debian12 bookworm版）\n\n如需使用中科大源，将tuna.tsinghua替换为ustc即可，其他源同理\n\n```shell\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\n```\n\n<!-- more -->\n\n## 清华ubuntu apt源（最新ubuntu24.04 noble源）\n\n```shell\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse\n\n## Not recommended\n# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse\n```\n\n## 清华docker ce源加速手动安装docker\n\n**因为`docker.com`已经上不去了，所以之前写的用脚本自动安装的方式作废**\n\n直接参照官方安装文档，只需要将官方文档中的`download.docker.com`替换成`mirrors.tuna.tsinghua.edu.cn/docker-ce`即可\n\n*补(tu)充(cao)：整个`*.docker.com`都被墙了，我真服了，这里只写一下在`debian`手动安装docker的教程，别问我为啥不用centos，centos早废了，debian万岁，debian天下第一，linux老祖宗，YYDS*\n\n```shell\n# 直接复制运行该命令，卸载所有冲突的软件包\nfor pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done\n\n# 首次安装需要设置apt存储库\n# 先刷新下apt源\nsudo apt update\n# 设置GPG key\nsudo apt install -f ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n# 将仓库添加到apt源\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt update\n\n# 安装docker\napt install -f docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n# 软件源\n\n## 中科大docker hub源\n\n**国内所有docker hub都GG了，官方hub也GG了，参照本站[国内docker hub无法使用的解决办法](https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html)文章处理**\n\n```shell\nvim /etc/docker/daemon.json\n\n# 添加以下内容\n{\n  \"registry-mirrors\": [\"https://docker.mirrors.tuna.tsinghua.edu.cn/\"]\n}\n\n# 用root用户或具有sudo权限的用户加sudo后运行\n# 重启docker\nsystemctl restart docker\n```\n\n## 中科大npm源（反代的https://registry.npmjs.org/）\n\n```shell\n# 编辑~/.npmrc\nregistry=https://npmreg.proxy.ustclug.org/\n\n# 临时使用中科大源安装软件包\nnpm --registry https://npmreg.proxy.ustclug.org/ install 包名\n```\n\n## ~~清华大学PyPI源~~阿里云PyPI源\n\n中科大PyPI源公告：\n由于 PyPI 源日益增长的空间与 mirror 磁盘空间非常有限的矛盾和用户报告的 PyPI 源的诸多问题，以及考虑到 PyPI 源的资源占用对其他镜像服务质量的影响，我们暂时移除了对 PyPI 的本地镜像。即日起至新的 PyPI 源镜像方案实施前，本站 PyPI 源的 HTTP 协议访问将重定向到 TUNA PyPI 源；PyPI 源的 RSYNC 同步方式停止提供。\n\n```shell\n# 临时使用\npip install -i https://mirrors.aliyun.com/pypi/simple/ package\n\n# 使用清华镜像站来升级 pip\npip install -i https://mirrors.aliyun.com/pypi/simple/ pip -U\npip config set global.index-url https://mirrors.aliyun.com/pypi/simple/\n```\n\n## 中科大Qt镜像\n\n[从中科大镜像下载Qt在线安装器](https://mirrors.ustc.edu.cn/qtproject/official_releases/online_installers/)\n\n使用以下两种方式之一在安装器中配置使用科大源下载 Qt：\n\n1. （推荐）新版本的安装器（4.0.1-1 后）支持 --mirror 命令行参数。在命令行中执行安装器，添加 --mirror https://mirrors.ustc.edu.cn/qtproject 参数。例如 Windows 下执行当前目录的安装器的命令为 .\\qt-unified-windows-x86-online.exe --mirror https://mirrors.ustc.edu.cn/qtproject；\n\n2. 或在启动安装器后在设置中禁用默认源，添加新源 http://mirrors.ustc.edu.cn/qtproject/online/qtsdkrepository/linux_x64/root/qt/ （其他版本注意更改地址）。\n\n## github release镜像（仅部分仓库）\n\n[清华大学](https://mirrors.tuna.tsinghua.edu.cn/github-release/)\n\n[中科大](https://mirrors.ustc.edu.cn/github-release/)","source":"_posts/apt等各种源列表（持续更新）.md","raw":"---\ntitle: apt等各种源列表（持续更新）\ncategories: [知识库]\ncomments: true\ndate: 2024-01-28 19:12:01\nkeywords: apt源\ntags:\n    - apt源\n    - docker源\n---\n\n# 操作系统源\n\n**使用源时务必注意版本**\n\n若你的系统不是最新版，可以使用*snullp*大佬开发的[配置生成器](https://mirrors.ustc.edu.cn/repogen/)\n\n## 清华debian apt源（最新debian12 bookworm版）\n\n如需使用中科大源，将tuna.tsinghua替换为ustc即可，其他源同理\n\n```shell\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\n```\n\n<!-- more -->\n\n## 清华ubuntu apt源（最新ubuntu24.04 noble源）\n\n```shell\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse\n\n## Not recommended\n# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse\n```\n\n## 清华docker ce源加速手动安装docker\n\n**因为`docker.com`已经上不去了，所以之前写的用脚本自动安装的方式作废**\n\n直接参照官方安装文档，只需要将官方文档中的`download.docker.com`替换成`mirrors.tuna.tsinghua.edu.cn/docker-ce`即可\n\n*补(tu)充(cao)：整个`*.docker.com`都被墙了，我真服了，这里只写一下在`debian`手动安装docker的教程，别问我为啥不用centos，centos早废了，debian万岁，debian天下第一，linux老祖宗，YYDS*\n\n```shell\n# 直接复制运行该命令，卸载所有冲突的软件包\nfor pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done\n\n# 首次安装需要设置apt存储库\n# 先刷新下apt源\nsudo apt update\n# 设置GPG key\nsudo apt install -f ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n# 将仓库添加到apt源\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt update\n\n# 安装docker\napt install -f docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n# 软件源\n\n## 中科大docker hub源\n\n**国内所有docker hub都GG了，官方hub也GG了，参照本站[国内docker hub无法使用的解决办法](https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html)文章处理**\n\n```shell\nvim /etc/docker/daemon.json\n\n# 添加以下内容\n{\n  \"registry-mirrors\": [\"https://docker.mirrors.tuna.tsinghua.edu.cn/\"]\n}\n\n# 用root用户或具有sudo权限的用户加sudo后运行\n# 重启docker\nsystemctl restart docker\n```\n\n## 中科大npm源（反代的https://registry.npmjs.org/）\n\n```shell\n# 编辑~/.npmrc\nregistry=https://npmreg.proxy.ustclug.org/\n\n# 临时使用中科大源安装软件包\nnpm --registry https://npmreg.proxy.ustclug.org/ install 包名\n```\n\n## ~~清华大学PyPI源~~阿里云PyPI源\n\n中科大PyPI源公告：\n由于 PyPI 源日益增长的空间与 mirror 磁盘空间非常有限的矛盾和用户报告的 PyPI 源的诸多问题，以及考虑到 PyPI 源的资源占用对其他镜像服务质量的影响，我们暂时移除了对 PyPI 的本地镜像。即日起至新的 PyPI 源镜像方案实施前，本站 PyPI 源的 HTTP 协议访问将重定向到 TUNA PyPI 源；PyPI 源的 RSYNC 同步方式停止提供。\n\n```shell\n# 临时使用\npip install -i https://mirrors.aliyun.com/pypi/simple/ package\n\n# 使用清华镜像站来升级 pip\npip install -i https://mirrors.aliyun.com/pypi/simple/ pip -U\npip config set global.index-url https://mirrors.aliyun.com/pypi/simple/\n```\n\n## 中科大Qt镜像\n\n[从中科大镜像下载Qt在线安装器](https://mirrors.ustc.edu.cn/qtproject/official_releases/online_installers/)\n\n使用以下两种方式之一在安装器中配置使用科大源下载 Qt：\n\n1. （推荐）新版本的安装器（4.0.1-1 后）支持 --mirror 命令行参数。在命令行中执行安装器，添加 --mirror https://mirrors.ustc.edu.cn/qtproject 参数。例如 Windows 下执行当前目录的安装器的命令为 .\\qt-unified-windows-x86-online.exe --mirror https://mirrors.ustc.edu.cn/qtproject；\n\n2. 或在启动安装器后在设置中禁用默认源，添加新源 http://mirrors.ustc.edu.cn/qtproject/online/qtsdkrepository/linux_x64/root/qt/ （其他版本注意更改地址）。\n\n## github release镜像（仅部分仓库）\n\n[清华大学](https://mirrors.tuna.tsinghua.edu.cn/github-release/)\n\n[中科大](https://mirrors.ustc.edu.cn/github-release/)","slug":"apt等各种源列表（持续更新）","published":1,"updated":"2025-09-04T06:44:07.223Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtr000n9szw7wkod0p4","content":"<h1 id=\"操作系统源\"><a href=\"#操作系统源\" class=\"headerlink\" title=\"操作系统源\"></a>操作系统源</h1><p><strong>使用源时务必注意版本</strong></p>\n<p>若你的系统不是最新版，可以使用<em>snullp</em>大佬开发的<a href=\"https://mirrors.ustc.edu.cn/repogen/\">配置生成器</a></p>\n<h2 id=\"清华debian-apt源（最新debian12-bookworm版）\"><a href=\"#清华debian-apt源（最新debian12-bookworm版）\" class=\"headerlink\" title=\"清华debian apt源（最新debian12 bookworm版）\"></a>清华debian apt源（最新debian12 bookworm版）</h2><p>如需使用中科大源，将tuna.tsinghua替换为ustc即可，其他源同理</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<h2 id=\"清华ubuntu-apt源（最新ubuntu24-04-noble源）\"><a href=\"#清华ubuntu-apt源（最新ubuntu24-04-noble源）\" class=\"headerlink\" title=\"清华ubuntu apt源（最新ubuntu24.04 noble源）\"></a>清华ubuntu apt源（最新ubuntu24.04 noble源）</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># Not recommended</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"清华docker-ce源加速手动安装docker\"><a href=\"#清华docker-ce源加速手动安装docker\" class=\"headerlink\" title=\"清华docker ce源加速手动安装docker\"></a>清华docker ce源加速手动安装docker</h2><p><strong>因为<code>docker.com</code>已经上不去了，所以之前写的用脚本自动安装的方式作废</strong></p>\n<p>直接参照官方安装文档，只需要将官方文档中的<code>download.docker.com</code>替换成<code>mirrors.tuna.tsinghua.edu.cn/docker-ce</code>即可</p>\n<p><em>补(tu)充(cao)：整个<code>*.docker.com</code>都被墙了，我真服了，这里只写一下在<code>debian</code>手动安装docker的教程，别问我为啥不用centos，centos早废了，debian万岁，debian天下第一，linux老祖宗，YYDS</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">直接复制运行该命令，卸载所有冲突的软件包</span></span><br><span class=\"line\">for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">首次安装需要设置apt存储库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">先刷新下apt源</span></span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置GPG key</span></span><br><span class=\"line\">sudo apt install -f ca-certificates curl</span><br><span class=\"line\">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class=\"line\">sudo curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class=\"line\">sudo chmod a+r /etc/apt/keyrings/docker.asc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将仓库添加到apt源</span></span><br><span class=\"line\">echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian $(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装docker</span></span><br><span class=\"line\">apt install -f docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"软件源\"><a href=\"#软件源\" class=\"headerlink\" title=\"软件源\"></a>软件源</h1><h2 id=\"中科大docker-hub源\"><a href=\"#中科大docker-hub源\" class=\"headerlink\" title=\"中科大docker hub源\"></a>中科大docker hub源</h2><p><strong>国内所有docker hub都GG了，官方hub也GG了，参照本站<a href=\"https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html\">国内docker hub无法使用的解决办法</a>文章处理</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加以下内容</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.tuna.tsinghua.edu.cn/&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">用root用户或具有sudo权限的用户加sudo后运行</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启docker</span></span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"中科大npm源（反代的https-registry-npmjs-org-）\"><a href=\"#中科大npm源（反代的https-registry-npmjs-org-）\" class=\"headerlink\" title=\"中科大npm源（反代的https://registry.npmjs.org/）\"></a>中科大npm源（反代的<a href=\"https://registry.npmjs.org/%EF%BC%89\">https://registry.npmjs.org/）</a></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑~/.npmrc</span></span><br><span class=\"line\">registry=https://npmreg.proxy.ustclug.org/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">临时使用中科大源安装软件包</span></span><br><span class=\"line\">npm --registry https://npmreg.proxy.ustclug.org/ install 包名</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"清华大学PyPI源阿里云PyPI源\"><a href=\"#清华大学PyPI源阿里云PyPI源\" class=\"headerlink\" title=\"清华大学PyPI源阿里云PyPI源\"></a><del>清华大学PyPI源</del>阿里云PyPI源</h2><p>中科大PyPI源公告：<br>由于 PyPI 源日益增长的空间与 mirror 磁盘空间非常有限的矛盾和用户报告的 PyPI 源的诸多问题，以及考虑到 PyPI 源的资源占用对其他镜像服务质量的影响，我们暂时移除了对 PyPI 的本地镜像。即日起至新的 PyPI 源镜像方案实施前，本站 PyPI 源的 HTTP 协议访问将重定向到 TUNA PyPI 源；PyPI 源的 RSYNC 同步方式停止提供。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">临时使用</span></span><br><span class=\"line\">pip install -i https://mirrors.aliyun.com/pypi/simple/ package</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用清华镜像站来升级 pip</span></span><br><span class=\"line\">pip install -i https://mirrors.aliyun.com/pypi/simple/ pip -U</span><br><span class=\"line\">pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"中科大Qt镜像\"><a href=\"#中科大Qt镜像\" class=\"headerlink\" title=\"中科大Qt镜像\"></a>中科大Qt镜像</h2><p><a href=\"https://mirrors.ustc.edu.cn/qtproject/official_releases/online_installers/\">从中科大镜像下载Qt在线安装器</a></p>\n<p>使用以下两种方式之一在安装器中配置使用科大源下载 Qt：</p>\n<ol>\n<li><p>（推荐）新版本的安装器（4.0.1-1 后）支持 –mirror 命令行参数。在命令行中执行安装器，添加 –mirror <a href=\"https://mirrors.ustc.edu.cn/qtproject\">https://mirrors.ustc.edu.cn/qtproject</a> 参数。例如 Windows 下执行当前目录的安装器的命令为 .\\qt-unified-windows-x86-online.exe –mirror <a href=\"https://mirrors.ustc.edu.cn/qtproject%EF%BC%9B\">https://mirrors.ustc.edu.cn/qtproject；</a></p>\n</li>\n<li><p>或在启动安装器后在设置中禁用默认源，添加新源 <a href=\"http://mirrors.ustc.edu.cn/qtproject/online/qtsdkrepository/linux_x64/root/qt/\">http://mirrors.ustc.edu.cn/qtproject/online/qtsdkrepository/linux_x64/root/qt/</a> （其他版本注意更改地址）。</p>\n</li>\n</ol>\n<h2 id=\"github-release镜像（仅部分仓库）\"><a href=\"#github-release镜像（仅部分仓库）\" class=\"headerlink\" title=\"github release镜像（仅部分仓库）\"></a>github release镜像（仅部分仓库）</h2><p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/github-release/\">清华大学</a></p>\n<p><a href=\"https://mirrors.ustc.edu.cn/github-release/\">中科大</a></p>\n","site":{"data":{}},"length":1052,"excerpt":"<h1 id=\"操作系统源\"><a href=\"#操作系统源\" class=\"headerlink\" title=\"操作系统源\"></a>操作系统源</h1><p><strong>使用源时务必注意版本</strong></p>\n<p>若你的系统不是最新版，可以使用<em>snullp</em>大佬开发的<a href=\"https://mirrors.ustc.edu.cn/repogen/\">配置生成器</a></p>\n<h2 id=\"清华debian-apt源（最新debian12-bookworm版）\"><a href=\"#清华debian-apt源（最新debian12-bookworm版）\" class=\"headerlink\" title=\"清华debian apt源（最新debian12 bookworm版）\"></a>清华debian apt源（最新debian12 bookworm版）</h2><p>如需使用中科大源，将tuna.tsinghua替换为ustc即可，其他源同理</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"清华ubuntu-apt源（最新ubuntu24-04-noble源）\"><a href=\"#清华ubuntu-apt源（最新ubuntu24-04-noble源）\" class=\"headerlink\" title=\"清华ubuntu apt源（最新ubuntu24.04 noble源）\"></a>清华ubuntu apt源（最新ubuntu24.04 noble源）</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-security main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># Not recommended</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"清华docker-ce源加速手动安装docker\"><a href=\"#清华docker-ce源加速手动安装docker\" class=\"headerlink\" title=\"清华docker ce源加速手动安装docker\"></a>清华docker ce源加速手动安装docker</h2><p><strong>因为<code>docker.com</code>已经上不去了，所以之前写的用脚本自动安装的方式作废</strong></p>\n<p>直接参照官方安装文档，只需要将官方文档中的<code>download.docker.com</code>替换成<code>mirrors.tuna.tsinghua.edu.cn/docker-ce</code>即可</p>\n<p><em>补(tu)充(cao)：整个<code>*.docker.com</code>都被墙了，我真服了，这里只写一下在<code>debian</code>手动安装docker的教程，别问我为啥不用centos，centos早废了，debian万岁，debian天下第一，linux老祖宗，YYDS</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">直接复制运行该命令，卸载所有冲突的软件包</span></span><br><span class=\"line\">for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">首次安装需要设置apt存储库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">先刷新下apt源</span></span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置GPG key</span></span><br><span class=\"line\">sudo apt install -f ca-certificates curl</span><br><span class=\"line\">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class=\"line\">sudo curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class=\"line\">sudo chmod a+r /etc/apt/keyrings/docker.asc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将仓库添加到apt源</span></span><br><span class=\"line\">echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian $(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装docker</span></span><br><span class=\"line\">apt install -f docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"软件源\"><a href=\"#软件源\" class=\"headerlink\" title=\"软件源\"></a>软件源</h1><h2 id=\"中科大docker-hub源\"><a href=\"#中科大docker-hub源\" class=\"headerlink\" title=\"中科大docker hub源\"></a>中科大docker hub源</h2><p><strong>国内所有docker hub都GG了，官方hub也GG了，参照本站<a href=\"https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html\">国内docker hub无法使用的解决办法</a>文章处理</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加以下内容</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.tuna.tsinghua.edu.cn/&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">用root用户或具有sudo权限的用户加sudo后运行</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启docker</span></span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"中科大npm源（反代的https-registry-npmjs-org-）\"><a href=\"#中科大npm源（反代的https-registry-npmjs-org-）\" class=\"headerlink\" title=\"中科大npm源（反代的https://registry.npmjs.org/）\"></a>中科大npm源（反代的<a href=\"https://registry.npmjs.org/%EF%BC%89\">https://registry.npmjs.org/）</a></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑~/.npmrc</span></span><br><span class=\"line\">registry=https://npmreg.proxy.ustclug.org/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">临时使用中科大源安装软件包</span></span><br><span class=\"line\">npm --registry https://npmreg.proxy.ustclug.org/ install 包名</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"清华大学PyPI源阿里云PyPI源\"><a href=\"#清华大学PyPI源阿里云PyPI源\" class=\"headerlink\" title=\"清华大学PyPI源阿里云PyPI源\"></a><del>清华大学PyPI源</del>阿里云PyPI源</h2><p>中科大PyPI源公告：<br>由于 PyPI 源日益增长的空间与 mirror 磁盘空间非常有限的矛盾和用户报告的 PyPI 源的诸多问题，以及考虑到 PyPI 源的资源占用对其他镜像服务质量的影响，我们暂时移除了对 PyPI 的本地镜像。即日起至新的 PyPI 源镜像方案实施前，本站 PyPI 源的 HTTP 协议访问将重定向到 TUNA PyPI 源；PyPI 源的 RSYNC 同步方式停止提供。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">临时使用</span></span><br><span class=\"line\">pip install -i https://mirrors.aliyun.com/pypi/simple/ package</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用清华镜像站来升级 pip</span></span><br><span class=\"line\">pip install -i https://mirrors.aliyun.com/pypi/simple/ pip -U</span><br><span class=\"line\">pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"中科大Qt镜像\"><a href=\"#中科大Qt镜像\" class=\"headerlink\" title=\"中科大Qt镜像\"></a>中科大Qt镜像</h2><p><a href=\"https://mirrors.ustc.edu.cn/qtproject/official_releases/online_installers/\">从中科大镜像下载Qt在线安装器</a></p>\n<p>使用以下两种方式之一在安装器中配置使用科大源下载 Qt：</p>\n<ol>\n<li><p>（推荐）新版本的安装器（4.0.1-1 后）支持 –mirror 命令行参数。在命令行中执行安装器，添加 –mirror <a href=\"https://mirrors.ustc.edu.cn/qtproject\">https://mirrors.ustc.edu.cn/qtproject</a> 参数。例如 Windows 下执行当前目录的安装器的命令为 .\\qt-unified-windows-x86-online.exe –mirror <a href=\"https://mirrors.ustc.edu.cn/qtproject%EF%BC%9B\">https://mirrors.ustc.edu.cn/qtproject；</a></p>\n</li>\n<li><p>或在启动安装器后在设置中禁用默认源，添加新源 <a href=\"http://mirrors.ustc.edu.cn/qtproject/online/qtsdkrepository/linux_x64/root/qt/\">http://mirrors.ustc.edu.cn/qtproject/online/qtsdkrepository/linux_x64/root/qt/</a> （其他版本注意更改地址）。</p>\n</li>\n</ol>\n<h2 id=\"github-release镜像（仅部分仓库）\"><a href=\"#github-release镜像（仅部分仓库）\" class=\"headerlink\" title=\"github release镜像（仅部分仓库）\"></a>github release镜像（仅部分仓库）</h2><p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/github-release/\">清华大学</a></p>\n<p><a href=\"https://mirrors.ustc.edu.cn/github-release/\">中科大</a></p>"},{"title":"Python实现自动将GFWList规则转换为Clash规则","comments":1,"date":"2025-03-05T06:50:15.000Z","keywords":["Python","Clash","代理","GFWList","GEO","分流"],"_content":"\n## 环境介绍\n\n### 代理客户端为Clash Verge Rev\n\n[直达官方github仓库](https://github.com/clash-verge-rev/clash-verge-rev)\n\n### 机场为狗狗加速\n\n[直达官网](https://down.dginv.click/#/register?code=pGwFvdKk)\n\n使用邀请码享注册优惠`pGwFvdKk`\n\n- 高性能海外机场，免费试用，优惠套餐，解锁流媒体，全球首家支持 Hysteria 协议。\n\n- 海外团队，无跑路风险，高达 50% 返佣\n\n- 集群负载均衡设计，高速专线(兼容老客户端)，极低延迟，无视晚高峰，4K 秒开\n\n- 全球首家 Hysteria 协议机场，现已上线更快的 Hysteria2 协议(Clash Verge 客户端最佳搭配)\n\n- 解锁流媒体及 ChatGPT\n\n|套餐|流量|详情|\n|---|---|---|\n|标准套餐|160G|限速150M，无审计，年付9折|\n|高级套餐|200G|不限速，无审计，年付8折,最新Hysteria协议|\n|豪华套餐|500G|不限速,无审计,2年付6折,最新Hysteria2协议,东南亚节点,微信客服技术支持|\n\n### 开发环境\n\nPython 3.13.2\n\n<!-- more -->\n\n## Clash配置文件的介绍\n\n### 其余部分不做介绍,采用机场的配置即可\n\n本文只涉及`rules:`部分,其余部分直接复制下方从狗狗加速官方提取的配置即可\n\n`proxies`和`proxy-groups`部分不需要填写,让机场的配置文件覆盖即可,当然下面部分的配置也可以留空,让机场覆盖,只填写`rules:`部分就可以实现分流\n\n在编辑配置文件之前,先订阅,然后查看当前配置就可以看到机场的`rules:`,可以先将其备份,添加到GFWList的规则之前,也就是程序中的最高优先级规则部分\n\n![20250305152944](https://img.hackerbs.com//20250305152944.png)\n\n```yaml\nmode: rule\nmixed-port: 7897\nallow-lan: false\nlog-level: info\nexternal-controller: 127.0.0.1:9097\nsecret: ''\nunified-delay: true\ntun:\n  mtu: 1500\n  auto-detect-interface: true\n  auto-route: true\n  device: Mihomo\n  dns-hijack:\n  - any:53\n  stack: mixed\n  strict-route: false\n  enable: true\ndns:\n  enable: true\n  use-system-hosts: false\n  listen: 127.0.0.1:5335\n  default-nameserver:\n  - 180.76.76.76\n  - 182.254.118.118\n  - 8.8.8.8\n  - 180.184.2.2\n  enhanced-mode: fake-ip\n  fake-ip-range: 198.18.0.1/16\n  fake-ip-filter:\n  - '*.lan'\n  - stun.*.*.*\n  - stun.*.*\n  - time.windows.com\n  - time.nist.gov\n  - time.apple.com\n  - time.asia.apple.com\n  - '*.ntp.org.cn'\n  - '*.openwrt.pool.ntp.org'\n  - time1.cloud.tencent.com\n  - time.ustc.edu.cn\n  - pool.ntp.org\n  - ntp.ubuntu.com\n  - ntp.aliyun.com\n  - ntp1.aliyun.com\n  - ntp2.aliyun.com\n  - ntp3.aliyun.com\n  - ntp4.aliyun.com\n  - ntp5.aliyun.com\n  - ntp6.aliyun.com\n  - ntp7.aliyun.com\n  - time1.aliyun.com\n  - time2.aliyun.com\n  - time3.aliyun.com\n  - time4.aliyun.com\n  - time5.aliyun.com\n  - time6.aliyun.com\n  - time7.aliyun.com\n  - '*.time.edu.cn'\n  - time1.apple.com\n  - time2.apple.com\n  - time3.apple.com\n  - time4.apple.com\n  - time5.apple.com\n  - time6.apple.com\n  - time7.apple.com\n  - time1.google.com\n  - time2.google.com\n  - time3.google.com\n  - time4.google.com\n  - music.163.com\n  - '*.music.163.com'\n  - '*.126.net'\n  - musicapi.taihe.com\n  - music.taihe.com\n  - songsearch.kugou.com\n  - trackercdn.kugou.com\n  - '*.kuwo.cn'\n  - api-jooxtt.sanook.com\n  - api.joox.com\n  - joox.com\n  - y.qq.com\n  - '*.y.qq.com'\n  - streamoc.music.tc.qq.com\n  - mobileoc.music.tc.qq.com\n  - isure.stream.qqmusic.qq.com\n  - dl.stream.qqmusic.qq.com\n  - aqqmusic.tc.qq.com\n  - amobile.music.tc.qq.com\n  - '*.xiami.com'\n  - '*.music.migu.cn'\n  - music.migu.cn\n  - '*.msftconnecttest.com'\n  - '*.msftncsi.com'\n  - localhost.ptlogin2.qq.com\n  - '*.*.*.srv.nintendo.net'\n  - '*.*.stun.playstation.net'\n  - xbox.*.*.microsoft.com\n  - '*.ipv6.microsoft.com'\n  - '*.*.xboxlive.com'\n  - speedtest.cros.wr.pvp.net\n  nameserver:\n  - 180.76.76.76\n  - 119.29.29.29\n  - 180.184.1.1\n  - 223.5.5.5\n  - 8.8.8.8\n  - https://223.6.6.6/dns-query#h3=true\n  - https://223.5.5.5/dns-query\n  - https://cloudflare-dns.com/dns-query\n  - https://doh.pub/dns-query\n  fallback:\n  - https://000000.dns.nextdns.io/dns-query#h3=true\n  - https://101.101.101.101/dns-query\n  - https://208.67.220.220/dns-query\n  - tls://8.8.4.4\n  - tls://1.0.0.1:853\n  - https://cloudflare-dns.com/dns-query\n  - https://dns.google/dns-query\n  fallback-filter:\n    geoip: true\n    ipcidr:\n    - 240.0.0.0/4\n    - 0.0.0.0/32\n    - 127.0.0.1/32\n    domain:\n    - +.google.com\n    - +.facebook.com\n    - +.twitter.com\n    - +.youtube.com\n    - +.xn--ngstr-lra8j.com\n    - +.google.cn\n    - +.googleapis.cn\n    - +.googleapis.com\n    - +.gvt1.com\n  ipv6: false\nexternal-controller-cors:\n  allow-private-network: true\n  allow-origins:\n  - '*'\n\nprofile:\n  store-selected: true\n```\n\n### rules部分\n\n规则参数:\n\nDOMAIN - 匹配完整域名,不包含子域名.例如:- DOMAIN,example.com,DIRECT\n\nDOMAIN-SUFFIX - 匹配域名后缀,可以匹配子域名.例如:- DOMAIN-SUFFIX,example.com,PROXY\n\nDOMAIN-KEYWORD - 匹配域名中包含的关键字,不限定位置.例如:- DOMAIN-KEYWORD,google,PROXY\n\nPROCESS-NAME(仅 Clash for Windows / Clash Meta 支持) - 匹配进程名,仅适用于 TUN 模式.例如:- PROCESS-NAME,chrome.exe,PROXY\n\nIP-CIDR - 匹配IPv4 地址段,可以带 no-resolve 以防止 Clash 进行 DNS 解析.例如:- IP-CIDR,192.168.1.0/24,DIRECT\n如果不想 Clash 解析 IP 地址对应的域名,可以加 no-resolve:- IP-CIDR,192.168.1.0/24,DIRECT,no-resolve\n\nIP-CIDR6 - 匹配IPv6 地址段,用法与 IP-CIDR 类似.例如:- IP-CIDR6,2400:3200::/32,DIRECT\n\nGEOIP - 匹配IP 地址归属地(基于 GeoIP 数据库).例如: - GEOIP,CN,DIRECT\n如果要让 Clash 不解析域名,可以加 no-resolve:- GEOIP,CN,DIRECT,no-resolve\n\nMATCH - 匹配所有流量,通常作为最后的兜底规则.例如:- MATCH,PROXY\n\n其中的`DIRECT`为直连,`PROXY`为你的`proxy-groups`的`name`部分,例如狗狗加速的`name: 狗狗加速.com`和`name: 🔥ChatGPT`\n\n```yaml\n# 以狗狗加速机场的代理组\"🔥ChatGPT\"为例\n- DOMAIN-KEYWORD,openai,🔥ChatGPT\n```\n\nClash 按规则的先后顺序进行匹配，第一个匹配成功的规则生效，后面的规则不会再被执行。因此，一般规则顺序建议：\n\n- PROCESS-NAME 规则\n- DOMAIN 规则\n- DOMAIN-SUFFIX 规则\n- DOMAIN-KEYWORD 规则\n- IP-CIDR / IP-CIDR6 规则\n- GEOIP 规则\n- MATCH 规则（兜底）\n\n## 代码\n\n```python\nimport re\nimport base64\nimport requests\nimport ipaddress\n\n# GFWList 地址\nGFWLIST_URL = \"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\"\n\n# 预置规则 - 来源于上文提到的机场的规则和你自己手动添加的规则\n# 此处预置了狗狗加速机场的规则\nhighest_priority_rules = \"\"\"rules:\n- DOMAIN,subapi.doggysub.uk,DIRECT\n- PROCESS-NAME,v2ray,DIRECT\n- PROCESS-NAME,xray,DIRECT\n- PROCESS-NAME,naive,DIRECT\n- PROCESS-NAME,trojan,DIRECT\n- PROCESS-NAME,trojan-go,DIRECT\n- PROCESS-NAME,ss-local,DIRECT\n- PROCESS-NAME,privoxy,DIRECT\n- PROCESS-NAME,leaf,DIRECT\n- PROCESS-NAME,v2ray.exe,DIRECT\n- PROCESS-NAME,xray.exe,DIRECT\n- PROCESS-NAME,naive.exe,DIRECT\n- PROCESS-NAME,trojan.exe,DIRECT\n- PROCESS-NAME,trojan-go.exe,DIRECT\n- PROCESS-NAME,ss-local.exe,DIRECT\n- PROCESS-NAME,privoxy.exe,DIRECT\n- PROCESS-NAME,leaf.exe,DIRECT\n- PROCESS-NAME,Surge,DIRECT\n- PROCESS-NAME,Surge 2,DIRECT\n- PROCESS-NAME,Surge 3,DIRECT\n- PROCESS-NAME,Surge 4,DIRECT\n- PROCESS-NAME,Surge%202,DIRECT\n- PROCESS-NAME,Surge%203,DIRECT\n- PROCESS-NAME,Surge%204,DIRECT\n- PROCESS-NAME,Thunder,DIRECT\n- PROCESS-NAME,DownloadService,DIRECT\n- PROCESS-NAME,qBittorrent,DIRECT\n- PROCESS-NAME,Transmission,DIRECT\n- PROCESS-NAME,fdm,DIRECT\n- PROCESS-NAME,aria2c,DIRECT\n- PROCESS-NAME,Folx,DIRECT\n- PROCESS-NAME,NetTransport,DIRECT\n- PROCESS-NAME,uTorrent,DIRECT\n- PROCESS-NAME,WebTorrent,DIRECT\n- PROCESS-NAME,aria2c.exe,DIRECT\n- PROCESS-NAME,BitComet.exe,DIRECT\n- PROCESS-NAME,fdm.exe,DIRECT\n- PROCESS-NAME,NetTransport.exe,DIRECT\n- PROCESS-NAME,qbittorrent.exe,DIRECT\n- PROCESS-NAME,Thunder.exe,DIRECT\n- PROCESS-NAME,ThunderVIP.exe,DIRECT\n- PROCESS-NAME,transmission-daemon.exe,DIRECT\n- PROCESS-NAME,transmission-qt.exe,DIRECT\n- PROCESS-NAME,uTorrent.exe,DIRECT\n- PROCESS-NAME,WebTorrent.exe,DIRECT\n- PROCESS-NAME,aDrive.exe,DIRECT\n- DOMAIN-SUFFIX,services.googleapis.cn,狗狗加速.com\n- DOMAIN-SUFFIX,xn--ngstr-lra8j.com,狗狗加速.com\n- DOMAIN,safebrowsing.urlsec.qq.com,DIRECT\n- DOMAIN,safebrowsing.googleapis.com,DIRECT\n- DOMAIN,developer.apple.com,狗狗加速.com\n- DOMAIN-SUFFIX,digicert.com,狗狗加速.com\n- DOMAIN,ocsp.apple.com,狗狗加速.com\n- DOMAIN,ocsp.comodoca.com,狗狗加速.com\n- DOMAIN,ocsp.usertrust.com,狗狗加速.com\n- DOMAIN,ocsp.sectigo.com,狗狗加速.com\n- DOMAIN,ocsp.verisign.net,狗狗加速.com\n- DOMAIN-SUFFIX,apple-dns.net,狗狗加速.com\n- DOMAIN,testflight.apple.com,狗狗加速.com\n- DOMAIN,sandbox.itunes.apple.com,狗狗加速.com\n- DOMAIN,itunes.apple.com,狗狗加速.com\n- DOMAIN-SUFFIX,apps.apple.com,狗狗加速.com\n- DOMAIN-SUFFIX,blobstore.apple.com,狗狗加速.com\n- DOMAIN,cvws.icloud-content.com,狗狗加速.com\n- DOMAIN-SUFFIX,mzstatic.com,DIRECT\n- DOMAIN-SUFFIX,itunes.apple.com,DIRECT\n- DOMAIN-SUFFIX,icloud.com,DIRECT\n- DOMAIN-SUFFIX,icloud-content.com,DIRECT\n- DOMAIN-SUFFIX,me.com,DIRECT\n- DOMAIN-SUFFIX,aaplimg.com,DIRECT\n- DOMAIN-SUFFIX,cdn20.com,DIRECT\n- DOMAIN-SUFFIX,cdn-apple.com,DIRECT\n- DOMAIN-SUFFIX,akadns.net,DIRECT\n- DOMAIN-SUFFIX,akamaiedge.net,DIRECT\n- DOMAIN-SUFFIX,edgekey.net,DIRECT\n- DOMAIN-SUFFIX,mwcloudcdn.com,DIRECT\n- DOMAIN-SUFFIX,mwcname.com,DIRECT\n- DOMAIN-SUFFIX,apple.com,DIRECT\n- DOMAIN-SUFFIX,apple-cloudkit.com,DIRECT\n- DOMAIN-SUFFIX,apple-mapkit.com,DIRECT\n- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT\n- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT\n- DOMAIN,gemini.google.com,🔥ChatGPT\n- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN,openaicom-api-bdcpf8c6d2e9atf6.z01.azurefd.net,🔥ChatGPT\n- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT\n- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT\n- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT\n- DOMAIN-SUFFIX,ai.com,🔥ChatGPT\n- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT\n- DOMAIN-SUFFIX,api.statsig.com,🔥ChatGPT\n- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT\n- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT\n- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT\n- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT\n- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT\n- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT\n- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openai.com,🔥ChatGPT\n- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT\n- DOMAIN-SUFFIX,segment.io,🔥ChatGPT\n- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT\n- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT\n- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,sora.com,🔥ChatGPT\n- DOMAIN-KEYWORD,openai,🔥ChatGPT\n- DOMAIN,api.msn.com,🔥ChatGPT\n- DOMAIN,api.statsig.com,🔥ChatGPT\n- DOMAIN,assets.msn.com,🔥ChatGPT\n- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT\n- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT\n- DOMAIN,copilot.microsoft.com,🔥ChatGPT\n- DOMAIN,gateway.bingviz.microsoft.net,🔥ChatGPT\n- DOMAIN,gateway.bingviz.microsoftapp.net,🔥ChatGPT\n- DOMAIN,in.appcenter.ms,🔥ChatGPT\n- DOMAIN,location.microsoft.com,🔥ChatGPT\n- DOMAIN,odc.officeapps.live.com,🔥ChatGPT\n- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT\n- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT\n- DOMAIN,r.bing.com,🔥ChatGPT\n- DOMAIN,self.events.data.microsoft.com,🔥ChatGPT\n- DOMAIN,services.bingapis.com,🔥ChatGPT\n- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT\n- DOMAIN,sydney.bing.com,🔥ChatGPT\n- DOMAIN,www.bing.com,🔥ChatGPT\n- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT\n- DOMAIN-SUFFIX,api.microsoftapp.net,🔥ChatGPT\n- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT\n- DOMAIN-SUFFIX,bing-shopping.microsoft-falcon.io,🔥ChatGPT\n- DOMAIN-SUFFIX,challenges.cloudflare.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN-SUFFIX,edgeservices.bing.com,🔥ChatGPT\n- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT\n- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT\n- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT\n- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT\n- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT\n- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT\n- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openai.com,🔥ChatGPT\n- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT\n- DOMAIN-SUFFIX,segment.io,🔥ChatGPT\n- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT\n- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT\n- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT\n- DOMAIN-KEYWORD,openaicom-api,🔥ChatGPT\n- DOMAIN,ai.google.dev,🔥ChatGPT\n- DOMAIN,alkalimakersuite-pa.clients6.google.com,🔥ChatGPT\n- DOMAIN,makersuite.google.com,🔥ChatGPT\n- DOMAIN-SUFFIX,bard.google.com,🔥ChatGPT\n- DOMAIN-SUFFIX,deepmind.com,🔥ChatGPT\n- DOMAIN-SUFFIX,deepmind.google,🔥ChatGPT\n- DOMAIN-SUFFIX,gemini.google.com,🔥ChatGPT\n- DOMAIN-SUFFIX,generativeai.google,🔥ChatGPT\n- DOMAIN-SUFFIX,proactivebackend-pa.googleapis.com,🔥ChatGPT\n- DOMAIN-SUFFIX,apis.google.com,🔥ChatGPT\n- DOMAIN-KEYWORD,colab,🔥ChatGPT\n- DOMAIN-KEYWORD,developerprofiles,🔥ChatGPT\n- DOMAIN-KEYWORD,generativelanguage,🔥ChatGPT\n- DOMAIN,cdn.usefathom.com,🔥ChatGPT\n- DOMAIN-SUFFIX,anthropic.com,🔥ChatGPT\n- DOMAIN-SUFFIX,claude.ai,🔥ChatGPT\n- DOMAIN-SUFFIX,razie.ai,🔥ChatGPT\n- DOMAIN-SUFFIX,razie.aws.intellij.net,🔥ChatGPT\n- DOMAIN-SUFFIX,etbrains.ai,🔥ChatGPT\n- DOMAIN-SUFFIX,meta.com,🔥ChatGPT\n- DOMAIN-SUFFIX,cn,DIRECT\n- DOMAIN-KEYWORD,-cn,DIRECT\n- DOMAIN-SUFFIX,126.com,DIRECT\n- DOMAIN-SUFFIX,126.net,DIRECT\n- DOMAIN-SUFFIX,127.net,DIRECT\n- DOMAIN-SUFFIX,163.com,DIRECT\n- DOMAIN-SUFFIX,360buyimg.com,DIRECT\n- DOMAIN-SUFFIX,36kr.com,DIRECT\n- DOMAIN-SUFFIX,acfun.tv,DIRECT\n- DOMAIN-SUFFIX,air-matters.com,DIRECT\n- DOMAIN-SUFFIX,aixifan.com,DIRECT\n- DOMAIN-KEYWORD,alicdn,DIRECT\n- DOMAIN-KEYWORD,alipay,DIRECT\n- DOMAIN-KEYWORD,taobao,DIRECT\n- DOMAIN-SUFFIX,amap.com,DIRECT\n- DOMAIN-SUFFIX,autonavi.com,DIRECT\n- DOMAIN-KEYWORD,baidu,DIRECT\n- DOMAIN-SUFFIX,bdimg.com,DIRECT\n- DOMAIN-SUFFIX,bdstatic.com,DIRECT\n- DOMAIN-SUFFIX,bilibili.com,DIRECT\n- DOMAIN-SUFFIX,bilivideo.com,DIRECT\n- DOMAIN-SUFFIX,caiyunapp.com,DIRECT\n- DOMAIN-SUFFIX,clouddn.com,DIRECT\n- DOMAIN-SUFFIX,cnbeta.com,DIRECT\n- DOMAIN-SUFFIX,cnbetacdn.com,DIRECT\n- DOMAIN-SUFFIX,cootekservice.com,DIRECT\n- DOMAIN-SUFFIX,csdn.net,DIRECT\n- DOMAIN-SUFFIX,ctrip.com,DIRECT\n- DOMAIN-SUFFIX,dgtle.com,DIRECT\n- DOMAIN-SUFFIX,dianping.com,DIRECT\n- DOMAIN-SUFFIX,douban.com,DIRECT\n- DOMAIN-SUFFIX,doubanio.com,DIRECT\n- DOMAIN-SUFFIX,duokan.com,DIRECT\n- DOMAIN-SUFFIX,easou.com,DIRECT\n- DOMAIN-SUFFIX,ele.me,DIRECT\n- DOMAIN-SUFFIX,feng.com,DIRECT\n- DOMAIN-SUFFIX,fir.im,DIRECT\n- DOMAIN-SUFFIX,frdic.com,DIRECT\n- DOMAIN-SUFFIX,g-cores.com,DIRECT\n- DOMAIN-SUFFIX,godic.net,DIRECT\n- DOMAIN-SUFFIX,gtimg.com,DIRECT\n- DOMAIN,cdn.hockeyapp.net,DIRECT\n- DOMAIN-SUFFIX,hongxiu.com,DIRECT\n- DOMAIN-SUFFIX,hxcdn.net,DIRECT\n- DOMAIN-SUFFIX,iciba.com,DIRECT\n- DOMAIN-SUFFIX,ifeng.com,DIRECT\n- DOMAIN-SUFFIX,ifengimg.com,DIRECT\n- DOMAIN-SUFFIX,ipip.net,DIRECT\n- DOMAIN-SUFFIX,iqiyi.com,DIRECT\n- DOMAIN-SUFFIX,jd.com,DIRECT\n- DOMAIN-SUFFIX,jianshu.com,DIRECT\n- DOMAIN-SUFFIX,knewone.com,DIRECT\n- DOMAIN-SUFFIX,le.com,DIRECT\n- DOMAIN-SUFFIX,lecloud.com,DIRECT\n- DOMAIN-SUFFIX,lemicp.com,DIRECT\n- DOMAIN-SUFFIX,luoo.net,DIRECT\n- DOMAIN-SUFFIX,meituan.com,DIRECT\n- DOMAIN-SUFFIX,meituan.net,DIRECT\n- DOMAIN-SUFFIX,mi.com,DIRECT\n- DOMAIN-SUFFIX,miaopai.com,DIRECT\n- DOMAIN-SUFFIX,microsoft.com,DIRECT\n- DOMAIN-SUFFIX,microsoftonline.com,DIRECT\n- DOMAIN-SUFFIX,miui.com,DIRECT\n- DOMAIN-SUFFIX,miwifi.com,DIRECT\n- DOMAIN-SUFFIX,mob.com,DIRECT\n- DOMAIN-SUFFIX,netease.com,DIRECT\n- DOMAIN-SUFFIX,office.com,DIRECT\n- DOMAIN-SUFFIX,office365.com,DIRECT\n- DOMAIN-KEYWORD,officecdn,DIRECT\n- DOMAIN-SUFFIX,oschina.net,DIRECT\n- DOMAIN-SUFFIX,ppsimg.com,DIRECT\n- DOMAIN-SUFFIX,pstatp.com,DIRECT\n- DOMAIN-SUFFIX,qcloud.com,DIRECT\n- DOMAIN-SUFFIX,qdaily.com,DIRECT\n- DOMAIN-SUFFIX,qdmm.com,DIRECT\n- DOMAIN-SUFFIX,qhimg.com,DIRECT\n- DOMAIN-SUFFIX,qhres.com,DIRECT\n- DOMAIN-SUFFIX,qidian.com,DIRECT\n- DOMAIN-SUFFIX,qihucdn.com,DIRECT\n- DOMAIN-SUFFIX,qiniu.com,DIRECT\n- DOMAIN-SUFFIX,qiniucdn.com,DIRECT\n- DOMAIN-SUFFIX,qiyipic.com,DIRECT\n- DOMAIN-SUFFIX,qq.com,DIRECT\n- DOMAIN-SUFFIX,qqurl.com,DIRECT\n- DOMAIN-SUFFIX,rarbg.to,DIRECT\n- DOMAIN-SUFFIX,ruguoapp.com,DIRECT\n- DOMAIN-SUFFIX,segmentfault.com,DIRECT\n- DOMAIN-SUFFIX,sinaapp.com,DIRECT\n- DOMAIN-SUFFIX,smzdm.com,DIRECT\n- DOMAIN-SUFFIX,snapdrop.net,DIRECT\n- DOMAIN-SUFFIX,sogou.com,DIRECT\n- DOMAIN-SUFFIX,sogoucdn.com,DIRECT\n- DOMAIN-SUFFIX,sohu.com,DIRECT\n- DOMAIN-SUFFIX,soku.com,DIRECT\n- DOMAIN-SUFFIX,speedtest.net,DIRECT\n- DOMAIN-SUFFIX,sspai.com,DIRECT\n- DOMAIN-SUFFIX,suning.com,DIRECT\n- DOMAIN-SUFFIX,taobao.com,DIRECT\n- DOMAIN-SUFFIX,tencent.com,DIRECT\n- DOMAIN-SUFFIX,tenpay.com,DIRECT\n- DOMAIN-SUFFIX,tianyancha.com,DIRECT\n- DOMAIN-SUFFIX,tmall.com,DIRECT\n- DOMAIN-SUFFIX,tudou.com,DIRECT\n- DOMAIN-SUFFIX,umetrip.com,DIRECT\n- DOMAIN-SUFFIX,upaiyun.com,DIRECT\n- DOMAIN-SUFFIX,upyun.com,DIRECT\n- DOMAIN-SUFFIX,veryzhun.com,DIRECT\n- DOMAIN-SUFFIX,weather.com,DIRECT\n- DOMAIN-SUFFIX,weibo.com,DIRECT\n- DOMAIN-SUFFIX,xiami.com,DIRECT\n- DOMAIN-SUFFIX,xiami.net,DIRECT\n- DOMAIN-SUFFIX,xiaomicp.com,DIRECT\n- DOMAIN-SUFFIX,ximalaya.com,DIRECT\n- DOMAIN-SUFFIX,xmcdn.com,DIRECT\n- DOMAIN-SUFFIX,xunlei.com,DIRECT\n- DOMAIN-SUFFIX,yhd.com,DIRECT\n- DOMAIN-SUFFIX,yihaodianimg.com,DIRECT\n- DOMAIN-SUFFIX,yinxiang.com,DIRECT\n- DOMAIN-SUFFIX,ykimg.com,DIRECT\n- DOMAIN-SUFFIX,youdao.com,DIRECT\n- DOMAIN-SUFFIX,youku.com,DIRECT\n- DOMAIN-SUFFIX,zealer.com,DIRECT\n- DOMAIN-SUFFIX,zhihu.com,DIRECT\n- DOMAIN-SUFFIX,zhimg.com,DIRECT\n- DOMAIN-SUFFIX,zimuzu.tv,DIRECT\n- DOMAIN-SUFFIX,zoho.com,DIRECT\n- DOMAIN,fastly-download.epicgames.com,DIRECT\n- DOMAIN,epicgames-download1.akamaized.net,DIRECT\n- DOMAIN,steamcdn-a.akamaihd.net,DIRECT\n- DOMAIN-SUFFIX,steamserver.net,DIRECT\n- DOMAIN-SUFFIX,cm.steampowered.com,DIRECT\n- DOMAIN-SUFFIX,synology.com,DIRECT\n- DOMAIN-SUFFIX,dyndns.org,DIRECT\n- DOMAIN-SUFFIX,egdownload.fastly-edge.com,DIRECT\n- DOMAIN-KEYWORD,amazon,狗狗加速.com\n- DOMAIN-KEYWORD,google,狗狗加速.com\n- DOMAIN-KEYWORD,gmail,狗狗加速.com\n- DOMAIN-KEYWORD,youtube,狗狗加速.com\n- DOMAIN-KEYWORD,facebook,狗狗加速.com\n- DOMAIN-SUFFIX,fb.me,狗狗加速.com\n- DOMAIN-SUFFIX,fbcdn.net,狗狗加速.com\n- DOMAIN-KEYWORD,twitter,狗狗加速.com\n- DOMAIN-KEYWORD,instagram,狗狗加速.com\n- DOMAIN-KEYWORD,dropbox,狗狗加速.com\n- DOMAIN-SUFFIX,twimg.com,狗狗加速.com\n- DOMAIN-KEYWORD,blogspot,狗狗加速.com\n- DOMAIN-SUFFIX,youtu.be,狗狗加速.com\n- DOMAIN-KEYWORD,whatsapp,狗狗加速.com\n- DOMAIN-SUFFIX,ipleak.net,狗狗加速.com\n- DOMAIN-SUFFIX,browserscan.net,狗狗加速.com\n- DOMAIN-SUFFIX,surfsharkdns.com,狗狗加速.com\n- DOMAIN-SUFFIX,edns.ip-api.com,狗狗加速.com\n- DOMAIN-SUFFIX,dnsleaktest.com,狗狗加速.com\n- DOMAIN-SUFFIX,dnsleak.com,狗狗加速.com\n- DOMAIN-SUFFIX,expressvpn.com,狗狗加速.com\n- DOMAIN-SUFFIX,nordvpn.com,狗狗加速.com\n- DOMAIN-SUFFIX,surfshark.com,狗狗加速.com\n- DOMAIN-SUFFIX,perfect-privacy.com,狗狗加速.com\n- DOMAIN-SUFFIX,browserleaks.com,狗狗加速.com\n- DOMAIN-SUFFIX,browserleaks.org,狗狗加速.com\n- DOMAIN-SUFFIX,browserleaks.net,狗狗加速.com\n- DOMAIN-SUFFIX,vpnunlimited.com,狗狗加速.com\n- DOMAIN-SUFFIX,whoer.net,狗狗加速.com\n- DOMAIN-SUFFIX,whrq.net,狗狗加速.com\n- DOMAIN-KEYWORD,admarvel,REJECT\n- DOMAIN-KEYWORD,admaster,REJECT\n- DOMAIN-KEYWORD,adsage,REJECT\n- DOMAIN-KEYWORD,adsmogo,REJECT\n- DOMAIN-KEYWORD,adsrvmedia,REJECT\n- DOMAIN-KEYWORD,adwords,REJECT\n- DOMAIN-KEYWORD,adservice,REJECT\n- DOMAIN-SUFFIX,appsflyer.com,REJECT\n- DOMAIN-KEYWORD,domob,REJECT\n- DOMAIN-SUFFIX,doubleclick.net,REJECT\n- DOMAIN-KEYWORD,duomeng,REJECT\n- DOMAIN-KEYWORD,dwtrack,REJECT\n- DOMAIN-KEYWORD,guanggao,REJECT\n- DOMAIN-KEYWORD,lianmeng,REJECT\n- DOMAIN-SUFFIX,mmstat.com,REJECT\n- DOMAIN-KEYWORD,mopub,REJECT\n- DOMAIN-KEYWORD,omgmta,REJECT\n- DOMAIN-KEYWORD,openx,REJECT\n- DOMAIN-KEYWORD,partnerad,REJECT\n- DOMAIN-KEYWORD,pingfore,REJECT\n- DOMAIN-KEYWORD,supersonicads,REJECT\n- DOMAIN-KEYWORD,uedas,REJECT\n- DOMAIN-KEYWORD,umeng,REJECT\n- DOMAIN-KEYWORD,usage,REJECT\n- DOMAIN-SUFFIX,vungle.com,REJECT\n- DOMAIN-KEYWORD,wlmonitor,REJECT\n- DOMAIN-KEYWORD,zjtoolbar,REJECT\n- DOMAIN-SUFFIX,linkedin.com,狗狗加速.com\n- DOMAIN-SUFFIX,licdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,9to5mac.com,狗狗加速.com\n- DOMAIN-SUFFIX,abpchina.org,狗狗加速.com\n- DOMAIN-SUFFIX,adblockplus.org,狗狗加速.com\n- DOMAIN-SUFFIX,adobe.com,狗狗加速.com\n- DOMAIN-SUFFIX,akamaized.net,狗狗加速.com\n- DOMAIN-SUFFIX,alfredapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,amplitude.com,狗狗加速.com\n- DOMAIN-SUFFIX,ampproject.org,狗狗加速.com\n- DOMAIN-SUFFIX,android.com,狗狗加速.com\n- DOMAIN-SUFFIX,angularjs.org,狗狗加速.com\n- DOMAIN-SUFFIX,aolcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,apkpure.com,狗狗加速.com\n- DOMAIN-SUFFIX,appledaily.com,狗狗加速.com\n- DOMAIN-SUFFIX,appshopper.com,狗狗加速.com\n- DOMAIN-SUFFIX,appspot.com,狗狗加速.com\n- DOMAIN-SUFFIX,arcgis.com,狗狗加速.com\n- DOMAIN-SUFFIX,archive.org,狗狗加速.com\n- DOMAIN-SUFFIX,armorgames.com,狗狗加速.com\n- DOMAIN-SUFFIX,aspnetcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,att.com,狗狗加速.com\n- DOMAIN-SUFFIX,awsstatic.com,狗狗加速.com\n- DOMAIN-SUFFIX,azurewebsites.net,狗狗加速.com\n- DOMAIN-SUFFIX,bing.com,狗狗加速.com\n- DOMAIN-SUFFIX,bintray.com,狗狗加速.com\n- DOMAIN-SUFFIX,bit.com,狗狗加速.com\n- DOMAIN-SUFFIX,bit.ly,狗狗加速.com\n- DOMAIN-SUFFIX,bitbucket.org,狗狗加速.com\n- DOMAIN-SUFFIX,bjango.com,狗狗加速.com\n- DOMAIN-SUFFIX,bkrtx.com,狗狗加速.com\n- DOMAIN-SUFFIX,blog.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogger.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogsmithmedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogspot.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogspot.hk,狗狗加速.com\n- DOMAIN-SUFFIX,bloomberg.com,狗狗加速.com\n- DOMAIN-SUFFIX,box.com,狗狗加速.com\n- DOMAIN-SUFFIX,box.net,狗狗加速.com\n- DOMAIN-SUFFIX,cachefly.net,狗狗加速.com\n- DOMAIN-SUFFIX,chromium.org,狗狗加速.com\n- DOMAIN-SUFFIX,cl.ly,狗狗加速.com\n- DOMAIN-SUFFIX,cloudflare.com,狗狗加速.com\n- DOMAIN-SUFFIX,cloudfront.net,狗狗加速.com\n- DOMAIN-SUFFIX,cloudmagic.com,狗狗加速.com\n- DOMAIN-SUFFIX,cmail19.com,狗狗加速.com\n- DOMAIN-SUFFIX,cnet.com,狗狗加速.com\n- DOMAIN-SUFFIX,cocoapods.org,狗狗加速.com\n- DOMAIN-SUFFIX,comodoca.com,狗狗加速.com\n- DOMAIN-SUFFIX,crashlytics.com,狗狗加速.com\n- DOMAIN-SUFFIX,culturedcode.com,狗狗加速.com\n- DOMAIN-SUFFIX,d.pr,狗狗加速.com\n- DOMAIN-SUFFIX,danilo.to,狗狗加速.com\n- DOMAIN-SUFFIX,dayone.me,狗狗加速.com\n- DOMAIN-SUFFIX,db.tt,狗狗加速.com\n- DOMAIN-SUFFIX,deskconnect.com,狗狗加速.com\n- DOMAIN-SUFFIX,disq.us,狗狗加速.com\n- DOMAIN-SUFFIX,disqus.com,狗狗加速.com\n- DOMAIN-SUFFIX,disquscdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,dnsimple.com,狗狗加速.com\n- DOMAIN-SUFFIX,docker.com,狗狗加速.com\n- DOMAIN-SUFFIX,dribbble.com,狗狗加速.com\n- DOMAIN-SUFFIX,droplr.com,狗狗加速.com\n- DOMAIN-SUFFIX,duckduckgo.com,狗狗加速.com\n- DOMAIN-SUFFIX,dueapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,dytt8.net,狗狗加速.com\n- DOMAIN-SUFFIX,edgecastcdn.net,狗狗加速.com\n- DOMAIN-SUFFIX,edgekey.net,狗狗加速.com\n- DOMAIN-SUFFIX,edgesuite.net,狗狗加速.com\n- DOMAIN-SUFFIX,engadget.com,狗狗加速.com\n- DOMAIN-SUFFIX,entrust.net,狗狗加速.com\n- DOMAIN-SUFFIX,eurekavpt.com,狗狗加速.com\n- DOMAIN-SUFFIX,evernote.com,狗狗加速.com\n- DOMAIN-SUFFIX,fabric.io,狗狗加速.com\n- DOMAIN-SUFFIX,fast.com,狗狗加速.com\n- DOMAIN-SUFFIX,fastly.net,狗狗加速.com\n- DOMAIN-SUFFIX,fc2.com,狗狗加速.com\n- DOMAIN-SUFFIX,feedburner.com,狗狗加速.com\n- DOMAIN-SUFFIX,feedly.com,狗狗加速.com\n- DOMAIN-SUFFIX,feedsportal.com,狗狗加速.com\n- DOMAIN-SUFFIX,fiftythree.com,狗狗加速.com\n- DOMAIN-SUFFIX,firebaseio.com,狗狗加速.com\n- DOMAIN-SUFFIX,flexibits.com,狗狗加速.com\n- DOMAIN-SUFFIX,flickr.com,狗狗加速.com\n- DOMAIN-SUFFIX,flipboard.com,狗狗加速.com\n- DOMAIN-SUFFIX,g.co,狗狗加速.com\n- DOMAIN-SUFFIX,gabia.net,狗狗加速.com\n- DOMAIN-SUFFIX,geni.us,狗狗加速.com\n- DOMAIN-SUFFIX,gfx.ms,狗狗加速.com\n- DOMAIN-SUFFIX,ggpht.com,狗狗加速.com\n- DOMAIN-SUFFIX,ghostnoteapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,git.io,狗狗加速.com\n- DOMAIN-KEYWORD,github,狗狗加速.com\n- DOMAIN-SUFFIX,globalsign.com,狗狗加速.com\n- DOMAIN-SUFFIX,gmodules.com,狗狗加速.com\n- DOMAIN-SUFFIX,godaddy.com,狗狗加速.com\n- DOMAIN-SUFFIX,golang.org,狗狗加速.com\n- DOMAIN-SUFFIX,gongm.in,狗狗加速.com\n- DOMAIN-SUFFIX,goo.gl,狗狗加速.com\n- DOMAIN-SUFFIX,goodreaders.com,狗狗加速.com\n- DOMAIN-SUFFIX,goodreads.com,狗狗加速.com\n- DOMAIN-SUFFIX,gravatar.com,狗狗加速.com\n- DOMAIN-SUFFIX,gstatic.com,狗狗加速.com\n- DOMAIN-SUFFIX,gvt0.com,狗狗加速.com\n- DOMAIN-SUFFIX,hockeyapp.net,狗狗加速.com\n- DOMAIN-SUFFIX,hotmail.com,狗狗加速.com\n- DOMAIN-SUFFIX,icons8.com,狗狗加速.com\n- DOMAIN-SUFFIX,ifixit.com,狗狗加速.com\n- DOMAIN-SUFFIX,ift.tt,狗狗加速.com\n- DOMAIN-SUFFIX,ifttt.com,狗狗加速.com\n- DOMAIN-SUFFIX,iherb.com,狗狗加速.com\n- DOMAIN-SUFFIX,imageshack.us,狗狗加速.com\n- DOMAIN-SUFFIX,img.ly,狗狗加速.com\n- DOMAIN-SUFFIX,imgur.com,狗狗加速.com\n- DOMAIN-SUFFIX,imore.com,狗狗加速.com\n- DOMAIN-SUFFIX,instapaper.com,狗狗加速.com\n- DOMAIN-SUFFIX,ipn.li,狗狗加速.com\n- DOMAIN-SUFFIX,is.gd,狗狗加速.com\n- DOMAIN-SUFFIX,issuu.com,狗狗加速.com\n- DOMAIN-SUFFIX,itgonglun.com,狗狗加速.com\n- DOMAIN-SUFFIX,itun.es,狗狗加速.com\n- DOMAIN-SUFFIX,ixquick.com,狗狗加速.com\n- DOMAIN-SUFFIX,j.mp,狗狗加速.com\n- DOMAIN-SUFFIX,js.revsci.net,狗狗加速.com\n- DOMAIN-SUFFIX,jshint.com,狗狗加速.com\n- DOMAIN-SUFFIX,jtvnw.net,狗狗加速.com\n- DOMAIN-SUFFIX,justgetflux.com,狗狗加速.com\n- DOMAIN-SUFFIX,kat.cr,狗狗加速.com\n- DOMAIN-SUFFIX,klip.me,狗狗加速.com\n- DOMAIN-SUFFIX,libsyn.com,狗狗加速.com\n- DOMAIN-SUFFIX,line-apps.com,狗狗加速.com\n- DOMAIN-SUFFIX,linode.com,狗狗加速.com\n- DOMAIN-SUFFIX,lithium.com,狗狗加速.com\n- DOMAIN-SUFFIX,littlehj.com,狗狗加速.com\n- DOMAIN-SUFFIX,live.com,狗狗加速.com\n- DOMAIN-SUFFIX,live.net,狗狗加速.com\n- DOMAIN-SUFFIX,livefilestore.com,狗狗加速.com\n- DOMAIN-SUFFIX,llnwd.net,狗狗加速.com\n- DOMAIN-SUFFIX,macid.co,狗狗加速.com\n- DOMAIN-SUFFIX,macromedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,macrumors.com,狗狗加速.com\n- DOMAIN-SUFFIX,mashable.com,狗狗加速.com\n- DOMAIN-SUFFIX,mathjax.org,狗狗加速.com\n- DOMAIN-SUFFIX,medium.com,狗狗加速.com\n- DOMAIN-SUFFIX,mega.co.nz,狗狗加速.com\n- DOMAIN-SUFFIX,mega.nz,狗狗加速.com\n- DOMAIN-SUFFIX,megaupload.com,狗狗加速.com\n- DOMAIN-SUFFIX,microsofttranslator.com,狗狗加速.com\n- DOMAIN-SUFFIX,mindnode.com,狗狗加速.com\n- DOMAIN-SUFFIX,mobile01.com,狗狗加速.com\n- DOMAIN-SUFFIX,modmyi.com,狗狗加速.com\n- DOMAIN-SUFFIX,msedge.net,狗狗加速.com\n- DOMAIN-SUFFIX,myfontastic.com,狗狗加速.com\n- DOMAIN-SUFFIX,name.com,狗狗加速.com\n- DOMAIN-SUFFIX,nextmedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,nsstatic.net,狗狗加速.com\n- DOMAIN-SUFFIX,nssurge.com,狗狗加速.com\n- DOMAIN-SUFFIX,nyt.com,狗狗加速.com\n- DOMAIN-SUFFIX,nytimes.com,狗狗加速.com\n- DOMAIN-SUFFIX,omnigroup.com,狗狗加速.com\n- DOMAIN-SUFFIX,onedrive.com,狗狗加速.com\n- DOMAIN-SUFFIX,onenote.com,狗狗加速.com\n- DOMAIN-SUFFIX,ooyala.com,狗狗加速.com\n- DOMAIN-SUFFIX,openvpn.net,狗狗加速.com\n- DOMAIN-SUFFIX,openwrt.org,狗狗加速.com\n- DOMAIN-SUFFIX,orkut.com,狗狗加速.com\n- DOMAIN-SUFFIX,osxdaily.com,狗狗加速.com\n- DOMAIN-SUFFIX,outlook.com,狗狗加速.com\n- DOMAIN-SUFFIX,ow.ly,狗狗加速.com\n- DOMAIN-SUFFIX,paddleapi.com,狗狗加速.com\n- DOMAIN-SUFFIX,parallels.com,狗狗加速.com\n- DOMAIN-SUFFIX,parse.com,狗狗加速.com\n- DOMAIN-SUFFIX,pdfexpert.com,狗狗加速.com\n- DOMAIN-SUFFIX,periscope.tv,狗狗加速.com\n- DOMAIN-SUFFIX,pinboard.in,狗狗加速.com\n- DOMAIN-SUFFIX,pinterest.com,狗狗加速.com\n- DOMAIN-SUFFIX,pixelmator.com,狗狗加速.com\n- DOMAIN-SUFFIX,pixiv.net,狗狗加速.com\n- DOMAIN-SUFFIX,playpcesor.com,狗狗加速.com\n- DOMAIN-SUFFIX,playstation.com,狗狗加速.com\n- DOMAIN-SUFFIX,playstation.com.hk,狗狗加速.com\n- DOMAIN-SUFFIX,playstation.net,狗狗加速.com\n- DOMAIN-SUFFIX,playstationnetwork.com,狗狗加速.com\n- DOMAIN-SUFFIX,pushwoosh.com,狗狗加速.com\n- DOMAIN-SUFFIX,rime.im,狗狗加速.com\n- DOMAIN-SUFFIX,servebom.com,狗狗加速.com\n- DOMAIN-SUFFIX,sfx.ms,狗狗加速.com\n- DOMAIN-SUFFIX,shadowsocks.org,狗狗加速.com\n- DOMAIN-SUFFIX,sharethis.com,狗狗加速.com\n- DOMAIN-SUFFIX,shazam.com,狗狗加速.com\n- DOMAIN-SUFFIX,skype.com,狗狗加速.com\n- DOMAIN-SUFFIX,smartdns狗狗加速.com.com,狗狗加速.com\n- DOMAIN-SUFFIX,smartmailcloud.com,狗狗加速.com\n- DOMAIN-SUFFIX,sndcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,sony.com,狗狗加速.com\n- DOMAIN-SUFFIX,soundcloud.com,狗狗加速.com\n- DOMAIN-SUFFIX,sourceforge.net,狗狗加速.com\n- DOMAIN-SUFFIX,spotify.com,狗狗加速.com\n- DOMAIN-SUFFIX,squarespace.com,狗狗加速.com\n- DOMAIN-SUFFIX,sstatic.net,狗狗加速.com\n- DOMAIN-SUFFIX,st.luluku.pw,狗狗加速.com\n- DOMAIN-SUFFIX,stackoverflow.com,狗狗加速.com\n- DOMAIN-SUFFIX,startpage.com,狗狗加速.com\n- DOMAIN-SUFFIX,staticflickr.com,狗狗加速.com\n- DOMAIN-SUFFIX,steamcommunity.com,狗狗加速.com\n- DOMAIN-SUFFIX,symauth.com,狗狗加速.com\n- DOMAIN-SUFFIX,symcb.com,狗狗加速.com\n- DOMAIN-SUFFIX,symcd.com,狗狗加速.com\n- DOMAIN-SUFFIX,tapbots.com,狗狗加速.com\n- DOMAIN-SUFFIX,tapbots.net,狗狗加速.com\n- DOMAIN-SUFFIX,tdesktop.com,狗狗加速.com\n- DOMAIN-SUFFIX,techcrunch.com,狗狗加速.com\n- DOMAIN-SUFFIX,techsmith.com,狗狗加速.com\n- DOMAIN-SUFFIX,thepiratebay.org,狗狗加速.com\n- DOMAIN-SUFFIX,theverge.com,狗狗加速.com\n- DOMAIN-SUFFIX,time.com,狗狗加速.com\n- DOMAIN-SUFFIX,timeinc.net,狗狗加速.com\n- DOMAIN-SUFFIX,tiny.cc,狗狗加速.com\n- DOMAIN-SUFFIX,tinypic.com,狗狗加速.com\n- DOMAIN-SUFFIX,tmblr.co,狗狗加速.com\n- DOMAIN-SUFFIX,todoist.com,狗狗加速.com\n- DOMAIN-SUFFIX,trello.com,狗狗加速.com\n- DOMAIN-SUFFIX,trustasiassl.com,狗狗加速.com\n- DOMAIN-SUFFIX,tumblr.co,狗狗加速.com\n- DOMAIN-SUFFIX,tumblr.com,狗狗加速.com\n- DOMAIN-SUFFIX,tweetdeck.com,狗狗加速.com\n- DOMAIN-SUFFIX,tweetmarker.net,狗狗加速.com\n- DOMAIN-SUFFIX,twitch.tv,狗狗加速.com\n- DOMAIN-SUFFIX,txmblr.com,狗狗加速.com\n- DOMAIN-SUFFIX,typekit.net,狗狗加速.com\n- DOMAIN-SUFFIX,ubertags.com,狗狗加速.com\n- DOMAIN-SUFFIX,ublock.org,狗狗加速.com\n- DOMAIN-SUFFIX,ubnt.com,狗狗加速.com\n- DOMAIN-SUFFIX,ulyssesapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,urchin.com,狗狗加速.com\n- DOMAIN-SUFFIX,usertrust.com,狗狗加速.com\n- DOMAIN-SUFFIX,v.gd,狗狗加速.com\n- DOMAIN-SUFFIX,v2ex.com,狗狗加速.com\n- DOMAIN-SUFFIX,vimeo.com,狗狗加速.com\n- DOMAIN-SUFFIX,vimeocdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,vine.co,狗狗加速.com\n- DOMAIN-SUFFIX,vivaldi.com,狗狗加速.com\n- DOMAIN-SUFFIX,vox-cdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,vsco.co,狗狗加速.com\n- DOMAIN-SUFFIX,vultr.com,狗狗加速.com\n- DOMAIN-SUFFIX,w.org,狗狗加速.com\n- DOMAIN-SUFFIX,w3schools.com,狗狗加速.com\n- DOMAIN-SUFFIX,webtype.com,狗狗加速.com\n- DOMAIN-SUFFIX,wikiwand.com,狗狗加速.com\n- DOMAIN-SUFFIX,wikileaks.org,狗狗加速.com\n- DOMAIN-SUFFIX,wikimedia.org,狗狗加速.com\n- DOMAIN-SUFFIX,wikipedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,wikipedia.org,狗狗加速.com\n- DOMAIN-SUFFIX,windows.com,狗狗加速.com\n- DOMAIN-SUFFIX,windows.net,狗狗加速.com\n- DOMAIN-SUFFIX,wire.com,狗狗加速.com\n- DOMAIN-SUFFIX,wordpress.com,狗狗加速.com\n- DOMAIN-SUFFIX,workflowy.com,狗狗加速.com\n- DOMAIN-SUFFIX,wp.com,狗狗加速.com\n- DOMAIN-SUFFIX,wsj.com,狗狗加速.com\n- DOMAIN-SUFFIX,wsj.net,狗狗加速.com\n- DOMAIN-SUFFIX,xda-developers.com,狗狗加速.com\n- DOMAIN-SUFFIX,xeeno.com,狗狗加速.com\n- DOMAIN-SUFFIX,xiti.com,狗狗加速.com\n- DOMAIN-SUFFIX,yahoo.com,狗狗加速.com\n- DOMAIN-SUFFIX,yimg.com,狗狗加速.com\n- DOMAIN-SUFFIX,ying.com,狗狗加速.com\n- DOMAIN-SUFFIX,yoyo.org,狗狗加速.com\n- DOMAIN-SUFFIX,ytimg.com,狗狗加速.com\n- DOMAIN-SUFFIX,signal.org,狗狗加速.com\n- DOMAIN-SUFFIX,whispersystems.org,狗狗加速.com\n- DOMAIN-SUFFIX,cangku.moe,狗狗加速.com\n- DOMAIN-SUFFIX,tradingview.com,狗狗加速.com\n- DOMAIN-SUFFIX,x.com,狗狗加速.com\n- DOMAIN-SUFFIX,asmr.one,狗狗加速.com\n- DOMAIN-SUFFIX,telegra.ph,狗狗加速.com\n- DOMAIN-SUFFIX,telegram.org,狗狗加速.com\n- DOMAIN-SUFFIX,t.me,狗狗加速.com\n- DOMAIN-SUFFIX,telegram.me,狗狗加速.com\n- IP-CIDR,91.108.4.0/22,狗狗加速.com,no-resolve\n- IP-CIDR,91.108.8.0/21,狗狗加速.com,no-resolve\n- IP-CIDR,91.108.16.0/22,狗狗加速.com,no-resolve\n- IP-CIDR,91.108.56.0/22,狗狗加速.com,no-resolve\n- IP-CIDR,149.154.160.0/20,狗狗加速.com,no-resolve\n- IP-CIDR6,2001:67c:4e8::/48,狗狗加速.com,no-resolve\n- IP-CIDR6,2001:b28:f23d::/48,狗狗加速.com,no-resolve\n- IP-CIDR6,2001:b28:f23f::/48,狗狗加速.com,no-resolve\n- IP-CIDR,120.232.181.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.241.147.226/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.253.226/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.255.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.255.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.255.98/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.150.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.150.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.151.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.151.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.39.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.40.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.41.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.43.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.50.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,220.181.174.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,220.181.174.226/32,狗狗加速.com,no-resolve\n- IP-CIDR,220.181.174.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve\n- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve\n- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve\n- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve\n- DOMAIN,injections.adguard.org,DIRECT\n- DOMAIN,local.adguard.org,DIRECT\n- DOMAIN-SUFFIX,local,DIRECT\n- IP-CIDR,127.0.0.0/8,DIRECT\n- IP-CIDR,172.16.0.0/12,DIRECT\n- IP-CIDR,192.168.0.0/16,DIRECT\n- IP-CIDR,10.0.0.0/8,DIRECT\n- IP-CIDR,17.0.0.0/8,DIRECT\n- IP-CIDR,100.64.0.0/10,DIRECT\n- IP-CIDR,224.0.0.0/4,DIRECT\n- IP-CIDR6,fe80::/10,DIRECT\n- GEOIP,CN,DIRECT\n- MATCH,狗狗加速.com\n\"\"\"\n\n# 下载 GFWList 并 Base64 解码\nresponse = requests.get(GFWLIST_URL)\ndecoded_data = base64.b64decode(response.text).decode(\"utf-8\", errors=\"ignore\")\n\n# 解析 GFWList 规则并转换为 Clash 规则格式\nrules = []\nfor line in decoded_data.split(\"\\n\"):\n    line = line.strip()\n    if not line or line.startswith(\"!\") or line.startswith(\"[\") or line.startswith(\"@@\"):  # 忽略注释、无效行和白名单规则\n        continue\n    if line.startswith(\"||\"):  # 处理 DOMAIN-SUFFIX 规则\n        domain = line[2:]\n        rules.append(f\"DOMAIN-SUFFIX,{domain},狗狗加速.com\")\n    elif line.startswith(\"|http\") or line.startswith(\"|https\"):  # 处理 URL 规则\n        match = re.search(r\"\\|\\w+://([^/]+)\", line)\n        if match:\n            domain = match.group(1)\n            rules.append(f\"DOMAIN,{domain},狗狗加速.com\")\n    elif line.startswith(\".\"):  # 处理以点号开头的域名\n        domain = line[1:]\n        rules.append(f\"DOMAIN-SUFFIX,{domain},狗狗加速.com\")\n    elif re.match(r\"^\\d+\\.\\d+\\.\\d+\\.\\d+(\\/\\d+)?$\", line):  # 处理 IP 或 IP-CIDR 规则\n        try:\n            # 如果缺少子网掩码，则添加默认的 /32\n            if '/' not in line:\n                line += '/32'\n            ipaddress.ip_network(line, strict=False)\n            rules.append(f\"IP-CIDR,{line},狗狗加速.com\")\n        except ValueError:\n            continue  # 跳过无效的 IP 或 IP-CIDR\n    else:  # 处理普通域名\n        rules.append(f\"DOMAIN,{line},狗狗加速.com\")\n\n# 记录规则去重\nrule_dict = {}\nremoved_rules = []\ninvalid_rules = []\n\n# 处理 GFWList 规则\nfor rule in rules:\n    parts = rule.split(\",\")\n    if len(parts) >= 3:\n        rule_type, target, policy = parts[0].strip(), parts[1].strip(), parts[2].strip()\n        key = f\"{rule_type},{target}\"\n\n        # 处理 IP-CIDR 规则，确保 IP 和子网掩码合法\n        if rule_type in [\"IP-CIDR\", \"IP-CIDR6\"]:\n            try:\n                ipaddress.ip_network(target, strict=False)  # 检测 CIDR 合法性\n            except ValueError:\n                invalid_rules.append(rule)  # 记录无效的规则\n                continue  # 跳过此规则\n\n        if key not in rule_dict:\n            rule_dict[key] = rule  # 第一次出现的规则直接保留\n        elif policy != \"狗狗加速.com\":\n            removed_rules.append(rule)  # 记录被删除的规则\n\n# 重新整理规则\nfiltered_rules = list(rule_dict.values())\n\n# 将原始规则与过滤后的规则合并\nall_rules = highest_priority_rules.strip() + \"\\n\" + \"\\n\".join([f\"- {rule}\" for rule in filtered_rules])\n\n# 写入优化后的 YAML 文件\noutput_file = \"rules.yaml\"\nwith open(output_file, \"w\", encoding=\"utf-8\") as f:\n    f.write(all_rules)\n\n# 打印被删除的冲突规则\nif removed_rules:\n    print(\"\\n=== 以下规则因冲突被删除（仅保留'狗狗加速.com'的规则） ===\")\n    for rule in removed_rules:\n        print(rule)\n\n# 打印无效 IP-CIDR 规则\nif invalid_rules:\n    print(\"\\n=== 以下无效的 IP-CIDR 规则已被移除 ===\")\n    for rule in invalid_rules:\n        print(rule)\n\nprint(f\"\\n去重完成，优化后的 YAML 文件已保存为: {output_file}\")\n```\n\n程序会将处理好的规则输出到当前目录,名为`rules.yaml`\n\n执行前确保你能打得开[GFWList](https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt),如果打不开,可以自行替换为打得开的链接\n\nGFWList内容如下,打开如果不是这样的那就说明你找错链接了\n\n![20250305153304](https://img.hackerbs.com//20250305153304.png)\n\n## 规则的使用方法\n\n程序输出的内容直接全选,然后打开Clash Verge Rev的订阅 -> 全局扩展覆写配置 -> 右键选择打开文件(如果点编辑会导致自动检查失败)\n\n然后将程序的内容直接粘贴到文末即可\n\n退出Clash Verge Rev,重新打开,使用TUN模式，刷新订阅，点开你的规则组，例如我的狗狗加速.com,按延迟排序,节点测速\n\n因为规则有7361条,所以节点测速时重复点击,大概5分钟后才会测出正常速度,例如15-新加坡Hy2节点，87ms延迟\n\n如果你和我一样用的狗狗加速,需要访问ChatGPT的话就选`🔥ChatGPT`这组\n\n![20250305153734](https://img.hackerbs.com//20250305153734.png)\n\n![20250305153746](https://img.hackerbs.com//20250305153746.png)\n\n![20250305153755](https://img.hackerbs.com//20250305153755.png)\n","source":"_posts/Python实现自动将GFWList规则转换为Clash规则.md","raw":"---\ntitle: Python实现自动将GFWList规则转换为Clash规则\ncomments: true\ncategories: [知识库]\ndate: 2025-03-05 14:50:15\nkeywords:\n\t\t- Python\n\t\t- Clash\n\t\t- 代理\n\t\t- GFWList\n\t\t- GEO\n\t\t- 分流\ntags:\n\t\t- Python\n\t\t- Clash\n\t\t- 代理\n\t\t- GFWList\n\t\t- GEO\n\t\t- 分流\n---\n\n## 环境介绍\n\n### 代理客户端为Clash Verge Rev\n\n[直达官方github仓库](https://github.com/clash-verge-rev/clash-verge-rev)\n\n### 机场为狗狗加速\n\n[直达官网](https://down.dginv.click/#/register?code=pGwFvdKk)\n\n使用邀请码享注册优惠`pGwFvdKk`\n\n- 高性能海外机场，免费试用，优惠套餐，解锁流媒体，全球首家支持 Hysteria 协议。\n\n- 海外团队，无跑路风险，高达 50% 返佣\n\n- 集群负载均衡设计，高速专线(兼容老客户端)，极低延迟，无视晚高峰，4K 秒开\n\n- 全球首家 Hysteria 协议机场，现已上线更快的 Hysteria2 协议(Clash Verge 客户端最佳搭配)\n\n- 解锁流媒体及 ChatGPT\n\n|套餐|流量|详情|\n|---|---|---|\n|标准套餐|160G|限速150M，无审计，年付9折|\n|高级套餐|200G|不限速，无审计，年付8折,最新Hysteria协议|\n|豪华套餐|500G|不限速,无审计,2年付6折,最新Hysteria2协议,东南亚节点,微信客服技术支持|\n\n### 开发环境\n\nPython 3.13.2\n\n<!-- more -->\n\n## Clash配置文件的介绍\n\n### 其余部分不做介绍,采用机场的配置即可\n\n本文只涉及`rules:`部分,其余部分直接复制下方从狗狗加速官方提取的配置即可\n\n`proxies`和`proxy-groups`部分不需要填写,让机场的配置文件覆盖即可,当然下面部分的配置也可以留空,让机场覆盖,只填写`rules:`部分就可以实现分流\n\n在编辑配置文件之前,先订阅,然后查看当前配置就可以看到机场的`rules:`,可以先将其备份,添加到GFWList的规则之前,也就是程序中的最高优先级规则部分\n\n![20250305152944](https://img.hackerbs.com//20250305152944.png)\n\n```yaml\nmode: rule\nmixed-port: 7897\nallow-lan: false\nlog-level: info\nexternal-controller: 127.0.0.1:9097\nsecret: ''\nunified-delay: true\ntun:\n  mtu: 1500\n  auto-detect-interface: true\n  auto-route: true\n  device: Mihomo\n  dns-hijack:\n  - any:53\n  stack: mixed\n  strict-route: false\n  enable: true\ndns:\n  enable: true\n  use-system-hosts: false\n  listen: 127.0.0.1:5335\n  default-nameserver:\n  - 180.76.76.76\n  - 182.254.118.118\n  - 8.8.8.8\n  - 180.184.2.2\n  enhanced-mode: fake-ip\n  fake-ip-range: 198.18.0.1/16\n  fake-ip-filter:\n  - '*.lan'\n  - stun.*.*.*\n  - stun.*.*\n  - time.windows.com\n  - time.nist.gov\n  - time.apple.com\n  - time.asia.apple.com\n  - '*.ntp.org.cn'\n  - '*.openwrt.pool.ntp.org'\n  - time1.cloud.tencent.com\n  - time.ustc.edu.cn\n  - pool.ntp.org\n  - ntp.ubuntu.com\n  - ntp.aliyun.com\n  - ntp1.aliyun.com\n  - ntp2.aliyun.com\n  - ntp3.aliyun.com\n  - ntp4.aliyun.com\n  - ntp5.aliyun.com\n  - ntp6.aliyun.com\n  - ntp7.aliyun.com\n  - time1.aliyun.com\n  - time2.aliyun.com\n  - time3.aliyun.com\n  - time4.aliyun.com\n  - time5.aliyun.com\n  - time6.aliyun.com\n  - time7.aliyun.com\n  - '*.time.edu.cn'\n  - time1.apple.com\n  - time2.apple.com\n  - time3.apple.com\n  - time4.apple.com\n  - time5.apple.com\n  - time6.apple.com\n  - time7.apple.com\n  - time1.google.com\n  - time2.google.com\n  - time3.google.com\n  - time4.google.com\n  - music.163.com\n  - '*.music.163.com'\n  - '*.126.net'\n  - musicapi.taihe.com\n  - music.taihe.com\n  - songsearch.kugou.com\n  - trackercdn.kugou.com\n  - '*.kuwo.cn'\n  - api-jooxtt.sanook.com\n  - api.joox.com\n  - joox.com\n  - y.qq.com\n  - '*.y.qq.com'\n  - streamoc.music.tc.qq.com\n  - mobileoc.music.tc.qq.com\n  - isure.stream.qqmusic.qq.com\n  - dl.stream.qqmusic.qq.com\n  - aqqmusic.tc.qq.com\n  - amobile.music.tc.qq.com\n  - '*.xiami.com'\n  - '*.music.migu.cn'\n  - music.migu.cn\n  - '*.msftconnecttest.com'\n  - '*.msftncsi.com'\n  - localhost.ptlogin2.qq.com\n  - '*.*.*.srv.nintendo.net'\n  - '*.*.stun.playstation.net'\n  - xbox.*.*.microsoft.com\n  - '*.ipv6.microsoft.com'\n  - '*.*.xboxlive.com'\n  - speedtest.cros.wr.pvp.net\n  nameserver:\n  - 180.76.76.76\n  - 119.29.29.29\n  - 180.184.1.1\n  - 223.5.5.5\n  - 8.8.8.8\n  - https://223.6.6.6/dns-query#h3=true\n  - https://223.5.5.5/dns-query\n  - https://cloudflare-dns.com/dns-query\n  - https://doh.pub/dns-query\n  fallback:\n  - https://000000.dns.nextdns.io/dns-query#h3=true\n  - https://101.101.101.101/dns-query\n  - https://208.67.220.220/dns-query\n  - tls://8.8.4.4\n  - tls://1.0.0.1:853\n  - https://cloudflare-dns.com/dns-query\n  - https://dns.google/dns-query\n  fallback-filter:\n    geoip: true\n    ipcidr:\n    - 240.0.0.0/4\n    - 0.0.0.0/32\n    - 127.0.0.1/32\n    domain:\n    - +.google.com\n    - +.facebook.com\n    - +.twitter.com\n    - +.youtube.com\n    - +.xn--ngstr-lra8j.com\n    - +.google.cn\n    - +.googleapis.cn\n    - +.googleapis.com\n    - +.gvt1.com\n  ipv6: false\nexternal-controller-cors:\n  allow-private-network: true\n  allow-origins:\n  - '*'\n\nprofile:\n  store-selected: true\n```\n\n### rules部分\n\n规则参数:\n\nDOMAIN - 匹配完整域名,不包含子域名.例如:- DOMAIN,example.com,DIRECT\n\nDOMAIN-SUFFIX - 匹配域名后缀,可以匹配子域名.例如:- DOMAIN-SUFFIX,example.com,PROXY\n\nDOMAIN-KEYWORD - 匹配域名中包含的关键字,不限定位置.例如:- DOMAIN-KEYWORD,google,PROXY\n\nPROCESS-NAME(仅 Clash for Windows / Clash Meta 支持) - 匹配进程名,仅适用于 TUN 模式.例如:- PROCESS-NAME,chrome.exe,PROXY\n\nIP-CIDR - 匹配IPv4 地址段,可以带 no-resolve 以防止 Clash 进行 DNS 解析.例如:- IP-CIDR,192.168.1.0/24,DIRECT\n如果不想 Clash 解析 IP 地址对应的域名,可以加 no-resolve:- IP-CIDR,192.168.1.0/24,DIRECT,no-resolve\n\nIP-CIDR6 - 匹配IPv6 地址段,用法与 IP-CIDR 类似.例如:- IP-CIDR6,2400:3200::/32,DIRECT\n\nGEOIP - 匹配IP 地址归属地(基于 GeoIP 数据库).例如: - GEOIP,CN,DIRECT\n如果要让 Clash 不解析域名,可以加 no-resolve:- GEOIP,CN,DIRECT,no-resolve\n\nMATCH - 匹配所有流量,通常作为最后的兜底规则.例如:- MATCH,PROXY\n\n其中的`DIRECT`为直连,`PROXY`为你的`proxy-groups`的`name`部分,例如狗狗加速的`name: 狗狗加速.com`和`name: 🔥ChatGPT`\n\n```yaml\n# 以狗狗加速机场的代理组\"🔥ChatGPT\"为例\n- DOMAIN-KEYWORD,openai,🔥ChatGPT\n```\n\nClash 按规则的先后顺序进行匹配，第一个匹配成功的规则生效，后面的规则不会再被执行。因此，一般规则顺序建议：\n\n- PROCESS-NAME 规则\n- DOMAIN 规则\n- DOMAIN-SUFFIX 规则\n- DOMAIN-KEYWORD 规则\n- IP-CIDR / IP-CIDR6 规则\n- GEOIP 规则\n- MATCH 规则（兜底）\n\n## 代码\n\n```python\nimport re\nimport base64\nimport requests\nimport ipaddress\n\n# GFWList 地址\nGFWLIST_URL = \"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\"\n\n# 预置规则 - 来源于上文提到的机场的规则和你自己手动添加的规则\n# 此处预置了狗狗加速机场的规则\nhighest_priority_rules = \"\"\"rules:\n- DOMAIN,subapi.doggysub.uk,DIRECT\n- PROCESS-NAME,v2ray,DIRECT\n- PROCESS-NAME,xray,DIRECT\n- PROCESS-NAME,naive,DIRECT\n- PROCESS-NAME,trojan,DIRECT\n- PROCESS-NAME,trojan-go,DIRECT\n- PROCESS-NAME,ss-local,DIRECT\n- PROCESS-NAME,privoxy,DIRECT\n- PROCESS-NAME,leaf,DIRECT\n- PROCESS-NAME,v2ray.exe,DIRECT\n- PROCESS-NAME,xray.exe,DIRECT\n- PROCESS-NAME,naive.exe,DIRECT\n- PROCESS-NAME,trojan.exe,DIRECT\n- PROCESS-NAME,trojan-go.exe,DIRECT\n- PROCESS-NAME,ss-local.exe,DIRECT\n- PROCESS-NAME,privoxy.exe,DIRECT\n- PROCESS-NAME,leaf.exe,DIRECT\n- PROCESS-NAME,Surge,DIRECT\n- PROCESS-NAME,Surge 2,DIRECT\n- PROCESS-NAME,Surge 3,DIRECT\n- PROCESS-NAME,Surge 4,DIRECT\n- PROCESS-NAME,Surge%202,DIRECT\n- PROCESS-NAME,Surge%203,DIRECT\n- PROCESS-NAME,Surge%204,DIRECT\n- PROCESS-NAME,Thunder,DIRECT\n- PROCESS-NAME,DownloadService,DIRECT\n- PROCESS-NAME,qBittorrent,DIRECT\n- PROCESS-NAME,Transmission,DIRECT\n- PROCESS-NAME,fdm,DIRECT\n- PROCESS-NAME,aria2c,DIRECT\n- PROCESS-NAME,Folx,DIRECT\n- PROCESS-NAME,NetTransport,DIRECT\n- PROCESS-NAME,uTorrent,DIRECT\n- PROCESS-NAME,WebTorrent,DIRECT\n- PROCESS-NAME,aria2c.exe,DIRECT\n- PROCESS-NAME,BitComet.exe,DIRECT\n- PROCESS-NAME,fdm.exe,DIRECT\n- PROCESS-NAME,NetTransport.exe,DIRECT\n- PROCESS-NAME,qbittorrent.exe,DIRECT\n- PROCESS-NAME,Thunder.exe,DIRECT\n- PROCESS-NAME,ThunderVIP.exe,DIRECT\n- PROCESS-NAME,transmission-daemon.exe,DIRECT\n- PROCESS-NAME,transmission-qt.exe,DIRECT\n- PROCESS-NAME,uTorrent.exe,DIRECT\n- PROCESS-NAME,WebTorrent.exe,DIRECT\n- PROCESS-NAME,aDrive.exe,DIRECT\n- DOMAIN-SUFFIX,services.googleapis.cn,狗狗加速.com\n- DOMAIN-SUFFIX,xn--ngstr-lra8j.com,狗狗加速.com\n- DOMAIN,safebrowsing.urlsec.qq.com,DIRECT\n- DOMAIN,safebrowsing.googleapis.com,DIRECT\n- DOMAIN,developer.apple.com,狗狗加速.com\n- DOMAIN-SUFFIX,digicert.com,狗狗加速.com\n- DOMAIN,ocsp.apple.com,狗狗加速.com\n- DOMAIN,ocsp.comodoca.com,狗狗加速.com\n- DOMAIN,ocsp.usertrust.com,狗狗加速.com\n- DOMAIN,ocsp.sectigo.com,狗狗加速.com\n- DOMAIN,ocsp.verisign.net,狗狗加速.com\n- DOMAIN-SUFFIX,apple-dns.net,狗狗加速.com\n- DOMAIN,testflight.apple.com,狗狗加速.com\n- DOMAIN,sandbox.itunes.apple.com,狗狗加速.com\n- DOMAIN,itunes.apple.com,狗狗加速.com\n- DOMAIN-SUFFIX,apps.apple.com,狗狗加速.com\n- DOMAIN-SUFFIX,blobstore.apple.com,狗狗加速.com\n- DOMAIN,cvws.icloud-content.com,狗狗加速.com\n- DOMAIN-SUFFIX,mzstatic.com,DIRECT\n- DOMAIN-SUFFIX,itunes.apple.com,DIRECT\n- DOMAIN-SUFFIX,icloud.com,DIRECT\n- DOMAIN-SUFFIX,icloud-content.com,DIRECT\n- DOMAIN-SUFFIX,me.com,DIRECT\n- DOMAIN-SUFFIX,aaplimg.com,DIRECT\n- DOMAIN-SUFFIX,cdn20.com,DIRECT\n- DOMAIN-SUFFIX,cdn-apple.com,DIRECT\n- DOMAIN-SUFFIX,akadns.net,DIRECT\n- DOMAIN-SUFFIX,akamaiedge.net,DIRECT\n- DOMAIN-SUFFIX,edgekey.net,DIRECT\n- DOMAIN-SUFFIX,mwcloudcdn.com,DIRECT\n- DOMAIN-SUFFIX,mwcname.com,DIRECT\n- DOMAIN-SUFFIX,apple.com,DIRECT\n- DOMAIN-SUFFIX,apple-cloudkit.com,DIRECT\n- DOMAIN-SUFFIX,apple-mapkit.com,DIRECT\n- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT\n- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT\n- DOMAIN,gemini.google.com,🔥ChatGPT\n- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN,openaicom-api-bdcpf8c6d2e9atf6.z01.azurefd.net,🔥ChatGPT\n- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT\n- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT\n- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT\n- DOMAIN-SUFFIX,ai.com,🔥ChatGPT\n- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT\n- DOMAIN-SUFFIX,api.statsig.com,🔥ChatGPT\n- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT\n- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT\n- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT\n- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT\n- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT\n- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT\n- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openai.com,🔥ChatGPT\n- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT\n- DOMAIN-SUFFIX,segment.io,🔥ChatGPT\n- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT\n- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT\n- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,sora.com,🔥ChatGPT\n- DOMAIN-KEYWORD,openai,🔥ChatGPT\n- DOMAIN,api.msn.com,🔥ChatGPT\n- DOMAIN,api.statsig.com,🔥ChatGPT\n- DOMAIN,assets.msn.com,🔥ChatGPT\n- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT\n- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT\n- DOMAIN,copilot.microsoft.com,🔥ChatGPT\n- DOMAIN,gateway.bingviz.microsoft.net,🔥ChatGPT\n- DOMAIN,gateway.bingviz.microsoftapp.net,🔥ChatGPT\n- DOMAIN,in.appcenter.ms,🔥ChatGPT\n- DOMAIN,location.microsoft.com,🔥ChatGPT\n- DOMAIN,odc.officeapps.live.com,🔥ChatGPT\n- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT\n- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT\n- DOMAIN,r.bing.com,🔥ChatGPT\n- DOMAIN,self.events.data.microsoft.com,🔥ChatGPT\n- DOMAIN,services.bingapis.com,🔥ChatGPT\n- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT\n- DOMAIN,sydney.bing.com,🔥ChatGPT\n- DOMAIN,www.bing.com,🔥ChatGPT\n- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT\n- DOMAIN-SUFFIX,api.microsoftapp.net,🔥ChatGPT\n- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT\n- DOMAIN-SUFFIX,bing-shopping.microsoft-falcon.io,🔥ChatGPT\n- DOMAIN-SUFFIX,challenges.cloudflare.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT\n- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT\n- DOMAIN-SUFFIX,edgeservices.bing.com,🔥ChatGPT\n- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT\n- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT\n- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT\n- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT\n- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT\n- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT\n- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT\n- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT\n- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openai.com,🔥ChatGPT\n- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT\n- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT\n- DOMAIN-SUFFIX,segment.io,🔥ChatGPT\n- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT\n- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT\n- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT\n- DOMAIN-KEYWORD,openaicom-api,🔥ChatGPT\n- DOMAIN,ai.google.dev,🔥ChatGPT\n- DOMAIN,alkalimakersuite-pa.clients6.google.com,🔥ChatGPT\n- DOMAIN,makersuite.google.com,🔥ChatGPT\n- DOMAIN-SUFFIX,bard.google.com,🔥ChatGPT\n- DOMAIN-SUFFIX,deepmind.com,🔥ChatGPT\n- DOMAIN-SUFFIX,deepmind.google,🔥ChatGPT\n- DOMAIN-SUFFIX,gemini.google.com,🔥ChatGPT\n- DOMAIN-SUFFIX,generativeai.google,🔥ChatGPT\n- DOMAIN-SUFFIX,proactivebackend-pa.googleapis.com,🔥ChatGPT\n- DOMAIN-SUFFIX,apis.google.com,🔥ChatGPT\n- DOMAIN-KEYWORD,colab,🔥ChatGPT\n- DOMAIN-KEYWORD,developerprofiles,🔥ChatGPT\n- DOMAIN-KEYWORD,generativelanguage,🔥ChatGPT\n- DOMAIN,cdn.usefathom.com,🔥ChatGPT\n- DOMAIN-SUFFIX,anthropic.com,🔥ChatGPT\n- DOMAIN-SUFFIX,claude.ai,🔥ChatGPT\n- DOMAIN-SUFFIX,razie.ai,🔥ChatGPT\n- DOMAIN-SUFFIX,razie.aws.intellij.net,🔥ChatGPT\n- DOMAIN-SUFFIX,etbrains.ai,🔥ChatGPT\n- DOMAIN-SUFFIX,meta.com,🔥ChatGPT\n- DOMAIN-SUFFIX,cn,DIRECT\n- DOMAIN-KEYWORD,-cn,DIRECT\n- DOMAIN-SUFFIX,126.com,DIRECT\n- DOMAIN-SUFFIX,126.net,DIRECT\n- DOMAIN-SUFFIX,127.net,DIRECT\n- DOMAIN-SUFFIX,163.com,DIRECT\n- DOMAIN-SUFFIX,360buyimg.com,DIRECT\n- DOMAIN-SUFFIX,36kr.com,DIRECT\n- DOMAIN-SUFFIX,acfun.tv,DIRECT\n- DOMAIN-SUFFIX,air-matters.com,DIRECT\n- DOMAIN-SUFFIX,aixifan.com,DIRECT\n- DOMAIN-KEYWORD,alicdn,DIRECT\n- DOMAIN-KEYWORD,alipay,DIRECT\n- DOMAIN-KEYWORD,taobao,DIRECT\n- DOMAIN-SUFFIX,amap.com,DIRECT\n- DOMAIN-SUFFIX,autonavi.com,DIRECT\n- DOMAIN-KEYWORD,baidu,DIRECT\n- DOMAIN-SUFFIX,bdimg.com,DIRECT\n- DOMAIN-SUFFIX,bdstatic.com,DIRECT\n- DOMAIN-SUFFIX,bilibili.com,DIRECT\n- DOMAIN-SUFFIX,bilivideo.com,DIRECT\n- DOMAIN-SUFFIX,caiyunapp.com,DIRECT\n- DOMAIN-SUFFIX,clouddn.com,DIRECT\n- DOMAIN-SUFFIX,cnbeta.com,DIRECT\n- DOMAIN-SUFFIX,cnbetacdn.com,DIRECT\n- DOMAIN-SUFFIX,cootekservice.com,DIRECT\n- DOMAIN-SUFFIX,csdn.net,DIRECT\n- DOMAIN-SUFFIX,ctrip.com,DIRECT\n- DOMAIN-SUFFIX,dgtle.com,DIRECT\n- DOMAIN-SUFFIX,dianping.com,DIRECT\n- DOMAIN-SUFFIX,douban.com,DIRECT\n- DOMAIN-SUFFIX,doubanio.com,DIRECT\n- DOMAIN-SUFFIX,duokan.com,DIRECT\n- DOMAIN-SUFFIX,easou.com,DIRECT\n- DOMAIN-SUFFIX,ele.me,DIRECT\n- DOMAIN-SUFFIX,feng.com,DIRECT\n- DOMAIN-SUFFIX,fir.im,DIRECT\n- DOMAIN-SUFFIX,frdic.com,DIRECT\n- DOMAIN-SUFFIX,g-cores.com,DIRECT\n- DOMAIN-SUFFIX,godic.net,DIRECT\n- DOMAIN-SUFFIX,gtimg.com,DIRECT\n- DOMAIN,cdn.hockeyapp.net,DIRECT\n- DOMAIN-SUFFIX,hongxiu.com,DIRECT\n- DOMAIN-SUFFIX,hxcdn.net,DIRECT\n- DOMAIN-SUFFIX,iciba.com,DIRECT\n- DOMAIN-SUFFIX,ifeng.com,DIRECT\n- DOMAIN-SUFFIX,ifengimg.com,DIRECT\n- DOMAIN-SUFFIX,ipip.net,DIRECT\n- DOMAIN-SUFFIX,iqiyi.com,DIRECT\n- DOMAIN-SUFFIX,jd.com,DIRECT\n- DOMAIN-SUFFIX,jianshu.com,DIRECT\n- DOMAIN-SUFFIX,knewone.com,DIRECT\n- DOMAIN-SUFFIX,le.com,DIRECT\n- DOMAIN-SUFFIX,lecloud.com,DIRECT\n- DOMAIN-SUFFIX,lemicp.com,DIRECT\n- DOMAIN-SUFFIX,luoo.net,DIRECT\n- DOMAIN-SUFFIX,meituan.com,DIRECT\n- DOMAIN-SUFFIX,meituan.net,DIRECT\n- DOMAIN-SUFFIX,mi.com,DIRECT\n- DOMAIN-SUFFIX,miaopai.com,DIRECT\n- DOMAIN-SUFFIX,microsoft.com,DIRECT\n- DOMAIN-SUFFIX,microsoftonline.com,DIRECT\n- DOMAIN-SUFFIX,miui.com,DIRECT\n- DOMAIN-SUFFIX,miwifi.com,DIRECT\n- DOMAIN-SUFFIX,mob.com,DIRECT\n- DOMAIN-SUFFIX,netease.com,DIRECT\n- DOMAIN-SUFFIX,office.com,DIRECT\n- DOMAIN-SUFFIX,office365.com,DIRECT\n- DOMAIN-KEYWORD,officecdn,DIRECT\n- DOMAIN-SUFFIX,oschina.net,DIRECT\n- DOMAIN-SUFFIX,ppsimg.com,DIRECT\n- DOMAIN-SUFFIX,pstatp.com,DIRECT\n- DOMAIN-SUFFIX,qcloud.com,DIRECT\n- DOMAIN-SUFFIX,qdaily.com,DIRECT\n- DOMAIN-SUFFIX,qdmm.com,DIRECT\n- DOMAIN-SUFFIX,qhimg.com,DIRECT\n- DOMAIN-SUFFIX,qhres.com,DIRECT\n- DOMAIN-SUFFIX,qidian.com,DIRECT\n- DOMAIN-SUFFIX,qihucdn.com,DIRECT\n- DOMAIN-SUFFIX,qiniu.com,DIRECT\n- DOMAIN-SUFFIX,qiniucdn.com,DIRECT\n- DOMAIN-SUFFIX,qiyipic.com,DIRECT\n- DOMAIN-SUFFIX,qq.com,DIRECT\n- DOMAIN-SUFFIX,qqurl.com,DIRECT\n- DOMAIN-SUFFIX,rarbg.to,DIRECT\n- DOMAIN-SUFFIX,ruguoapp.com,DIRECT\n- DOMAIN-SUFFIX,segmentfault.com,DIRECT\n- DOMAIN-SUFFIX,sinaapp.com,DIRECT\n- DOMAIN-SUFFIX,smzdm.com,DIRECT\n- DOMAIN-SUFFIX,snapdrop.net,DIRECT\n- DOMAIN-SUFFIX,sogou.com,DIRECT\n- DOMAIN-SUFFIX,sogoucdn.com,DIRECT\n- DOMAIN-SUFFIX,sohu.com,DIRECT\n- DOMAIN-SUFFIX,soku.com,DIRECT\n- DOMAIN-SUFFIX,speedtest.net,DIRECT\n- DOMAIN-SUFFIX,sspai.com,DIRECT\n- DOMAIN-SUFFIX,suning.com,DIRECT\n- DOMAIN-SUFFIX,taobao.com,DIRECT\n- DOMAIN-SUFFIX,tencent.com,DIRECT\n- DOMAIN-SUFFIX,tenpay.com,DIRECT\n- DOMAIN-SUFFIX,tianyancha.com,DIRECT\n- DOMAIN-SUFFIX,tmall.com,DIRECT\n- DOMAIN-SUFFIX,tudou.com,DIRECT\n- DOMAIN-SUFFIX,umetrip.com,DIRECT\n- DOMAIN-SUFFIX,upaiyun.com,DIRECT\n- DOMAIN-SUFFIX,upyun.com,DIRECT\n- DOMAIN-SUFFIX,veryzhun.com,DIRECT\n- DOMAIN-SUFFIX,weather.com,DIRECT\n- DOMAIN-SUFFIX,weibo.com,DIRECT\n- DOMAIN-SUFFIX,xiami.com,DIRECT\n- DOMAIN-SUFFIX,xiami.net,DIRECT\n- DOMAIN-SUFFIX,xiaomicp.com,DIRECT\n- DOMAIN-SUFFIX,ximalaya.com,DIRECT\n- DOMAIN-SUFFIX,xmcdn.com,DIRECT\n- DOMAIN-SUFFIX,xunlei.com,DIRECT\n- DOMAIN-SUFFIX,yhd.com,DIRECT\n- DOMAIN-SUFFIX,yihaodianimg.com,DIRECT\n- DOMAIN-SUFFIX,yinxiang.com,DIRECT\n- DOMAIN-SUFFIX,ykimg.com,DIRECT\n- DOMAIN-SUFFIX,youdao.com,DIRECT\n- DOMAIN-SUFFIX,youku.com,DIRECT\n- DOMAIN-SUFFIX,zealer.com,DIRECT\n- DOMAIN-SUFFIX,zhihu.com,DIRECT\n- DOMAIN-SUFFIX,zhimg.com,DIRECT\n- DOMAIN-SUFFIX,zimuzu.tv,DIRECT\n- DOMAIN-SUFFIX,zoho.com,DIRECT\n- DOMAIN,fastly-download.epicgames.com,DIRECT\n- DOMAIN,epicgames-download1.akamaized.net,DIRECT\n- DOMAIN,steamcdn-a.akamaihd.net,DIRECT\n- DOMAIN-SUFFIX,steamserver.net,DIRECT\n- DOMAIN-SUFFIX,cm.steampowered.com,DIRECT\n- DOMAIN-SUFFIX,synology.com,DIRECT\n- DOMAIN-SUFFIX,dyndns.org,DIRECT\n- DOMAIN-SUFFIX,egdownload.fastly-edge.com,DIRECT\n- DOMAIN-KEYWORD,amazon,狗狗加速.com\n- DOMAIN-KEYWORD,google,狗狗加速.com\n- DOMAIN-KEYWORD,gmail,狗狗加速.com\n- DOMAIN-KEYWORD,youtube,狗狗加速.com\n- DOMAIN-KEYWORD,facebook,狗狗加速.com\n- DOMAIN-SUFFIX,fb.me,狗狗加速.com\n- DOMAIN-SUFFIX,fbcdn.net,狗狗加速.com\n- DOMAIN-KEYWORD,twitter,狗狗加速.com\n- DOMAIN-KEYWORD,instagram,狗狗加速.com\n- DOMAIN-KEYWORD,dropbox,狗狗加速.com\n- DOMAIN-SUFFIX,twimg.com,狗狗加速.com\n- DOMAIN-KEYWORD,blogspot,狗狗加速.com\n- DOMAIN-SUFFIX,youtu.be,狗狗加速.com\n- DOMAIN-KEYWORD,whatsapp,狗狗加速.com\n- DOMAIN-SUFFIX,ipleak.net,狗狗加速.com\n- DOMAIN-SUFFIX,browserscan.net,狗狗加速.com\n- DOMAIN-SUFFIX,surfsharkdns.com,狗狗加速.com\n- DOMAIN-SUFFIX,edns.ip-api.com,狗狗加速.com\n- DOMAIN-SUFFIX,dnsleaktest.com,狗狗加速.com\n- DOMAIN-SUFFIX,dnsleak.com,狗狗加速.com\n- DOMAIN-SUFFIX,expressvpn.com,狗狗加速.com\n- DOMAIN-SUFFIX,nordvpn.com,狗狗加速.com\n- DOMAIN-SUFFIX,surfshark.com,狗狗加速.com\n- DOMAIN-SUFFIX,perfect-privacy.com,狗狗加速.com\n- DOMAIN-SUFFIX,browserleaks.com,狗狗加速.com\n- DOMAIN-SUFFIX,browserleaks.org,狗狗加速.com\n- DOMAIN-SUFFIX,browserleaks.net,狗狗加速.com\n- DOMAIN-SUFFIX,vpnunlimited.com,狗狗加速.com\n- DOMAIN-SUFFIX,whoer.net,狗狗加速.com\n- DOMAIN-SUFFIX,whrq.net,狗狗加速.com\n- DOMAIN-KEYWORD,admarvel,REJECT\n- DOMAIN-KEYWORD,admaster,REJECT\n- DOMAIN-KEYWORD,adsage,REJECT\n- DOMAIN-KEYWORD,adsmogo,REJECT\n- DOMAIN-KEYWORD,adsrvmedia,REJECT\n- DOMAIN-KEYWORD,adwords,REJECT\n- DOMAIN-KEYWORD,adservice,REJECT\n- DOMAIN-SUFFIX,appsflyer.com,REJECT\n- DOMAIN-KEYWORD,domob,REJECT\n- DOMAIN-SUFFIX,doubleclick.net,REJECT\n- DOMAIN-KEYWORD,duomeng,REJECT\n- DOMAIN-KEYWORD,dwtrack,REJECT\n- DOMAIN-KEYWORD,guanggao,REJECT\n- DOMAIN-KEYWORD,lianmeng,REJECT\n- DOMAIN-SUFFIX,mmstat.com,REJECT\n- DOMAIN-KEYWORD,mopub,REJECT\n- DOMAIN-KEYWORD,omgmta,REJECT\n- DOMAIN-KEYWORD,openx,REJECT\n- DOMAIN-KEYWORD,partnerad,REJECT\n- DOMAIN-KEYWORD,pingfore,REJECT\n- DOMAIN-KEYWORD,supersonicads,REJECT\n- DOMAIN-KEYWORD,uedas,REJECT\n- DOMAIN-KEYWORD,umeng,REJECT\n- DOMAIN-KEYWORD,usage,REJECT\n- DOMAIN-SUFFIX,vungle.com,REJECT\n- DOMAIN-KEYWORD,wlmonitor,REJECT\n- DOMAIN-KEYWORD,zjtoolbar,REJECT\n- DOMAIN-SUFFIX,linkedin.com,狗狗加速.com\n- DOMAIN-SUFFIX,licdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,9to5mac.com,狗狗加速.com\n- DOMAIN-SUFFIX,abpchina.org,狗狗加速.com\n- DOMAIN-SUFFIX,adblockplus.org,狗狗加速.com\n- DOMAIN-SUFFIX,adobe.com,狗狗加速.com\n- DOMAIN-SUFFIX,akamaized.net,狗狗加速.com\n- DOMAIN-SUFFIX,alfredapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,amplitude.com,狗狗加速.com\n- DOMAIN-SUFFIX,ampproject.org,狗狗加速.com\n- DOMAIN-SUFFIX,android.com,狗狗加速.com\n- DOMAIN-SUFFIX,angularjs.org,狗狗加速.com\n- DOMAIN-SUFFIX,aolcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,apkpure.com,狗狗加速.com\n- DOMAIN-SUFFIX,appledaily.com,狗狗加速.com\n- DOMAIN-SUFFIX,appshopper.com,狗狗加速.com\n- DOMAIN-SUFFIX,appspot.com,狗狗加速.com\n- DOMAIN-SUFFIX,arcgis.com,狗狗加速.com\n- DOMAIN-SUFFIX,archive.org,狗狗加速.com\n- DOMAIN-SUFFIX,armorgames.com,狗狗加速.com\n- DOMAIN-SUFFIX,aspnetcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,att.com,狗狗加速.com\n- DOMAIN-SUFFIX,awsstatic.com,狗狗加速.com\n- DOMAIN-SUFFIX,azurewebsites.net,狗狗加速.com\n- DOMAIN-SUFFIX,bing.com,狗狗加速.com\n- DOMAIN-SUFFIX,bintray.com,狗狗加速.com\n- DOMAIN-SUFFIX,bit.com,狗狗加速.com\n- DOMAIN-SUFFIX,bit.ly,狗狗加速.com\n- DOMAIN-SUFFIX,bitbucket.org,狗狗加速.com\n- DOMAIN-SUFFIX,bjango.com,狗狗加速.com\n- DOMAIN-SUFFIX,bkrtx.com,狗狗加速.com\n- DOMAIN-SUFFIX,blog.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogger.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogsmithmedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogspot.com,狗狗加速.com\n- DOMAIN-SUFFIX,blogspot.hk,狗狗加速.com\n- DOMAIN-SUFFIX,bloomberg.com,狗狗加速.com\n- DOMAIN-SUFFIX,box.com,狗狗加速.com\n- DOMAIN-SUFFIX,box.net,狗狗加速.com\n- DOMAIN-SUFFIX,cachefly.net,狗狗加速.com\n- DOMAIN-SUFFIX,chromium.org,狗狗加速.com\n- DOMAIN-SUFFIX,cl.ly,狗狗加速.com\n- DOMAIN-SUFFIX,cloudflare.com,狗狗加速.com\n- DOMAIN-SUFFIX,cloudfront.net,狗狗加速.com\n- DOMAIN-SUFFIX,cloudmagic.com,狗狗加速.com\n- DOMAIN-SUFFIX,cmail19.com,狗狗加速.com\n- DOMAIN-SUFFIX,cnet.com,狗狗加速.com\n- DOMAIN-SUFFIX,cocoapods.org,狗狗加速.com\n- DOMAIN-SUFFIX,comodoca.com,狗狗加速.com\n- DOMAIN-SUFFIX,crashlytics.com,狗狗加速.com\n- DOMAIN-SUFFIX,culturedcode.com,狗狗加速.com\n- DOMAIN-SUFFIX,d.pr,狗狗加速.com\n- DOMAIN-SUFFIX,danilo.to,狗狗加速.com\n- DOMAIN-SUFFIX,dayone.me,狗狗加速.com\n- DOMAIN-SUFFIX,db.tt,狗狗加速.com\n- DOMAIN-SUFFIX,deskconnect.com,狗狗加速.com\n- DOMAIN-SUFFIX,disq.us,狗狗加速.com\n- DOMAIN-SUFFIX,disqus.com,狗狗加速.com\n- DOMAIN-SUFFIX,disquscdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,dnsimple.com,狗狗加速.com\n- DOMAIN-SUFFIX,docker.com,狗狗加速.com\n- DOMAIN-SUFFIX,dribbble.com,狗狗加速.com\n- DOMAIN-SUFFIX,droplr.com,狗狗加速.com\n- DOMAIN-SUFFIX,duckduckgo.com,狗狗加速.com\n- DOMAIN-SUFFIX,dueapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,dytt8.net,狗狗加速.com\n- DOMAIN-SUFFIX,edgecastcdn.net,狗狗加速.com\n- DOMAIN-SUFFIX,edgekey.net,狗狗加速.com\n- DOMAIN-SUFFIX,edgesuite.net,狗狗加速.com\n- DOMAIN-SUFFIX,engadget.com,狗狗加速.com\n- DOMAIN-SUFFIX,entrust.net,狗狗加速.com\n- DOMAIN-SUFFIX,eurekavpt.com,狗狗加速.com\n- DOMAIN-SUFFIX,evernote.com,狗狗加速.com\n- DOMAIN-SUFFIX,fabric.io,狗狗加速.com\n- DOMAIN-SUFFIX,fast.com,狗狗加速.com\n- DOMAIN-SUFFIX,fastly.net,狗狗加速.com\n- DOMAIN-SUFFIX,fc2.com,狗狗加速.com\n- DOMAIN-SUFFIX,feedburner.com,狗狗加速.com\n- DOMAIN-SUFFIX,feedly.com,狗狗加速.com\n- DOMAIN-SUFFIX,feedsportal.com,狗狗加速.com\n- DOMAIN-SUFFIX,fiftythree.com,狗狗加速.com\n- DOMAIN-SUFFIX,firebaseio.com,狗狗加速.com\n- DOMAIN-SUFFIX,flexibits.com,狗狗加速.com\n- DOMAIN-SUFFIX,flickr.com,狗狗加速.com\n- DOMAIN-SUFFIX,flipboard.com,狗狗加速.com\n- DOMAIN-SUFFIX,g.co,狗狗加速.com\n- DOMAIN-SUFFIX,gabia.net,狗狗加速.com\n- DOMAIN-SUFFIX,geni.us,狗狗加速.com\n- DOMAIN-SUFFIX,gfx.ms,狗狗加速.com\n- DOMAIN-SUFFIX,ggpht.com,狗狗加速.com\n- DOMAIN-SUFFIX,ghostnoteapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,git.io,狗狗加速.com\n- DOMAIN-KEYWORD,github,狗狗加速.com\n- DOMAIN-SUFFIX,globalsign.com,狗狗加速.com\n- DOMAIN-SUFFIX,gmodules.com,狗狗加速.com\n- DOMAIN-SUFFIX,godaddy.com,狗狗加速.com\n- DOMAIN-SUFFIX,golang.org,狗狗加速.com\n- DOMAIN-SUFFIX,gongm.in,狗狗加速.com\n- DOMAIN-SUFFIX,goo.gl,狗狗加速.com\n- DOMAIN-SUFFIX,goodreaders.com,狗狗加速.com\n- DOMAIN-SUFFIX,goodreads.com,狗狗加速.com\n- DOMAIN-SUFFIX,gravatar.com,狗狗加速.com\n- DOMAIN-SUFFIX,gstatic.com,狗狗加速.com\n- DOMAIN-SUFFIX,gvt0.com,狗狗加速.com\n- DOMAIN-SUFFIX,hockeyapp.net,狗狗加速.com\n- DOMAIN-SUFFIX,hotmail.com,狗狗加速.com\n- DOMAIN-SUFFIX,icons8.com,狗狗加速.com\n- DOMAIN-SUFFIX,ifixit.com,狗狗加速.com\n- DOMAIN-SUFFIX,ift.tt,狗狗加速.com\n- DOMAIN-SUFFIX,ifttt.com,狗狗加速.com\n- DOMAIN-SUFFIX,iherb.com,狗狗加速.com\n- DOMAIN-SUFFIX,imageshack.us,狗狗加速.com\n- DOMAIN-SUFFIX,img.ly,狗狗加速.com\n- DOMAIN-SUFFIX,imgur.com,狗狗加速.com\n- DOMAIN-SUFFIX,imore.com,狗狗加速.com\n- DOMAIN-SUFFIX,instapaper.com,狗狗加速.com\n- DOMAIN-SUFFIX,ipn.li,狗狗加速.com\n- DOMAIN-SUFFIX,is.gd,狗狗加速.com\n- DOMAIN-SUFFIX,issuu.com,狗狗加速.com\n- DOMAIN-SUFFIX,itgonglun.com,狗狗加速.com\n- DOMAIN-SUFFIX,itun.es,狗狗加速.com\n- DOMAIN-SUFFIX,ixquick.com,狗狗加速.com\n- DOMAIN-SUFFIX,j.mp,狗狗加速.com\n- DOMAIN-SUFFIX,js.revsci.net,狗狗加速.com\n- DOMAIN-SUFFIX,jshint.com,狗狗加速.com\n- DOMAIN-SUFFIX,jtvnw.net,狗狗加速.com\n- DOMAIN-SUFFIX,justgetflux.com,狗狗加速.com\n- DOMAIN-SUFFIX,kat.cr,狗狗加速.com\n- DOMAIN-SUFFIX,klip.me,狗狗加速.com\n- DOMAIN-SUFFIX,libsyn.com,狗狗加速.com\n- DOMAIN-SUFFIX,line-apps.com,狗狗加速.com\n- DOMAIN-SUFFIX,linode.com,狗狗加速.com\n- DOMAIN-SUFFIX,lithium.com,狗狗加速.com\n- DOMAIN-SUFFIX,littlehj.com,狗狗加速.com\n- DOMAIN-SUFFIX,live.com,狗狗加速.com\n- DOMAIN-SUFFIX,live.net,狗狗加速.com\n- DOMAIN-SUFFIX,livefilestore.com,狗狗加速.com\n- DOMAIN-SUFFIX,llnwd.net,狗狗加速.com\n- DOMAIN-SUFFIX,macid.co,狗狗加速.com\n- DOMAIN-SUFFIX,macromedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,macrumors.com,狗狗加速.com\n- DOMAIN-SUFFIX,mashable.com,狗狗加速.com\n- DOMAIN-SUFFIX,mathjax.org,狗狗加速.com\n- DOMAIN-SUFFIX,medium.com,狗狗加速.com\n- DOMAIN-SUFFIX,mega.co.nz,狗狗加速.com\n- DOMAIN-SUFFIX,mega.nz,狗狗加速.com\n- DOMAIN-SUFFIX,megaupload.com,狗狗加速.com\n- DOMAIN-SUFFIX,microsofttranslator.com,狗狗加速.com\n- DOMAIN-SUFFIX,mindnode.com,狗狗加速.com\n- DOMAIN-SUFFIX,mobile01.com,狗狗加速.com\n- DOMAIN-SUFFIX,modmyi.com,狗狗加速.com\n- DOMAIN-SUFFIX,msedge.net,狗狗加速.com\n- DOMAIN-SUFFIX,myfontastic.com,狗狗加速.com\n- DOMAIN-SUFFIX,name.com,狗狗加速.com\n- DOMAIN-SUFFIX,nextmedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,nsstatic.net,狗狗加速.com\n- DOMAIN-SUFFIX,nssurge.com,狗狗加速.com\n- DOMAIN-SUFFIX,nyt.com,狗狗加速.com\n- DOMAIN-SUFFIX,nytimes.com,狗狗加速.com\n- DOMAIN-SUFFIX,omnigroup.com,狗狗加速.com\n- DOMAIN-SUFFIX,onedrive.com,狗狗加速.com\n- DOMAIN-SUFFIX,onenote.com,狗狗加速.com\n- DOMAIN-SUFFIX,ooyala.com,狗狗加速.com\n- DOMAIN-SUFFIX,openvpn.net,狗狗加速.com\n- DOMAIN-SUFFIX,openwrt.org,狗狗加速.com\n- DOMAIN-SUFFIX,orkut.com,狗狗加速.com\n- DOMAIN-SUFFIX,osxdaily.com,狗狗加速.com\n- DOMAIN-SUFFIX,outlook.com,狗狗加速.com\n- DOMAIN-SUFFIX,ow.ly,狗狗加速.com\n- DOMAIN-SUFFIX,paddleapi.com,狗狗加速.com\n- DOMAIN-SUFFIX,parallels.com,狗狗加速.com\n- DOMAIN-SUFFIX,parse.com,狗狗加速.com\n- DOMAIN-SUFFIX,pdfexpert.com,狗狗加速.com\n- DOMAIN-SUFFIX,periscope.tv,狗狗加速.com\n- DOMAIN-SUFFIX,pinboard.in,狗狗加速.com\n- DOMAIN-SUFFIX,pinterest.com,狗狗加速.com\n- DOMAIN-SUFFIX,pixelmator.com,狗狗加速.com\n- DOMAIN-SUFFIX,pixiv.net,狗狗加速.com\n- DOMAIN-SUFFIX,playpcesor.com,狗狗加速.com\n- DOMAIN-SUFFIX,playstation.com,狗狗加速.com\n- DOMAIN-SUFFIX,playstation.com.hk,狗狗加速.com\n- DOMAIN-SUFFIX,playstation.net,狗狗加速.com\n- DOMAIN-SUFFIX,playstationnetwork.com,狗狗加速.com\n- DOMAIN-SUFFIX,pushwoosh.com,狗狗加速.com\n- DOMAIN-SUFFIX,rime.im,狗狗加速.com\n- DOMAIN-SUFFIX,servebom.com,狗狗加速.com\n- DOMAIN-SUFFIX,sfx.ms,狗狗加速.com\n- DOMAIN-SUFFIX,shadowsocks.org,狗狗加速.com\n- DOMAIN-SUFFIX,sharethis.com,狗狗加速.com\n- DOMAIN-SUFFIX,shazam.com,狗狗加速.com\n- DOMAIN-SUFFIX,skype.com,狗狗加速.com\n- DOMAIN-SUFFIX,smartdns狗狗加速.com.com,狗狗加速.com\n- DOMAIN-SUFFIX,smartmailcloud.com,狗狗加速.com\n- DOMAIN-SUFFIX,sndcdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,sony.com,狗狗加速.com\n- DOMAIN-SUFFIX,soundcloud.com,狗狗加速.com\n- DOMAIN-SUFFIX,sourceforge.net,狗狗加速.com\n- DOMAIN-SUFFIX,spotify.com,狗狗加速.com\n- DOMAIN-SUFFIX,squarespace.com,狗狗加速.com\n- DOMAIN-SUFFIX,sstatic.net,狗狗加速.com\n- DOMAIN-SUFFIX,st.luluku.pw,狗狗加速.com\n- DOMAIN-SUFFIX,stackoverflow.com,狗狗加速.com\n- DOMAIN-SUFFIX,startpage.com,狗狗加速.com\n- DOMAIN-SUFFIX,staticflickr.com,狗狗加速.com\n- DOMAIN-SUFFIX,steamcommunity.com,狗狗加速.com\n- DOMAIN-SUFFIX,symauth.com,狗狗加速.com\n- DOMAIN-SUFFIX,symcb.com,狗狗加速.com\n- DOMAIN-SUFFIX,symcd.com,狗狗加速.com\n- DOMAIN-SUFFIX,tapbots.com,狗狗加速.com\n- DOMAIN-SUFFIX,tapbots.net,狗狗加速.com\n- DOMAIN-SUFFIX,tdesktop.com,狗狗加速.com\n- DOMAIN-SUFFIX,techcrunch.com,狗狗加速.com\n- DOMAIN-SUFFIX,techsmith.com,狗狗加速.com\n- DOMAIN-SUFFIX,thepiratebay.org,狗狗加速.com\n- DOMAIN-SUFFIX,theverge.com,狗狗加速.com\n- DOMAIN-SUFFIX,time.com,狗狗加速.com\n- DOMAIN-SUFFIX,timeinc.net,狗狗加速.com\n- DOMAIN-SUFFIX,tiny.cc,狗狗加速.com\n- DOMAIN-SUFFIX,tinypic.com,狗狗加速.com\n- DOMAIN-SUFFIX,tmblr.co,狗狗加速.com\n- DOMAIN-SUFFIX,todoist.com,狗狗加速.com\n- DOMAIN-SUFFIX,trello.com,狗狗加速.com\n- DOMAIN-SUFFIX,trustasiassl.com,狗狗加速.com\n- DOMAIN-SUFFIX,tumblr.co,狗狗加速.com\n- DOMAIN-SUFFIX,tumblr.com,狗狗加速.com\n- DOMAIN-SUFFIX,tweetdeck.com,狗狗加速.com\n- DOMAIN-SUFFIX,tweetmarker.net,狗狗加速.com\n- DOMAIN-SUFFIX,twitch.tv,狗狗加速.com\n- DOMAIN-SUFFIX,txmblr.com,狗狗加速.com\n- DOMAIN-SUFFIX,typekit.net,狗狗加速.com\n- DOMAIN-SUFFIX,ubertags.com,狗狗加速.com\n- DOMAIN-SUFFIX,ublock.org,狗狗加速.com\n- DOMAIN-SUFFIX,ubnt.com,狗狗加速.com\n- DOMAIN-SUFFIX,ulyssesapp.com,狗狗加速.com\n- DOMAIN-SUFFIX,urchin.com,狗狗加速.com\n- DOMAIN-SUFFIX,usertrust.com,狗狗加速.com\n- DOMAIN-SUFFIX,v.gd,狗狗加速.com\n- DOMAIN-SUFFIX,v2ex.com,狗狗加速.com\n- DOMAIN-SUFFIX,vimeo.com,狗狗加速.com\n- DOMAIN-SUFFIX,vimeocdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,vine.co,狗狗加速.com\n- DOMAIN-SUFFIX,vivaldi.com,狗狗加速.com\n- DOMAIN-SUFFIX,vox-cdn.com,狗狗加速.com\n- DOMAIN-SUFFIX,vsco.co,狗狗加速.com\n- DOMAIN-SUFFIX,vultr.com,狗狗加速.com\n- DOMAIN-SUFFIX,w.org,狗狗加速.com\n- DOMAIN-SUFFIX,w3schools.com,狗狗加速.com\n- DOMAIN-SUFFIX,webtype.com,狗狗加速.com\n- DOMAIN-SUFFIX,wikiwand.com,狗狗加速.com\n- DOMAIN-SUFFIX,wikileaks.org,狗狗加速.com\n- DOMAIN-SUFFIX,wikimedia.org,狗狗加速.com\n- DOMAIN-SUFFIX,wikipedia.com,狗狗加速.com\n- DOMAIN-SUFFIX,wikipedia.org,狗狗加速.com\n- DOMAIN-SUFFIX,windows.com,狗狗加速.com\n- DOMAIN-SUFFIX,windows.net,狗狗加速.com\n- DOMAIN-SUFFIX,wire.com,狗狗加速.com\n- DOMAIN-SUFFIX,wordpress.com,狗狗加速.com\n- DOMAIN-SUFFIX,workflowy.com,狗狗加速.com\n- DOMAIN-SUFFIX,wp.com,狗狗加速.com\n- DOMAIN-SUFFIX,wsj.com,狗狗加速.com\n- DOMAIN-SUFFIX,wsj.net,狗狗加速.com\n- DOMAIN-SUFFIX,xda-developers.com,狗狗加速.com\n- DOMAIN-SUFFIX,xeeno.com,狗狗加速.com\n- DOMAIN-SUFFIX,xiti.com,狗狗加速.com\n- DOMAIN-SUFFIX,yahoo.com,狗狗加速.com\n- DOMAIN-SUFFIX,yimg.com,狗狗加速.com\n- DOMAIN-SUFFIX,ying.com,狗狗加速.com\n- DOMAIN-SUFFIX,yoyo.org,狗狗加速.com\n- DOMAIN-SUFFIX,ytimg.com,狗狗加速.com\n- DOMAIN-SUFFIX,signal.org,狗狗加速.com\n- DOMAIN-SUFFIX,whispersystems.org,狗狗加速.com\n- DOMAIN-SUFFIX,cangku.moe,狗狗加速.com\n- DOMAIN-SUFFIX,tradingview.com,狗狗加速.com\n- DOMAIN-SUFFIX,x.com,狗狗加速.com\n- DOMAIN-SUFFIX,asmr.one,狗狗加速.com\n- DOMAIN-SUFFIX,telegra.ph,狗狗加速.com\n- DOMAIN-SUFFIX,telegram.org,狗狗加速.com\n- DOMAIN-SUFFIX,t.me,狗狗加速.com\n- DOMAIN-SUFFIX,telegram.me,狗狗加速.com\n- IP-CIDR,91.108.4.0/22,狗狗加速.com,no-resolve\n- IP-CIDR,91.108.8.0/21,狗狗加速.com,no-resolve\n- IP-CIDR,91.108.16.0/22,狗狗加速.com,no-resolve\n- IP-CIDR,91.108.56.0/22,狗狗加速.com,no-resolve\n- IP-CIDR,149.154.160.0/20,狗狗加速.com,no-resolve\n- IP-CIDR6,2001:67c:4e8::/48,狗狗加速.com,no-resolve\n- IP-CIDR6,2001:b28:f23d::/48,狗狗加速.com,no-resolve\n- IP-CIDR6,2001:b28:f23f::/48,狗狗加速.com,no-resolve\n- IP-CIDR,120.232.181.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.241.147.226/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.253.226/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.255.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.255.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,120.253.255.98/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.150.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.150.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.151.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,180.163.151.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.39.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.40.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.41.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.43.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,203.208.50.0/24,狗狗加速.com,no-resolve\n- IP-CIDR,220.181.174.162/32,狗狗加速.com,no-resolve\n- IP-CIDR,220.181.174.226/32,狗狗加速.com,no-resolve\n- IP-CIDR,220.181.174.34/32,狗狗加速.com,no-resolve\n- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve\n- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve\n- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve\n- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve\n- DOMAIN,injections.adguard.org,DIRECT\n- DOMAIN,local.adguard.org,DIRECT\n- DOMAIN-SUFFIX,local,DIRECT\n- IP-CIDR,127.0.0.0/8,DIRECT\n- IP-CIDR,172.16.0.0/12,DIRECT\n- IP-CIDR,192.168.0.0/16,DIRECT\n- IP-CIDR,10.0.0.0/8,DIRECT\n- IP-CIDR,17.0.0.0/8,DIRECT\n- IP-CIDR,100.64.0.0/10,DIRECT\n- IP-CIDR,224.0.0.0/4,DIRECT\n- IP-CIDR6,fe80::/10,DIRECT\n- GEOIP,CN,DIRECT\n- MATCH,狗狗加速.com\n\"\"\"\n\n# 下载 GFWList 并 Base64 解码\nresponse = requests.get(GFWLIST_URL)\ndecoded_data = base64.b64decode(response.text).decode(\"utf-8\", errors=\"ignore\")\n\n# 解析 GFWList 规则并转换为 Clash 规则格式\nrules = []\nfor line in decoded_data.split(\"\\n\"):\n    line = line.strip()\n    if not line or line.startswith(\"!\") or line.startswith(\"[\") or line.startswith(\"@@\"):  # 忽略注释、无效行和白名单规则\n        continue\n    if line.startswith(\"||\"):  # 处理 DOMAIN-SUFFIX 规则\n        domain = line[2:]\n        rules.append(f\"DOMAIN-SUFFIX,{domain},狗狗加速.com\")\n    elif line.startswith(\"|http\") or line.startswith(\"|https\"):  # 处理 URL 规则\n        match = re.search(r\"\\|\\w+://([^/]+)\", line)\n        if match:\n            domain = match.group(1)\n            rules.append(f\"DOMAIN,{domain},狗狗加速.com\")\n    elif line.startswith(\".\"):  # 处理以点号开头的域名\n        domain = line[1:]\n        rules.append(f\"DOMAIN-SUFFIX,{domain},狗狗加速.com\")\n    elif re.match(r\"^\\d+\\.\\d+\\.\\d+\\.\\d+(\\/\\d+)?$\", line):  # 处理 IP 或 IP-CIDR 规则\n        try:\n            # 如果缺少子网掩码，则添加默认的 /32\n            if '/' not in line:\n                line += '/32'\n            ipaddress.ip_network(line, strict=False)\n            rules.append(f\"IP-CIDR,{line},狗狗加速.com\")\n        except ValueError:\n            continue  # 跳过无效的 IP 或 IP-CIDR\n    else:  # 处理普通域名\n        rules.append(f\"DOMAIN,{line},狗狗加速.com\")\n\n# 记录规则去重\nrule_dict = {}\nremoved_rules = []\ninvalid_rules = []\n\n# 处理 GFWList 规则\nfor rule in rules:\n    parts = rule.split(\",\")\n    if len(parts) >= 3:\n        rule_type, target, policy = parts[0].strip(), parts[1].strip(), parts[2].strip()\n        key = f\"{rule_type},{target}\"\n\n        # 处理 IP-CIDR 规则，确保 IP 和子网掩码合法\n        if rule_type in [\"IP-CIDR\", \"IP-CIDR6\"]:\n            try:\n                ipaddress.ip_network(target, strict=False)  # 检测 CIDR 合法性\n            except ValueError:\n                invalid_rules.append(rule)  # 记录无效的规则\n                continue  # 跳过此规则\n\n        if key not in rule_dict:\n            rule_dict[key] = rule  # 第一次出现的规则直接保留\n        elif policy != \"狗狗加速.com\":\n            removed_rules.append(rule)  # 记录被删除的规则\n\n# 重新整理规则\nfiltered_rules = list(rule_dict.values())\n\n# 将原始规则与过滤后的规则合并\nall_rules = highest_priority_rules.strip() + \"\\n\" + \"\\n\".join([f\"- {rule}\" for rule in filtered_rules])\n\n# 写入优化后的 YAML 文件\noutput_file = \"rules.yaml\"\nwith open(output_file, \"w\", encoding=\"utf-8\") as f:\n    f.write(all_rules)\n\n# 打印被删除的冲突规则\nif removed_rules:\n    print(\"\\n=== 以下规则因冲突被删除（仅保留'狗狗加速.com'的规则） ===\")\n    for rule in removed_rules:\n        print(rule)\n\n# 打印无效 IP-CIDR 规则\nif invalid_rules:\n    print(\"\\n=== 以下无效的 IP-CIDR 规则已被移除 ===\")\n    for rule in invalid_rules:\n        print(rule)\n\nprint(f\"\\n去重完成，优化后的 YAML 文件已保存为: {output_file}\")\n```\n\n程序会将处理好的规则输出到当前目录,名为`rules.yaml`\n\n执行前确保你能打得开[GFWList](https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt),如果打不开,可以自行替换为打得开的链接\n\nGFWList内容如下,打开如果不是这样的那就说明你找错链接了\n\n![20250305153304](https://img.hackerbs.com//20250305153304.png)\n\n## 规则的使用方法\n\n程序输出的内容直接全选,然后打开Clash Verge Rev的订阅 -> 全局扩展覆写配置 -> 右键选择打开文件(如果点编辑会导致自动检查失败)\n\n然后将程序的内容直接粘贴到文末即可\n\n退出Clash Verge Rev,重新打开,使用TUN模式，刷新订阅，点开你的规则组，例如我的狗狗加速.com,按延迟排序,节点测速\n\n因为规则有7361条,所以节点测速时重复点击,大概5分钟后才会测出正常速度,例如15-新加坡Hy2节点，87ms延迟\n\n如果你和我一样用的狗狗加速,需要访问ChatGPT的话就选`🔥ChatGPT`这组\n\n![20250305153734](https://img.hackerbs.com//20250305153734.png)\n\n![20250305153746](https://img.hackerbs.com//20250305153746.png)\n\n![20250305153755](https://img.hackerbs.com//20250305153755.png)\n","slug":"Python实现自动将GFWList规则转换为Clash规则","published":1,"updated":"2025-09-04T06:44:07.222Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwts000q9szwdy96a2bm","content":"<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><h3 id=\"代理客户端为Clash-Verge-Rev\"><a href=\"#代理客户端为Clash-Verge-Rev\" class=\"headerlink\" title=\"代理客户端为Clash Verge Rev\"></a>代理客户端为Clash Verge Rev</h3><p><a href=\"https://github.com/clash-verge-rev/clash-verge-rev\">直达官方github仓库</a></p>\n<h3 id=\"机场为狗狗加速\"><a href=\"#机场为狗狗加速\" class=\"headerlink\" title=\"机场为狗狗加速\"></a>机场为狗狗加速</h3><p><a href=\"https://down.dginv.click/#/register?code=pGwFvdKk\">直达官网</a></p>\n<p>使用邀请码享注册优惠<code>pGwFvdKk</code></p>\n<ul>\n<li><p>高性能海外机场，免费试用，优惠套餐，解锁流媒体，全球首家支持 Hysteria 协议。</p>\n</li>\n<li><p>海外团队，无跑路风险，高达 50% 返佣</p>\n</li>\n<li><p>集群负载均衡设计，高速专线(兼容老客户端)，极低延迟，无视晚高峰，4K 秒开</p>\n</li>\n<li><p>全球首家 Hysteria 协议机场，现已上线更快的 Hysteria2 协议(Clash Verge 客户端最佳搭配)</p>\n</li>\n<li><p>解锁流媒体及 ChatGPT</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>套餐</th>\n<th>流量</th>\n<th>详情</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标准套餐</td>\n<td>160G</td>\n<td>限速150M，无审计，年付9折</td>\n</tr>\n<tr>\n<td>高级套餐</td>\n<td>200G</td>\n<td>不限速，无审计，年付8折,最新Hysteria协议</td>\n</tr>\n<tr>\n<td>豪华套餐</td>\n<td>500G</td>\n<td>不限速,无审计,2年付6折,最新Hysteria2协议,东南亚节点,微信客服技术支持</td>\n</tr>\n</tbody></table>\n<h3 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h3><p>Python 3.13.2</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Clash配置文件的介绍\"><a href=\"#Clash配置文件的介绍\" class=\"headerlink\" title=\"Clash配置文件的介绍\"></a>Clash配置文件的介绍</h2><h3 id=\"其余部分不做介绍-采用机场的配置即可\"><a href=\"#其余部分不做介绍-采用机场的配置即可\" class=\"headerlink\" title=\"其余部分不做介绍,采用机场的配置即可\"></a>其余部分不做介绍,采用机场的配置即可</h3><p>本文只涉及<code>rules:</code>部分,其余部分直接复制下方从狗狗加速官方提取的配置即可</p>\n<p><code>proxies</code>和<code>proxy-groups</code>部分不需要填写,让机场的配置文件覆盖即可,当然下面部分的配置也可以留空,让机场覆盖,只填写<code>rules:</code>部分就可以实现分流</p>\n<p>在编辑配置文件之前,先订阅,然后查看当前配置就可以看到机场的<code>rules:</code>,可以先将其备份,添加到GFWList的规则之前,也就是程序中的最高优先级规则部分</p>\n<p><img src=\"https://img.hackerbs.com//20250305152944.png\" alt=\"20250305152944\"></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mode:</span> <span class=\"string\">rule</span></span><br><span class=\"line\"><span class=\"attr\">mixed-port:</span> <span class=\"number\">7897</span></span><br><span class=\"line\"><span class=\"attr\">allow-lan:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">log-level:</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"attr\">external-controller:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:9097</span></span><br><span class=\"line\"><span class=\"attr\">secret:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">unified-delay:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">tun:</span></span><br><span class=\"line\">  <span class=\"attr\">mtu:</span> <span class=\"number\">1500</span></span><br><span class=\"line\">  <span class=\"attr\">auto-detect-interface:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">auto-route:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">device:</span> <span class=\"string\">Mihomo</span></span><br><span class=\"line\">  <span class=\"attr\">dns-hijack:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">any:53</span></span><br><span class=\"line\">  <span class=\"attr\">stack:</span> <span class=\"string\">mixed</span></span><br><span class=\"line\">  <span class=\"attr\">strict-route:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">dns:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">use-system-hosts:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">listen:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:5335</span></span><br><span class=\"line\">  <span class=\"attr\">default-nameserver:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.76</span><span class=\"number\">.76</span><span class=\"number\">.76</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">182.254</span><span class=\"number\">.118</span><span class=\"number\">.118</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.184</span><span class=\"number\">.2</span><span class=\"number\">.2</span></span><br><span class=\"line\">  <span class=\"attr\">enhanced-mode:</span> <span class=\"string\">fake-ip</span></span><br><span class=\"line\">  <span class=\"attr\">fake-ip-range:</span> <span class=\"number\">198.18</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">/16</span></span><br><span class=\"line\">  <span class=\"attr\">fake-ip-filter:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.lan&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">stun.*.*.*</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">stun.*.*</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.windows.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.nist.gov</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.asia.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.ntp.org.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.openwrt.pool.ntp.org&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.cloud.tencent.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.ustc.edu.cn</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">pool.ntp.org</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp.ubuntu.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp1.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp2.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp3.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp4.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp5.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp6.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp7.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time2.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time3.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time4.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time5.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time6.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time7.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.time.edu.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time2.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time3.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time4.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time5.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time6.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time7.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time2.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time3.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time4.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">music.163.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.music.163.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.126.net&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">musicapi.taihe.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">music.taihe.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">songsearch.kugou.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">trackercdn.kugou.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.kuwo.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">api-jooxtt.sanook.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">api.joox.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">joox.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">y.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.y.qq.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">streamoc.music.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">mobileoc.music.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">isure.stream.qqmusic.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">dl.stream.qqmusic.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">aqqmusic.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">amobile.music.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.xiami.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.music.migu.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">music.migu.cn</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.msftconnecttest.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.msftncsi.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">localhost.ptlogin2.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.*.*.srv.nintendo.net&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.*.stun.playstation.net&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">xbox.*.*.microsoft.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.ipv6.microsoft.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.*.xboxlive.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">speedtest.cros.wr.pvp.net</span></span><br><span class=\"line\">  <span class=\"attr\">nameserver:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.76</span><span class=\"number\">.76</span><span class=\"number\">.76</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">119.29</span><span class=\"number\">.29</span><span class=\"number\">.29</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.184</span><span class=\"number\">.1</span><span class=\"number\">.1</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">223.5</span><span class=\"number\">.5</span><span class=\"number\">.5</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://223.6.6.6/dns-query#h3=true</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://223.5.5.5/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://cloudflare-dns.com/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://doh.pub/dns-query</span></span><br><span class=\"line\">  <span class=\"attr\">fallback:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://000000.dns.nextdns.io/dns-query#h3=true</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://101.101.101.101/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://208.67.220.220/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">tls://8.8.4.4</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">tls://1.0.0.1:853</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://cloudflare-dns.com/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://dns.google/dns-query</span></span><br><span class=\"line\">  <span class=\"attr\">fallback-filter:</span></span><br><span class=\"line\">    <span class=\"attr\">geoip:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">ipcidr:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"number\">240.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/4</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/32</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">/32</span></span><br><span class=\"line\">    <span class=\"attr\">domain:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.google.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.facebook.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.twitter.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.youtube.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.xn--ngstr-lra8j.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.google.cn</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.googleapis.cn</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.googleapis.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.gvt1.com</span></span><br><span class=\"line\">  <span class=\"attr\">ipv6:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">external-controller-cors:</span></span><br><span class=\"line\">  <span class=\"attr\">allow-private-network:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">allow-origins:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">profile:</span></span><br><span class=\"line\">  <span class=\"attr\">store-selected:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"rules部分\"><a href=\"#rules部分\" class=\"headerlink\" title=\"rules部分\"></a>rules部分</h3><p>规则参数:</p>\n<p>DOMAIN - 匹配完整域名,不包含子域名.例如:- DOMAIN,example.com,DIRECT</p>\n<p>DOMAIN-SUFFIX - 匹配域名后缀,可以匹配子域名.例如:- DOMAIN-SUFFIX,example.com,PROXY</p>\n<p>DOMAIN-KEYWORD - 匹配域名中包含的关键字,不限定位置.例如:- DOMAIN-KEYWORD,google,PROXY</p>\n<p>PROCESS-NAME(仅 Clash for Windows &#x2F; Clash Meta 支持) - 匹配进程名,仅适用于 TUN 模式.例如:- PROCESS-NAME,chrome.exe,PROXY</p>\n<p>IP-CIDR - 匹配IPv4 地址段,可以带 no-resolve 以防止 Clash 进行 DNS 解析.例如:- IP-CIDR,192.168.1.0&#x2F;24,DIRECT<br>如果不想 Clash 解析 IP 地址对应的域名,可以加 no-resolve:- IP-CIDR,192.168.1.0&#x2F;24,DIRECT,no-resolve</p>\n<p>IP-CIDR6 - 匹配IPv6 地址段,用法与 IP-CIDR 类似.例如:- IP-CIDR6,2400:3200::&#x2F;32,DIRECT</p>\n<p>GEOIP - 匹配IP 地址归属地(基于 GeoIP 数据库).例如: - GEOIP,CN,DIRECT<br>如果要让 Clash 不解析域名,可以加 no-resolve:- GEOIP,CN,DIRECT,no-resolve</p>\n<p>MATCH - 匹配所有流量,通常作为最后的兜底规则.例如:- MATCH,PROXY</p>\n<p>其中的<code>DIRECT</code>为直连,<code>PROXY</code>为你的<code>proxy-groups</code>的<code>name</code>部分,例如狗狗加速的<code>name: 狗狗加速.com</code>和<code>name: 🔥ChatGPT</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以狗狗加速机场的代理组&quot;🔥ChatGPT&quot;为例</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">DOMAIN-KEYWORD,openai,🔥ChatGPT</span></span><br></pre></td></tr></table></figure>\n\n<p>Clash 按规则的先后顺序进行匹配，第一个匹配成功的规则生效，后面的规则不会再被执行。因此，一般规则顺序建议：</p>\n<ul>\n<li>PROCESS-NAME 规则</li>\n<li>DOMAIN 规则</li>\n<li>DOMAIN-SUFFIX 规则</li>\n<li>DOMAIN-KEYWORD 规则</li>\n<li>IP-CIDR &#x2F; IP-CIDR6 规则</li>\n<li>GEOIP 规则</li>\n<li>MATCH 规则（兜底）</li>\n</ul>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> ipaddress</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># GFWList 地址</span></span><br><span class=\"line\">GFWLIST_URL = <span class=\"string\">&quot;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 预置规则 - 来源于上文提到的机场的规则和你自己手动添加的规则</span></span><br><span class=\"line\"><span class=\"comment\"># 此处预置了狗狗加速机场的规则</span></span><br><span class=\"line\">highest_priority_rules = <span class=\"string\">&quot;&quot;&quot;rules:</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,subapi.doggysub.uk,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,v2ray,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,xray,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,naive,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan-go,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,ss-local,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,privoxy,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,leaf,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,v2ray.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,xray.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,naive.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan-go.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,ss-local.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,privoxy.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,leaf.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge 2,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge 3,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge 4,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge%202,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge%203,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge%204,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Thunder,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,DownloadService,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,qBittorrent,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Transmission,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,fdm,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,aria2c,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Folx,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,NetTransport,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,uTorrent,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,WebTorrent,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,aria2c.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,BitComet.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,fdm.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,NetTransport.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,qbittorrent.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Thunder.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,ThunderVIP.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,transmission-daemon.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,transmission-qt.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,uTorrent.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,WebTorrent.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,aDrive.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,services.googleapis.cn,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xn--ngstr-lra8j.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,safebrowsing.urlsec.qq.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,safebrowsing.googleapis.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,developer.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,digicert.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.comodoca.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.usertrust.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.sectigo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.verisign.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple-dns.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,testflight.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,sandbox.itunes.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,itunes.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apps.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blobstore.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,cvws.icloud-content.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mzstatic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,itunes.apple.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,icloud.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,icloud-content.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,me.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aaplimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cdn20.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cdn-apple.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,akadns.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,akamaiedge.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgekey.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mwcloudcdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mwcname.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple-cloudkit.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple-mapkit.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,gemini.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openaicom-api-bdcpf8c6d2e9atf6.z01.azurefd.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ai.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,api.statsig.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openai.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,segment.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sora.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,openai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,api.msn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,api.statsig.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,assets.msn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,copilot.microsoft.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,gateway.bingviz.microsoft.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,gateway.bingviz.microsoftapp.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,in.appcenter.ms,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,location.microsoft.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,odc.officeapps.live.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,r.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,self.events.data.microsoft.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,services.bingapis.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,sydney.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,www.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,api.microsoftapp.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bing-shopping.microsoft-falcon.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,challenges.cloudflare.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgeservices.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openai.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,segment.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,openaicom-api,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ai.google.dev,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,alkalimakersuite-pa.clients6.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,makersuite.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bard.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,deepmind.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,deepmind.google,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gemini.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,generativeai.google,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,proactivebackend-pa.googleapis.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apis.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,colab,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,developerprofiles,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,generativelanguage,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,cdn.usefathom.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,anthropic.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,claude.ai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,razie.ai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,razie.aws.intellij.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,etbrains.ai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,meta.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,-cn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,126.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,126.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,127.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,163.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,360buyimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,36kr.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,acfun.tv,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,air-matters.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aixifan.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,alicdn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,alipay,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,taobao,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,amap.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,autonavi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,baidu,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bdimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bdstatic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bilibili.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bilivideo.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,caiyunapp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,clouddn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cnbeta.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cnbetacdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cootekservice.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,csdn.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ctrip.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dgtle.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dianping.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,douban.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,doubanio.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,duokan.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,easou.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ele.me,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feng.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fir.im,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,frdic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,g-cores.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,godic.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gtimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,cdn.hockeyapp.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hongxiu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hxcdn.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,iciba.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifeng.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifengimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ipip.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,iqiyi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jd.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jianshu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,knewone.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,le.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,lecloud.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,lemicp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,luoo.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,meituan.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,meituan.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,miaopai.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,microsoft.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,microsoftonline.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,miui.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,miwifi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mob.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,netease.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,office.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,office365.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,officecdn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oschina.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ppsimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pstatp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qcloud.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qdaily.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qdmm.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qhimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qhres.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qidian.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qihucdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qiniu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qiniucdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qiyipic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qq.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qqurl.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,rarbg.to,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ruguoapp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,segmentfault.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sinaapp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,smzdm.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,snapdrop.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sogou.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sogoucdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sohu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,soku.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,speedtest.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sspai.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,suning.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,taobao.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tencent.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tenpay.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tianyancha.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tmall.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tudou.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,umetrip.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,upaiyun.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,upyun.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,veryzhun.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,weather.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,weibo.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiami.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiami.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiaomicp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ximalaya.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xmcdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xunlei.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yhd.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yihaodianimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yinxiang.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ykimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,youdao.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,youku.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zealer.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zhihu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zhimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zimuzu.tv,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zoho.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,fastly-download.epicgames.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,epicgames-download1.akamaized.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,steamcdn-a.akamaihd.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,steamserver.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cm.steampowered.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,synology.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dyndns.org,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,egdownload.fastly-edge.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,amazon,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,google,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,gmail,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,youtube,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,facebook,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fb.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fbcdn.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,twitter,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,instagram,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,dropbox,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,twimg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,blogspot,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,youtu.be,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,whatsapp,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ipleak.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserscan.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,surfsharkdns.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edns.ip-api.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dnsleaktest.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dnsleak.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,expressvpn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nordvpn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,surfshark.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,perfect-privacy.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserleaks.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserleaks.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserleaks.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vpnunlimited.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,whoer.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,whrq.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,admarvel,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,admaster,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adsage,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adsmogo,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adsrvmedia,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adwords,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adservice,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appsflyer.com,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,domob,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,doubleclick.net,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,duomeng,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,dwtrack,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,guanggao,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,lianmeng,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mmstat.com,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,mopub,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,omgmta,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,openx,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,partnerad,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,pingfore,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,supersonicads,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,uedas,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,umeng,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,usage,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vungle.com,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,wlmonitor,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,zjtoolbar,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,linkedin.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,licdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,9to5mac.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,abpchina.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,adblockplus.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,adobe.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,akamaized.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,alfredapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,amplitude.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ampproject.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,android.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,angularjs.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aolcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apkpure.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appledaily.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appshopper.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appspot.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,arcgis.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,archive.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,armorgames.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aspnetcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,att.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,awsstatic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,azurewebsites.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bing.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bintray.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bit.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bit.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bitbucket.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bjango.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bkrtx.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blog.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogger.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogsmithmedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogspot.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogspot.hk,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bloomberg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,box.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,box.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cachefly.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chromium.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cl.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cloudflare.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cloudfront.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cloudmagic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cmail19.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cnet.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cocoapods.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,comodoca.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,crashlytics.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,culturedcode.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,d.pr,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,danilo.to,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dayone.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,db.tt,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,deskconnect.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,disq.us,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,disqus.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,disquscdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dnsimple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,docker.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dribbble.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,droplr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,duckduckgo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dueapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dytt8.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgecastcdn.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgekey.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgesuite.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,engadget.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,entrust.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,eurekavpt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,evernote.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fabric.io,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fast.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fastly.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fc2.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feedburner.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feedly.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feedsportal.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fiftythree.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,firebaseio.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,flexibits.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,flickr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,flipboard.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,g.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gabia.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,geni.us,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gfx.ms,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ggpht.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ghostnoteapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,git.io,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,github,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,globalsign.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gmodules.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,godaddy.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,golang.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gongm.in,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,goo.gl,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,goodreaders.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,goodreads.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gravatar.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gstatic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gvt0.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hockeyapp.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hotmail.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,icons8.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifixit.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ift.tt,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifttt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,iherb.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,imageshack.us,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,img.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,imgur.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,imore.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,instapaper.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ipn.li,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,is.gd,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,issuu.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,itgonglun.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,itun.es,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ixquick.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,j.mp,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,js.revsci.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jshint.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jtvnw.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,justgetflux.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,kat.cr,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,klip.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,libsyn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,line-apps.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,linode.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,lithium.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,littlehj.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,live.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,live.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,livefilestore.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,llnwd.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,macid.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,macromedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,macrumors.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mashable.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mathjax.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,medium.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mega.co.nz,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mega.nz,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,megaupload.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,microsofttranslator.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mindnode.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mobile01.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,modmyi.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,msedge.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,myfontastic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,name.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nextmedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nsstatic.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nssurge.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nyt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nytimes.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,omnigroup.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,onedrive.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,onenote.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ooyala.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openvpn.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openwrt.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,orkut.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,osxdaily.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,outlook.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ow.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,paddleapi.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,parallels.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,parse.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pdfexpert.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,periscope.tv,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pinboard.in,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pinterest.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pixelmator.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pixiv.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playpcesor.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstation.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstation.com.hk,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstation.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstationnetwork.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pushwoosh.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,rime.im,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,servebom.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sfx.ms,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,shadowsocks.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sharethis.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,shazam.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,skype.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,smartdns狗狗加速.com.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,smartmailcloud.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sndcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sony.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,soundcloud.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sourceforge.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,spotify.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,squarespace.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sstatic.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,st.luluku.pw,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,stackoverflow.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,startpage.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,staticflickr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,steamcommunity.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,symauth.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,symcb.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,symcd.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tapbots.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tapbots.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tdesktop.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,techcrunch.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,techsmith.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,thepiratebay.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,theverge.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,time.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,timeinc.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tiny.cc,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tinypic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tmblr.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,todoist.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,trello.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,trustasiassl.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tumblr.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tumblr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tweetdeck.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tweetmarker.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,twitch.tv,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,txmblr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,typekit.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ubertags.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ublock.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ubnt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ulyssesapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,urchin.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,usertrust.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,v.gd,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,v2ex.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vimeo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vimeocdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vine.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vivaldi.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vox-cdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vsco.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vultr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,w.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,w3schools.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,webtype.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikiwand.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikileaks.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikimedia.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikipedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikipedia.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,windows.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,windows.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wire.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wordpress.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,workflowy.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wsj.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wsj.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xda-developers.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xeeno.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiti.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yahoo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yimg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ying.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yoyo.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ytimg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,signal.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,whispersystems.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cangku.moe,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tradingview.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,x.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,asmr.one,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,telegra.ph,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,telegram.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,t.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,telegram.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.4.0/22,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.8.0/21,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.16.0/22,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.56.0/22,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,149.154.160.0/20,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,2001:67c:4e8::/48,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,2001:b28:f23d::/48,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,2001:b28:f23f::/48,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.232.181.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.241.147.226/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.253.226/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.255.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.255.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.255.98/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.150.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.150.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.151.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.151.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.39.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.40.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.41.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.43.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.50.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,220.181.174.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,220.181.174.226/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,220.181.174.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,injections.adguard.org,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,local.adguard.org,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,local,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,127.0.0.0/8,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,172.16.0.0/12,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,192.168.0.0/16,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,10.0.0.0/8,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,17.0.0.0/8,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,100.64.0.0/10,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,224.0.0.0/4,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,fe80::/10,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- GEOIP,CN,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- MATCH,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载 GFWList 并 Base64 解码</span></span><br><span class=\"line\">response = requests.get(GFWLIST_URL)</span><br><span class=\"line\">decoded_data = base64.b64decode(response.text).decode(<span class=\"string\">&quot;utf-8&quot;</span>, errors=<span class=\"string\">&quot;ignore&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解析 GFWList 规则并转换为 Clash 规则格式</span></span><br><span class=\"line\">rules = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> decoded_data.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">    line = line.strip()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> line <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;!&quot;</span>) <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;[&quot;</span>) <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;@@&quot;</span>):  <span class=\"comment\"># 忽略注释、无效行和白名单规则</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> line.startswith(<span class=\"string\">&quot;||&quot;</span>):  <span class=\"comment\"># 处理 DOMAIN-SUFFIX 规则</span></span><br><span class=\"line\">        domain = line[<span class=\"number\">2</span>:]</span><br><span class=\"line\">        rules.append(<span class=\"string\">f&quot;DOMAIN-SUFFIX,<span class=\"subst\">&#123;domain&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> line.startswith(<span class=\"string\">&quot;|http&quot;</span>) <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;|https&quot;</span>):  <span class=\"comment\"># 处理 URL 规则</span></span><br><span class=\"line\">        <span class=\"keyword\">match</span> = re.search(<span class=\"string\">r&quot;\\|\\w+://([^/]+)&quot;</span>, line)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">match</span>:</span><br><span class=\"line\">            domain = <span class=\"keyword\">match</span>.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">            rules.append(<span class=\"string\">f&quot;DOMAIN,<span class=\"subst\">&#123;domain&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> line.startswith(<span class=\"string\">&quot;.&quot;</span>):  <span class=\"comment\"># 处理以点号开头的域名</span></span><br><span class=\"line\">        domain = line[<span class=\"number\">1</span>:]</span><br><span class=\"line\">        rules.append(<span class=\"string\">f&quot;DOMAIN-SUFFIX,<span class=\"subst\">&#123;domain&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> re.<span class=\"keyword\">match</span>(<span class=\"string\">r&quot;^\\d+\\.\\d+\\.\\d+\\.\\d+(\\/\\d+)?$&quot;</span>, line):  <span class=\"comment\"># 处理 IP 或 IP-CIDR 规则</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 如果缺少子网掩码，则添加默认的 /32</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                line += <span class=\"string\">&#x27;/32&#x27;</span></span><br><span class=\"line\">            ipaddress.ip_network(line, strict=<span class=\"literal\">False</span>)</span><br><span class=\"line\">            rules.append(<span class=\"string\">f&quot;IP-CIDR,<span class=\"subst\">&#123;line&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> ValueError:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>  <span class=\"comment\"># 跳过无效的 IP 或 IP-CIDR</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:  <span class=\"comment\"># 处理普通域名</span></span><br><span class=\"line\">        rules.append(<span class=\"string\">f&quot;DOMAIN,<span class=\"subst\">&#123;line&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 记录规则去重</span></span><br><span class=\"line\">rule_dict = &#123;&#125;</span><br><span class=\"line\">removed_rules = []</span><br><span class=\"line\">invalid_rules = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 处理 GFWList 规则</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> rules:</span><br><span class=\"line\">    parts = rule.split(<span class=\"string\">&quot;,&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(parts) &gt;= <span class=\"number\">3</span>:</span><br><span class=\"line\">        rule_type, target, policy = parts[<span class=\"number\">0</span>].strip(), parts[<span class=\"number\">1</span>].strip(), parts[<span class=\"number\">2</span>].strip()</span><br><span class=\"line\">        key = <span class=\"string\">f&quot;<span class=\"subst\">&#123;rule_type&#125;</span>,<span class=\"subst\">&#123;target&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 处理 IP-CIDR 规则，确保 IP 和子网掩码合法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rule_type <span class=\"keyword\">in</span> [<span class=\"string\">&quot;IP-CIDR&quot;</span>, <span class=\"string\">&quot;IP-CIDR6&quot;</span>]:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                ipaddress.ip_network(target, strict=<span class=\"literal\">False</span>)  <span class=\"comment\"># 检测 CIDR 合法性</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> ValueError:</span><br><span class=\"line\">                invalid_rules.append(rule)  <span class=\"comment\"># 记录无效的规则</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span>  <span class=\"comment\"># 跳过此规则</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> key <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> rule_dict:</span><br><span class=\"line\">            rule_dict[key] = rule  <span class=\"comment\"># 第一次出现的规则直接保留</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> policy != <span class=\"string\">&quot;狗狗加速.com&quot;</span>:</span><br><span class=\"line\">            removed_rules.append(rule)  <span class=\"comment\"># 记录被删除的规则</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新整理规则</span></span><br><span class=\"line\">filtered_rules = <span class=\"built_in\">list</span>(rule_dict.values())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将原始规则与过滤后的规则合并</span></span><br><span class=\"line\">all_rules = highest_priority_rules.strip() + <span class=\"string\">&quot;\\n&quot;</span> + <span class=\"string\">&quot;\\n&quot;</span>.join([<span class=\"string\">f&quot;- <span class=\"subst\">&#123;rule&#125;</span>&quot;</span> <span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> filtered_rules])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入优化后的 YAML 文件</span></span><br><span class=\"line\">output_file = <span class=\"string\">&quot;rules.yaml&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(output_file, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(all_rules)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印被删除的冲突规则</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> removed_rules:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n=== 以下规则因冲突被删除（仅保留&#x27;狗狗加速.com&#x27;的规则） ===&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> removed_rules:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(rule)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印无效 IP-CIDR 规则</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> invalid_rules:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n=== 以下无效的 IP-CIDR 规则已被移除 ===&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> invalid_rules:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(rule)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;\\n去重完成，优化后的 YAML 文件已保存为: <span class=\"subst\">&#123;output_file&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>程序会将处理好的规则输出到当前目录,名为<code>rules.yaml</code></p>\n<p>执行前确保你能打得开<a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\">GFWList</a>,如果打不开,可以自行替换为打得开的链接</p>\n<p>GFWList内容如下,打开如果不是这样的那就说明你找错链接了</p>\n<p><img src=\"https://img.hackerbs.com//20250305153304.png\" alt=\"20250305153304\"></p>\n<h2 id=\"规则的使用方法\"><a href=\"#规则的使用方法\" class=\"headerlink\" title=\"规则的使用方法\"></a>规则的使用方法</h2><p>程序输出的内容直接全选,然后打开Clash Verge Rev的订阅 -&gt; 全局扩展覆写配置 -&gt; 右键选择打开文件(如果点编辑会导致自动检查失败)</p>\n<p>然后将程序的内容直接粘贴到文末即可</p>\n<p>退出Clash Verge Rev,重新打开,使用TUN模式，刷新订阅，点开你的规则组，例如我的狗狗加速.com,按延迟排序,节点测速</p>\n<p>因为规则有7361条,所以节点测速时重复点击,大概5分钟后才会测出正常速度,例如15-新加坡Hy2节点，87ms延迟</p>\n<p>如果你和我一样用的狗狗加速,需要访问ChatGPT的话就选<code>🔥ChatGPT</code>这组</p>\n<p><img src=\"https://img.hackerbs.com//20250305153734.png\" alt=\"20250305153734\"></p>\n<p><img src=\"https://img.hackerbs.com//20250305153746.png\" alt=\"20250305153746\"></p>\n<p><img src=\"https://img.hackerbs.com//20250305153755.png\" alt=\"20250305153755\"></p>\n","site":{"data":{}},"length":6181,"excerpt":"<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><h3 id=\"代理客户端为Clash-Verge-Rev\"><a href=\"#代理客户端为Clash-Verge-Rev\" class=\"headerlink\" title=\"代理客户端为Clash Verge Rev\"></a>代理客户端为Clash Verge Rev</h3><p><a href=\"https://github.com/clash-verge-rev/clash-verge-rev\">直达官方github仓库</a></p>\n<h3 id=\"机场为狗狗加速\"><a href=\"#机场为狗狗加速\" class=\"headerlink\" title=\"机场为狗狗加速\"></a>机场为狗狗加速</h3><p><a href=\"https://down.dginv.click/#/register?code=pGwFvdKk\">直达官网</a></p>\n<p>使用邀请码享注册优惠<code>pGwFvdKk</code></p>\n<ul>\n<li><p>高性能海外机场，免费试用，优惠套餐，解锁流媒体，全球首家支持 Hysteria 协议。</p>\n</li>\n<li><p>海外团队，无跑路风险，高达 50% 返佣</p>\n</li>\n<li><p>集群负载均衡设计，高速专线(兼容老客户端)，极低延迟，无视晚高峰，4K 秒开</p>\n</li>\n<li><p>全球首家 Hysteria 协议机场，现已上线更快的 Hysteria2 协议(Clash Verge 客户端最佳搭配)</p>\n</li>\n<li><p>解锁流媒体及 ChatGPT</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>套餐</th>\n<th>流量</th>\n<th>详情</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标准套餐</td>\n<td>160G</td>\n<td>限速150M，无审计，年付9折</td>\n</tr>\n<tr>\n<td>高级套餐</td>\n<td>200G</td>\n<td>不限速，无审计，年付8折,最新Hysteria协议</td>\n</tr>\n<tr>\n<td>豪华套餐</td>\n<td>500G</td>\n<td>不限速,无审计,2年付6折,最新Hysteria2协议,东南亚节点,微信客服技术支持</td>\n</tr>\n</tbody></table>\n<h3 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h3><p>Python 3.13.2</p>","more":"<h2 id=\"Clash配置文件的介绍\"><a href=\"#Clash配置文件的介绍\" class=\"headerlink\" title=\"Clash配置文件的介绍\"></a>Clash配置文件的介绍</h2><h3 id=\"其余部分不做介绍-采用机场的配置即可\"><a href=\"#其余部分不做介绍-采用机场的配置即可\" class=\"headerlink\" title=\"其余部分不做介绍,采用机场的配置即可\"></a>其余部分不做介绍,采用机场的配置即可</h3><p>本文只涉及<code>rules:</code>部分,其余部分直接复制下方从狗狗加速官方提取的配置即可</p>\n<p><code>proxies</code>和<code>proxy-groups</code>部分不需要填写,让机场的配置文件覆盖即可,当然下面部分的配置也可以留空,让机场覆盖,只填写<code>rules:</code>部分就可以实现分流</p>\n<p>在编辑配置文件之前,先订阅,然后查看当前配置就可以看到机场的<code>rules:</code>,可以先将其备份,添加到GFWList的规则之前,也就是程序中的最高优先级规则部分</p>\n<p><img src=\"https://img.hackerbs.com//20250305152944.png\" alt=\"20250305152944\"></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mode:</span> <span class=\"string\">rule</span></span><br><span class=\"line\"><span class=\"attr\">mixed-port:</span> <span class=\"number\">7897</span></span><br><span class=\"line\"><span class=\"attr\">allow-lan:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">log-level:</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"attr\">external-controller:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:9097</span></span><br><span class=\"line\"><span class=\"attr\">secret:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">unified-delay:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">tun:</span></span><br><span class=\"line\">  <span class=\"attr\">mtu:</span> <span class=\"number\">1500</span></span><br><span class=\"line\">  <span class=\"attr\">auto-detect-interface:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">auto-route:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">device:</span> <span class=\"string\">Mihomo</span></span><br><span class=\"line\">  <span class=\"attr\">dns-hijack:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">any:53</span></span><br><span class=\"line\">  <span class=\"attr\">stack:</span> <span class=\"string\">mixed</span></span><br><span class=\"line\">  <span class=\"attr\">strict-route:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">dns:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">use-system-hosts:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">listen:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:5335</span></span><br><span class=\"line\">  <span class=\"attr\">default-nameserver:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.76</span><span class=\"number\">.76</span><span class=\"number\">.76</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">182.254</span><span class=\"number\">.118</span><span class=\"number\">.118</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.184</span><span class=\"number\">.2</span><span class=\"number\">.2</span></span><br><span class=\"line\">  <span class=\"attr\">enhanced-mode:</span> <span class=\"string\">fake-ip</span></span><br><span class=\"line\">  <span class=\"attr\">fake-ip-range:</span> <span class=\"number\">198.18</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">/16</span></span><br><span class=\"line\">  <span class=\"attr\">fake-ip-filter:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.lan&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">stun.*.*.*</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">stun.*.*</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.windows.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.nist.gov</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.asia.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.ntp.org.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.openwrt.pool.ntp.org&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.cloud.tencent.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time.ustc.edu.cn</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">pool.ntp.org</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp.ubuntu.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp1.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp2.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp3.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp4.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp5.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp6.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ntp7.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time2.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time3.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time4.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time5.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time6.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time7.aliyun.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.time.edu.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time2.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time3.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time4.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time5.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time6.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time7.apple.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time1.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time2.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time3.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">time4.google.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">music.163.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.music.163.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.126.net&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">musicapi.taihe.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">music.taihe.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">songsearch.kugou.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">trackercdn.kugou.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.kuwo.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">api-jooxtt.sanook.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">api.joox.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">joox.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">y.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.y.qq.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">streamoc.music.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">mobileoc.music.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">isure.stream.qqmusic.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">dl.stream.qqmusic.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">aqqmusic.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">amobile.music.tc.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.xiami.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.music.migu.cn&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">music.migu.cn</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.msftconnecttest.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.msftncsi.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">localhost.ptlogin2.qq.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.*.*.srv.nintendo.net&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.*.stun.playstation.net&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">xbox.*.*.microsoft.com</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.ipv6.microsoft.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.*.xboxlive.com&#x27;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">speedtest.cros.wr.pvp.net</span></span><br><span class=\"line\">  <span class=\"attr\">nameserver:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.76</span><span class=\"number\">.76</span><span class=\"number\">.76</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">119.29</span><span class=\"number\">.29</span><span class=\"number\">.29</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">180.184</span><span class=\"number\">.1</span><span class=\"number\">.1</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">223.5</span><span class=\"number\">.5</span><span class=\"number\">.5</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://223.6.6.6/dns-query#h3=true</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://223.5.5.5/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://cloudflare-dns.com/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://doh.pub/dns-query</span></span><br><span class=\"line\">  <span class=\"attr\">fallback:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://000000.dns.nextdns.io/dns-query#h3=true</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://101.101.101.101/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://208.67.220.220/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">tls://8.8.4.4</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">tls://1.0.0.1:853</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://cloudflare-dns.com/dns-query</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">https://dns.google/dns-query</span></span><br><span class=\"line\">  <span class=\"attr\">fallback-filter:</span></span><br><span class=\"line\">    <span class=\"attr\">geoip:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">ipcidr:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"number\">240.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/4</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/32</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">/32</span></span><br><span class=\"line\">    <span class=\"attr\">domain:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.google.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.facebook.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.twitter.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.youtube.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.xn--ngstr-lra8j.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.google.cn</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.googleapis.cn</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.googleapis.com</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">+.gvt1.com</span></span><br><span class=\"line\">  <span class=\"attr\">ipv6:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">external-controller-cors:</span></span><br><span class=\"line\">  <span class=\"attr\">allow-private-network:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">allow-origins:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">profile:</span></span><br><span class=\"line\">  <span class=\"attr\">store-selected:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"rules部分\"><a href=\"#rules部分\" class=\"headerlink\" title=\"rules部分\"></a>rules部分</h3><p>规则参数:</p>\n<p>DOMAIN - 匹配完整域名,不包含子域名.例如:- DOMAIN,example.com,DIRECT</p>\n<p>DOMAIN-SUFFIX - 匹配域名后缀,可以匹配子域名.例如:- DOMAIN-SUFFIX,example.com,PROXY</p>\n<p>DOMAIN-KEYWORD - 匹配域名中包含的关键字,不限定位置.例如:- DOMAIN-KEYWORD,google,PROXY</p>\n<p>PROCESS-NAME(仅 Clash for Windows &#x2F; Clash Meta 支持) - 匹配进程名,仅适用于 TUN 模式.例如:- PROCESS-NAME,chrome.exe,PROXY</p>\n<p>IP-CIDR - 匹配IPv4 地址段,可以带 no-resolve 以防止 Clash 进行 DNS 解析.例如:- IP-CIDR,192.168.1.0&#x2F;24,DIRECT<br>如果不想 Clash 解析 IP 地址对应的域名,可以加 no-resolve:- IP-CIDR,192.168.1.0&#x2F;24,DIRECT,no-resolve</p>\n<p>IP-CIDR6 - 匹配IPv6 地址段,用法与 IP-CIDR 类似.例如:- IP-CIDR6,2400:3200::&#x2F;32,DIRECT</p>\n<p>GEOIP - 匹配IP 地址归属地(基于 GeoIP 数据库).例如: - GEOIP,CN,DIRECT<br>如果要让 Clash 不解析域名,可以加 no-resolve:- GEOIP,CN,DIRECT,no-resolve</p>\n<p>MATCH - 匹配所有流量,通常作为最后的兜底规则.例如:- MATCH,PROXY</p>\n<p>其中的<code>DIRECT</code>为直连,<code>PROXY</code>为你的<code>proxy-groups</code>的<code>name</code>部分,例如狗狗加速的<code>name: 狗狗加速.com</code>和<code>name: 🔥ChatGPT</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以狗狗加速机场的代理组&quot;🔥ChatGPT&quot;为例</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">DOMAIN-KEYWORD,openai,🔥ChatGPT</span></span><br></pre></td></tr></table></figure>\n\n<p>Clash 按规则的先后顺序进行匹配，第一个匹配成功的规则生效，后面的规则不会再被执行。因此，一般规则顺序建议：</p>\n<ul>\n<li>PROCESS-NAME 规则</li>\n<li>DOMAIN 规则</li>\n<li>DOMAIN-SUFFIX 规则</li>\n<li>DOMAIN-KEYWORD 规则</li>\n<li>IP-CIDR &#x2F; IP-CIDR6 规则</li>\n<li>GEOIP 规则</li>\n<li>MATCH 规则（兜底）</li>\n</ul>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> ipaddress</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># GFWList 地址</span></span><br><span class=\"line\">GFWLIST_URL = <span class=\"string\">&quot;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 预置规则 - 来源于上文提到的机场的规则和你自己手动添加的规则</span></span><br><span class=\"line\"><span class=\"comment\"># 此处预置了狗狗加速机场的规则</span></span><br><span class=\"line\">highest_priority_rules = <span class=\"string\">&quot;&quot;&quot;rules:</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,subapi.doggysub.uk,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,v2ray,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,xray,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,naive,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan-go,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,ss-local,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,privoxy,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,leaf,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,v2ray.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,xray.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,naive.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,trojan-go.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,ss-local.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,privoxy.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,leaf.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge 2,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge 3,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge 4,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge%202,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge%203,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Surge%204,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Thunder,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,DownloadService,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,qBittorrent,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Transmission,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,fdm,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,aria2c,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Folx,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,NetTransport,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,uTorrent,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,WebTorrent,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,aria2c.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,BitComet.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,fdm.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,NetTransport.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,qbittorrent.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,Thunder.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,ThunderVIP.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,transmission-daemon.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,transmission-qt.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,uTorrent.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,WebTorrent.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- PROCESS-NAME,aDrive.exe,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,services.googleapis.cn,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xn--ngstr-lra8j.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,safebrowsing.urlsec.qq.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,safebrowsing.googleapis.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,developer.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,digicert.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.comodoca.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.usertrust.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.sectigo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ocsp.verisign.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple-dns.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,testflight.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,sandbox.itunes.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,itunes.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apps.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blobstore.apple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,cvws.icloud-content.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mzstatic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,itunes.apple.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,icloud.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,icloud-content.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,me.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aaplimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cdn20.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cdn-apple.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,akadns.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,akamaiedge.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgekey.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mwcloudcdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mwcname.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple-cloudkit.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apple-mapkit.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,gemini.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openaicom-api-bdcpf8c6d2e9atf6.z01.azurefd.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ai.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,api.statsig.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openai.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,segment.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sora.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,openai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,api.msn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,api.statsig.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,assets.msn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,browser-intake-datadoghq.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,chat.openai.com.cdn.cloudflare.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,copilot.microsoft.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,gateway.bingviz.microsoft.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,gateway.bingviz.microsoftapp.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,in.appcenter.ms,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,location.microsoft.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,odc.officeapps.live.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openai-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,openaicomproductionae4b.blob.core.windows.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,production-openaicom-storage.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,r.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,self.events.data.microsoft.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,services.bingapis.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,static.cloudflareinsights.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,sydney.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,www.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,algolia.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,api.microsoftapp.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,auth0.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bing-shopping.microsoft-falcon.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,challenges.cloudflare.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chatgpt.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,client-api.arkoselabs.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgeservices.bing.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,events.statsigapi.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,featuregates.org,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,host.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,identrust.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercom.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,intercomcdn.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,launchdarkly.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaistatic.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oaiusercontent.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,observeit.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openai.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaiapi-site.azureedge.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openaicom.imgix.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,segment.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sentry.io,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,stripe.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,turn.livekit.cloud,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,openaicom-api,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,ai.google.dev,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,alkalimakersuite-pa.clients6.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,makersuite.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bard.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,deepmind.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,deepmind.google,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gemini.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,generativeai.google,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,proactivebackend-pa.googleapis.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apis.google.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,colab,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,developerprofiles,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,generativelanguage,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,cdn.usefathom.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,anthropic.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,claude.ai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,razie.ai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,razie.aws.intellij.net,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,etbrains.ai,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,meta.com,🔥ChatGPT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,-cn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,126.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,126.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,127.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,163.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,360buyimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,36kr.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,acfun.tv,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,air-matters.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aixifan.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,alicdn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,alipay,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,taobao,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,amap.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,autonavi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,baidu,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bdimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bdstatic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bilibili.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bilivideo.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,caiyunapp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,clouddn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cnbeta.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cnbetacdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cootekservice.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,csdn.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ctrip.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dgtle.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dianping.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,douban.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,doubanio.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,duokan.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,easou.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ele.me,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feng.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fir.im,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,frdic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,g-cores.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,godic.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gtimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,cdn.hockeyapp.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hongxiu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hxcdn.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,iciba.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifeng.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifengimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ipip.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,iqiyi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jd.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jianshu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,knewone.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,le.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,lecloud.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,lemicp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,luoo.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,meituan.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,meituan.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,miaopai.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,microsoft.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,microsoftonline.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,miui.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,miwifi.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mob.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,netease.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,office.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,office365.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,officecdn,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,oschina.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ppsimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pstatp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qcloud.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qdaily.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qdmm.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qhimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qhres.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qidian.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qihucdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qiniu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qiniucdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qiyipic.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qq.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,qqurl.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,rarbg.to,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ruguoapp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,segmentfault.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sinaapp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,smzdm.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,snapdrop.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sogou.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sogoucdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sohu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,soku.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,speedtest.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sspai.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,suning.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,taobao.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tencent.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tenpay.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tianyancha.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tmall.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tudou.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,umetrip.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,upaiyun.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,upyun.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,veryzhun.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,weather.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,weibo.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiami.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiami.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiaomicp.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ximalaya.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xmcdn.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xunlei.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yhd.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yihaodianimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yinxiang.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ykimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,youdao.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,youku.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zealer.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zhihu.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zhimg.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zimuzu.tv,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,zoho.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,fastly-download.epicgames.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,epicgames-download1.akamaized.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,steamcdn-a.akamaihd.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,steamserver.net,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cm.steampowered.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,synology.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dyndns.org,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,egdownload.fastly-edge.com,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,amazon,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,google,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,gmail,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,youtube,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,facebook,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fb.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fbcdn.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,twitter,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,instagram,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,dropbox,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,twimg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,blogspot,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,youtu.be,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,whatsapp,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ipleak.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserscan.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,surfsharkdns.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edns.ip-api.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dnsleaktest.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dnsleak.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,expressvpn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nordvpn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,surfshark.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,perfect-privacy.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserleaks.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserleaks.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,browserleaks.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vpnunlimited.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,whoer.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,whrq.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,admarvel,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,admaster,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adsage,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adsmogo,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adsrvmedia,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adwords,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,adservice,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appsflyer.com,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,domob,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,doubleclick.net,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,duomeng,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,dwtrack,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,guanggao,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,lianmeng,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mmstat.com,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,mopub,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,omgmta,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,openx,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,partnerad,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,pingfore,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,supersonicads,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,uedas,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,umeng,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,usage,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vungle.com,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,wlmonitor,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,zjtoolbar,REJECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,linkedin.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,licdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,9to5mac.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,abpchina.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,adblockplus.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,adobe.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,akamaized.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,alfredapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,amplitude.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ampproject.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,android.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,angularjs.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aolcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,apkpure.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appledaily.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appshopper.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,appspot.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,arcgis.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,archive.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,armorgames.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,aspnetcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,att.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,awsstatic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,azurewebsites.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bing.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bintray.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bit.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bit.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bitbucket.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bjango.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bkrtx.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blog.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogger.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogsmithmedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogspot.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,blogspot.hk,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,bloomberg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,box.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,box.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cachefly.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,chromium.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cl.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cloudflare.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cloudfront.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cloudmagic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cmail19.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cnet.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cocoapods.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,comodoca.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,crashlytics.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,culturedcode.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,d.pr,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,danilo.to,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dayone.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,db.tt,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,deskconnect.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,disq.us,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,disqus.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,disquscdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dnsimple.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,docker.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dribbble.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,droplr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,duckduckgo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dueapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,dytt8.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgecastcdn.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgekey.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,edgesuite.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,engadget.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,entrust.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,eurekavpt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,evernote.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fabric.io,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fast.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fastly.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fc2.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feedburner.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feedly.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,feedsportal.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,fiftythree.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,firebaseio.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,flexibits.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,flickr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,flipboard.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,g.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gabia.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,geni.us,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gfx.ms,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ggpht.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ghostnoteapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,git.io,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-KEYWORD,github,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,globalsign.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gmodules.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,godaddy.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,golang.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gongm.in,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,goo.gl,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,goodreaders.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,goodreads.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gravatar.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gstatic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,gvt0.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hockeyapp.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,hotmail.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,icons8.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifixit.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ift.tt,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ifttt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,iherb.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,imageshack.us,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,img.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,imgur.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,imore.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,instapaper.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ipn.li,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,is.gd,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,issuu.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,itgonglun.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,itun.es,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ixquick.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,j.mp,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,js.revsci.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jshint.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,jtvnw.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,justgetflux.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,kat.cr,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,klip.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,libsyn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,line-apps.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,linode.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,lithium.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,littlehj.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,live.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,live.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,livefilestore.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,llnwd.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,macid.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,macromedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,macrumors.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mashable.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mathjax.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,medium.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mega.co.nz,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mega.nz,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,megaupload.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,microsofttranslator.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mindnode.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,mobile01.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,modmyi.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,msedge.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,myfontastic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,name.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nextmedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nsstatic.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nssurge.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nyt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,nytimes.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,omnigroup.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,onedrive.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,onenote.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ooyala.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openvpn.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,openwrt.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,orkut.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,osxdaily.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,outlook.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ow.ly,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,paddleapi.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,parallels.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,parse.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pdfexpert.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,periscope.tv,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pinboard.in,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pinterest.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pixelmator.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pixiv.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playpcesor.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstation.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstation.com.hk,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstation.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,playstationnetwork.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,pushwoosh.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,rime.im,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,servebom.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sfx.ms,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,shadowsocks.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sharethis.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,shazam.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,skype.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,smartdns狗狗加速.com.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,smartmailcloud.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sndcdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sony.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,soundcloud.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sourceforge.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,spotify.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,squarespace.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,sstatic.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,st.luluku.pw,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,stackoverflow.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,startpage.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,staticflickr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,steamcommunity.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,symauth.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,symcb.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,symcd.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tapbots.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tapbots.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tdesktop.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,techcrunch.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,techsmith.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,thepiratebay.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,theverge.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,time.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,timeinc.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tiny.cc,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tinypic.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tmblr.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,todoist.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,trello.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,trustasiassl.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tumblr.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tumblr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tweetdeck.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tweetmarker.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,twitch.tv,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,txmblr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,typekit.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ubertags.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ublock.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ubnt.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ulyssesapp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,urchin.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,usertrust.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,v.gd,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,v2ex.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vimeo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vimeocdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vine.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vivaldi.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vox-cdn.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vsco.co,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,vultr.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,w.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,w3schools.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,webtype.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikiwand.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikileaks.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikimedia.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikipedia.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wikipedia.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,windows.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,windows.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wire.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wordpress.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,workflowy.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wp.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wsj.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,wsj.net,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xda-developers.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xeeno.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,xiti.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yahoo.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yimg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ying.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,yoyo.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,ytimg.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,signal.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,whispersystems.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,cangku.moe,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,tradingview.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,x.com,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,asmr.one,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,telegra.ph,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,telegram.org,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,t.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,telegram.me,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.4.0/22,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.8.0/21,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.16.0/22,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,91.108.56.0/22,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,149.154.160.0/20,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,2001:67c:4e8::/48,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,2001:b28:f23d::/48,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,2001:b28:f23f::/48,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.232.181.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.241.147.226/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.253.226/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.255.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.255.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,120.253.255.98/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.150.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.150.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.151.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,180.163.151.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.39.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.40.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.41.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.43.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,203.208.50.0/24,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,220.181.174.162/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,220.181.174.226/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,220.181.174.34/32,狗狗加速.com,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,24.199.123.28/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,64.23.132.171/32,🔥ChatGPT,no-resolve</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,injections.adguard.org,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN,local.adguard.org,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- DOMAIN-SUFFIX,local,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,127.0.0.0/8,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,172.16.0.0/12,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,192.168.0.0/16,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,10.0.0.0/8,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,17.0.0.0/8,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,100.64.0.0/10,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR,224.0.0.0/4,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- IP-CIDR6,fe80::/10,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- GEOIP,CN,DIRECT</span></span><br><span class=\"line\"><span class=\"string\">- MATCH,狗狗加速.com</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载 GFWList 并 Base64 解码</span></span><br><span class=\"line\">response = requests.get(GFWLIST_URL)</span><br><span class=\"line\">decoded_data = base64.b64decode(response.text).decode(<span class=\"string\">&quot;utf-8&quot;</span>, errors=<span class=\"string\">&quot;ignore&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解析 GFWList 规则并转换为 Clash 规则格式</span></span><br><span class=\"line\">rules = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> decoded_data.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">    line = line.strip()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> line <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;!&quot;</span>) <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;[&quot;</span>) <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;@@&quot;</span>):  <span class=\"comment\"># 忽略注释、无效行和白名单规则</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> line.startswith(<span class=\"string\">&quot;||&quot;</span>):  <span class=\"comment\"># 处理 DOMAIN-SUFFIX 规则</span></span><br><span class=\"line\">        domain = line[<span class=\"number\">2</span>:]</span><br><span class=\"line\">        rules.append(<span class=\"string\">f&quot;DOMAIN-SUFFIX,<span class=\"subst\">&#123;domain&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> line.startswith(<span class=\"string\">&quot;|http&quot;</span>) <span class=\"keyword\">or</span> line.startswith(<span class=\"string\">&quot;|https&quot;</span>):  <span class=\"comment\"># 处理 URL 规则</span></span><br><span class=\"line\">        <span class=\"keyword\">match</span> = re.search(<span class=\"string\">r&quot;\\|\\w+://([^/]+)&quot;</span>, line)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">match</span>:</span><br><span class=\"line\">            domain = <span class=\"keyword\">match</span>.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">            rules.append(<span class=\"string\">f&quot;DOMAIN,<span class=\"subst\">&#123;domain&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> line.startswith(<span class=\"string\">&quot;.&quot;</span>):  <span class=\"comment\"># 处理以点号开头的域名</span></span><br><span class=\"line\">        domain = line[<span class=\"number\">1</span>:]</span><br><span class=\"line\">        rules.append(<span class=\"string\">f&quot;DOMAIN-SUFFIX,<span class=\"subst\">&#123;domain&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> re.<span class=\"keyword\">match</span>(<span class=\"string\">r&quot;^\\d+\\.\\d+\\.\\d+\\.\\d+(\\/\\d+)?$&quot;</span>, line):  <span class=\"comment\"># 处理 IP 或 IP-CIDR 规则</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 如果缺少子网掩码，则添加默认的 /32</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;/&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                line += <span class=\"string\">&#x27;/32&#x27;</span></span><br><span class=\"line\">            ipaddress.ip_network(line, strict=<span class=\"literal\">False</span>)</span><br><span class=\"line\">            rules.append(<span class=\"string\">f&quot;IP-CIDR,<span class=\"subst\">&#123;line&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> ValueError:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>  <span class=\"comment\"># 跳过无效的 IP 或 IP-CIDR</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:  <span class=\"comment\"># 处理普通域名</span></span><br><span class=\"line\">        rules.append(<span class=\"string\">f&quot;DOMAIN,<span class=\"subst\">&#123;line&#125;</span>,狗狗加速.com&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 记录规则去重</span></span><br><span class=\"line\">rule_dict = &#123;&#125;</span><br><span class=\"line\">removed_rules = []</span><br><span class=\"line\">invalid_rules = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 处理 GFWList 规则</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> rules:</span><br><span class=\"line\">    parts = rule.split(<span class=\"string\">&quot;,&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(parts) &gt;= <span class=\"number\">3</span>:</span><br><span class=\"line\">        rule_type, target, policy = parts[<span class=\"number\">0</span>].strip(), parts[<span class=\"number\">1</span>].strip(), parts[<span class=\"number\">2</span>].strip()</span><br><span class=\"line\">        key = <span class=\"string\">f&quot;<span class=\"subst\">&#123;rule_type&#125;</span>,<span class=\"subst\">&#123;target&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 处理 IP-CIDR 规则，确保 IP 和子网掩码合法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rule_type <span class=\"keyword\">in</span> [<span class=\"string\">&quot;IP-CIDR&quot;</span>, <span class=\"string\">&quot;IP-CIDR6&quot;</span>]:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                ipaddress.ip_network(target, strict=<span class=\"literal\">False</span>)  <span class=\"comment\"># 检测 CIDR 合法性</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> ValueError:</span><br><span class=\"line\">                invalid_rules.append(rule)  <span class=\"comment\"># 记录无效的规则</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span>  <span class=\"comment\"># 跳过此规则</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> key <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> rule_dict:</span><br><span class=\"line\">            rule_dict[key] = rule  <span class=\"comment\"># 第一次出现的规则直接保留</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> policy != <span class=\"string\">&quot;狗狗加速.com&quot;</span>:</span><br><span class=\"line\">            removed_rules.append(rule)  <span class=\"comment\"># 记录被删除的规则</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新整理规则</span></span><br><span class=\"line\">filtered_rules = <span class=\"built_in\">list</span>(rule_dict.values())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将原始规则与过滤后的规则合并</span></span><br><span class=\"line\">all_rules = highest_priority_rules.strip() + <span class=\"string\">&quot;\\n&quot;</span> + <span class=\"string\">&quot;\\n&quot;</span>.join([<span class=\"string\">f&quot;- <span class=\"subst\">&#123;rule&#125;</span>&quot;</span> <span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> filtered_rules])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入优化后的 YAML 文件</span></span><br><span class=\"line\">output_file = <span class=\"string\">&quot;rules.yaml&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(output_file, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(all_rules)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印被删除的冲突规则</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> removed_rules:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n=== 以下规则因冲突被删除（仅保留&#x27;狗狗加速.com&#x27;的规则） ===&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> removed_rules:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(rule)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印无效 IP-CIDR 规则</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> invalid_rules:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n=== 以下无效的 IP-CIDR 规则已被移除 ===&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> rule <span class=\"keyword\">in</span> invalid_rules:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(rule)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;\\n去重完成，优化后的 YAML 文件已保存为: <span class=\"subst\">&#123;output_file&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>程序会将处理好的规则输出到当前目录,名为<code>rules.yaml</code></p>\n<p>执行前确保你能打得开<a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\">GFWList</a>,如果打不开,可以自行替换为打得开的链接</p>\n<p>GFWList内容如下,打开如果不是这样的那就说明你找错链接了</p>\n<p><img src=\"https://img.hackerbs.com//20250305153304.png\" alt=\"20250305153304\"></p>\n<h2 id=\"规则的使用方法\"><a href=\"#规则的使用方法\" class=\"headerlink\" title=\"规则的使用方法\"></a>规则的使用方法</h2><p>程序输出的内容直接全选,然后打开Clash Verge Rev的订阅 -&gt; 全局扩展覆写配置 -&gt; 右键选择打开文件(如果点编辑会导致自动检查失败)</p>\n<p>然后将程序的内容直接粘贴到文末即可</p>\n<p>退出Clash Verge Rev,重新打开,使用TUN模式，刷新订阅，点开你的规则组，例如我的狗狗加速.com,按延迟排序,节点测速</p>\n<p>因为规则有7361条,所以节点测速时重复点击,大概5分钟后才会测出正常速度,例如15-新加坡Hy2节点，87ms延迟</p>\n<p>如果你和我一样用的狗狗加速,需要访问ChatGPT的话就选<code>🔥ChatGPT</code>这组</p>\n<p><img src=\"https://img.hackerbs.com//20250305153734.png\" alt=\"20250305153734\"></p>\n<p><img src=\"https://img.hackerbs.com//20250305153746.png\" alt=\"20250305153746\"></p>\n<p><img src=\"https://img.hackerbs.com//20250305153755.png\" alt=\"20250305153755\"></p>"},{"title":"Ubuntu安装教程","comments":1,"date":"2024-05-30T03:51:57.000Z","keywords":["Ubuntu","Linux安装"],"_content":"\n## ubuntu-20.04.6-live-server-amd64安装教程\n\n该系统下载地址：\n\n[中科大镜像站下载](https://iso.mirrors.ustc.edu.cn/ubuntu-releases/20.04/ubuntu-20.04.6-live-server-amd64.iso)\n\n[网盘ISO文件夹中下载](https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa)\n\n### 进入安装程序\n\n**灰色/绿色高亮就是选定状态，Enter就是确认**\n\n不动键盘的话，会自动选择第一个，手动回车进入第一个也可`Install Ubuntu Server`\n\n![20240530120224](https://img.hackerbs.com//20240530120224.png)\n\n<!-- more -->\n\n### 选择安装语言\n\n通常来讲，选择`English`，因为命令行只支持英文，选择其他语言会导致命令行输出的中文无法显示，呈现方块状。\n\n![20240530120346](https://img.hackerbs.com//20240530120346.png)\n\n### 跳过更新直接安装\n\n因为安装的是20.04.6，所以会在此处提示有更新的版本，选择默认的`Continue without updating`即可\n\n![20240530120638](https://img.hackerbs.com//20240530120638.png)\n\n### 选择键盘\n\n直接使用默认的`English`，Enter下一步即可\n\n![20240530121043](https://img.hackerbs.com//20240530121043.png)\n\n### 配置网络\n\n如果是DHCP自动获取则直接`Done`下一步即可，否则参考配置静态IP\n\n![20240530121137](https://img.hackerbs.com//20240530121137.png)\n\n#### 配置静态IP\n\n使用上箭头展开此处\n\n![20240530121210](https://img.hackerbs.com//20240530121210.png)\n\n选择`Edit IPv4`并使用`Manual`手动配置网络\n\nUbuntu的配置与其他Linux略有不同，如表所示\n\n|配置项|内容|说明|\n|---|---|---|\n|Subnet|IP段/前缀|这一项需要配置IP段如192.168.2.0段，并指定前缀，前缀可以用子网掩码转前缀工具计算，或者手算|\n|Address|IP地址||\n|Gateway|网关地址||\n|Name Servers|DNS地址|用,做分隔符，一般填119.29.29.29,8.8.8.8就足够了|\n\n![20240530121329](https://img.hackerbs.com//20240530121329.png)\n\n### 配置代理（几乎不需要）\n\n配置网络后下一步会弹出配置代理，留空直接下一步即可\n\n![20240530123748](https://img.hackerbs.com//20240530123748.png)\n\n### 选择镜像站\n\nUbuntu会默认选择国内镜像站，所以这一步也是直接回车即可\n\n![20240530123838](https://img.hackerbs.com//20240530123838.png)\n\n### 配置磁盘\n\n|名称|翻译|作用解析|\n|---|---|---|\n|Use an entire disk|使用整个磁盘||\n|Set up this disk as an LVM group|将此磁盘设置为LVM组|使用lvm逻辑卷可以在后期非常方便的扩容管理，**安装系统必须使用lvm**|\n|Encrypt the LVM group with LUKS|使用LUKS加密lvm组（磁盘加密，不需要）|\n\n如图所示这种，选择了磁盘后确保启用了lvm直接下一步即可\n\n![20240530123900](https://img.hackerbs.com//20240530123900.png)\n\n这一步会显示磁盘的信息、分区等，直接回车下一步即可\n\n![20240530124408](https://img.hackerbs.com//20240530124408.png)\n\n提示是否确认继续，直接确认继续即可，此处英文的意思就是继续安装将格式化磁盘，丢失磁盘上的数据\n\n![20240530124422](https://img.hackerbs.com//20240530124422.png)\n\n### 配置用户\n\nUbuntu默认不会启用root用户，所以需要在此设置用户名密码\n\n|配置项|翻译|说明|\n|---|---|---|\n|Your name|昵称|就是个显示名称，随便填|\n|Your server's name|主机名|就是hostname，主机名，计算机名|\n|Pick a username|选择一个用户名|就是登陆用的，账号|\n|Choose a password|选择一个密码|设密码|\n|Confirm your password|确认你的密码|二次输入再确认一遍|\n\n![20240530124629](https://img.hackerbs.com//20240530124629.png)\n\n### 安装SSH服务\n\n勾选`Install OpenSSH server`，否则无法进行ssh连接，忽略`Import SSH identity`，不需要导入ssh key\n\n![20240530124958](https://img.hackerbs.com//20240530124958.png)\n\n### 跳过额外软件包安装\n\n没必要在这里安装额外软件包，除非用户指定，但更建议安装完毕后手动安装，因为官方的包通常会落后一些而且并不如手动安装的，比如docker等\n\n直接跳过，执行下一步\n\n![20240530125216](https://img.hackerbs.com//20240530125216.png)\n\n### 等待系统安装完毕\n\n显示`Installing system`\n\n![20240530125257](https://img.hackerbs.com//20240530125257.png)\n\n当上面显示`Install complete`下面出现`Cancel update and reboot`时，直接选择下面的，意思是取消更新并重启\n\n![20240530125349](https://img.hackerbs.com//20240530125349.png)\n\n等待重启后进入系统\n\n![20240530125451](https://img.hackerbs.com//20240530125451.png)\n\n#### 移除安装介质失败\n\n大概率会出现如图所示的错误，无法移除安装介质，其实并不影响，直接拔了U盘重启即可\n\n![20240530125930](https://img.hackerbs.com//20240530125930.png)\n\n### 安装完毕，成功进入系统\n\n![20240530130045](https://img.hackerbs.com//20240530130045.png)\n\n#### 删除安装过程中不得已创建的用户，并配置root登陆ssh\n\n**除非客户需要，否则不需要执行该步骤**\n\n登陆后先修改root用户密码\n\n第一遍输安装时创建的用户的密码，是用于授权sudo命令\n\n后面两步才是设置root密码\n\n![20240530130218](https://img.hackerbs.com//20240530130218.png)\n\n退出使用root用户登陆\n\n然后使用`userdel -r 用户名`删除用户及其主目录\n\n![20240530130436](https://img.hackerbs.com//20240530130436.png)\n\n编辑`/etc/ssh/sshd_config`文件，使root用户可以通过密码登陆ssh\n\n![20240530130601](https://img.hackerbs.com//20240530130601.png)\n\n在原本的`#PermitRootLogin prohibit-password`下添加一行`PermitRootLogin yes`，作用是允许root用户使用密码登陆ssh，原本的`prohibit-password`作用是禁止密码登陆，会一直提示密码错误\n\n如果是用vim编辑的配置文件则需要使用vim的语法`:wq`以便保存退出，在默认的命令模式下按`i`是编辑模式，按`ESC`是返回命令模式，vim语法自行参考网上教程\n\n![20240530130722](https://img.hackerbs.com//20240530130722.png)\n\n编辑完成保存退出后使用`systemctl restart ssh`重启ssh服务，使修改生效\n\n![20240530131100](https://img.hackerbs.com//20240530131100.png)\n\n使用`ssh root@ip`测试连接，成功，至此Ubuntu安装教程完毕！\n\n![20240530131234](https://img.hackerbs.com//20240530131234.png)","source":"_posts/Ubuntu安装教程.md","raw":"---\ntitle: Ubuntu安装教程\ncomments: true\ncategories: [知识库]\ndate: 2024-05-30 11:51:57\nkeywords:\n    - Ubuntu\n    - Linux安装\ntags:\n    - Ubuntu\n    - Ubuntu安装\n    - Linux安装\n    - Ubuntu服务器\n    - Linux\n---\n\n## ubuntu-20.04.6-live-server-amd64安装教程\n\n该系统下载地址：\n\n[中科大镜像站下载](https://iso.mirrors.ustc.edu.cn/ubuntu-releases/20.04/ubuntu-20.04.6-live-server-amd64.iso)\n\n[网盘ISO文件夹中下载](https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa)\n\n### 进入安装程序\n\n**灰色/绿色高亮就是选定状态，Enter就是确认**\n\n不动键盘的话，会自动选择第一个，手动回车进入第一个也可`Install Ubuntu Server`\n\n![20240530120224](https://img.hackerbs.com//20240530120224.png)\n\n<!-- more -->\n\n### 选择安装语言\n\n通常来讲，选择`English`，因为命令行只支持英文，选择其他语言会导致命令行输出的中文无法显示，呈现方块状。\n\n![20240530120346](https://img.hackerbs.com//20240530120346.png)\n\n### 跳过更新直接安装\n\n因为安装的是20.04.6，所以会在此处提示有更新的版本，选择默认的`Continue without updating`即可\n\n![20240530120638](https://img.hackerbs.com//20240530120638.png)\n\n### 选择键盘\n\n直接使用默认的`English`，Enter下一步即可\n\n![20240530121043](https://img.hackerbs.com//20240530121043.png)\n\n### 配置网络\n\n如果是DHCP自动获取则直接`Done`下一步即可，否则参考配置静态IP\n\n![20240530121137](https://img.hackerbs.com//20240530121137.png)\n\n#### 配置静态IP\n\n使用上箭头展开此处\n\n![20240530121210](https://img.hackerbs.com//20240530121210.png)\n\n选择`Edit IPv4`并使用`Manual`手动配置网络\n\nUbuntu的配置与其他Linux略有不同，如表所示\n\n|配置项|内容|说明|\n|---|---|---|\n|Subnet|IP段/前缀|这一项需要配置IP段如192.168.2.0段，并指定前缀，前缀可以用子网掩码转前缀工具计算，或者手算|\n|Address|IP地址||\n|Gateway|网关地址||\n|Name Servers|DNS地址|用,做分隔符，一般填119.29.29.29,8.8.8.8就足够了|\n\n![20240530121329](https://img.hackerbs.com//20240530121329.png)\n\n### 配置代理（几乎不需要）\n\n配置网络后下一步会弹出配置代理，留空直接下一步即可\n\n![20240530123748](https://img.hackerbs.com//20240530123748.png)\n\n### 选择镜像站\n\nUbuntu会默认选择国内镜像站，所以这一步也是直接回车即可\n\n![20240530123838](https://img.hackerbs.com//20240530123838.png)\n\n### 配置磁盘\n\n|名称|翻译|作用解析|\n|---|---|---|\n|Use an entire disk|使用整个磁盘||\n|Set up this disk as an LVM group|将此磁盘设置为LVM组|使用lvm逻辑卷可以在后期非常方便的扩容管理，**安装系统必须使用lvm**|\n|Encrypt the LVM group with LUKS|使用LUKS加密lvm组（磁盘加密，不需要）|\n\n如图所示这种，选择了磁盘后确保启用了lvm直接下一步即可\n\n![20240530123900](https://img.hackerbs.com//20240530123900.png)\n\n这一步会显示磁盘的信息、分区等，直接回车下一步即可\n\n![20240530124408](https://img.hackerbs.com//20240530124408.png)\n\n提示是否确认继续，直接确认继续即可，此处英文的意思就是继续安装将格式化磁盘，丢失磁盘上的数据\n\n![20240530124422](https://img.hackerbs.com//20240530124422.png)\n\n### 配置用户\n\nUbuntu默认不会启用root用户，所以需要在此设置用户名密码\n\n|配置项|翻译|说明|\n|---|---|---|\n|Your name|昵称|就是个显示名称，随便填|\n|Your server's name|主机名|就是hostname，主机名，计算机名|\n|Pick a username|选择一个用户名|就是登陆用的，账号|\n|Choose a password|选择一个密码|设密码|\n|Confirm your password|确认你的密码|二次输入再确认一遍|\n\n![20240530124629](https://img.hackerbs.com//20240530124629.png)\n\n### 安装SSH服务\n\n勾选`Install OpenSSH server`，否则无法进行ssh连接，忽略`Import SSH identity`，不需要导入ssh key\n\n![20240530124958](https://img.hackerbs.com//20240530124958.png)\n\n### 跳过额外软件包安装\n\n没必要在这里安装额外软件包，除非用户指定，但更建议安装完毕后手动安装，因为官方的包通常会落后一些而且并不如手动安装的，比如docker等\n\n直接跳过，执行下一步\n\n![20240530125216](https://img.hackerbs.com//20240530125216.png)\n\n### 等待系统安装完毕\n\n显示`Installing system`\n\n![20240530125257](https://img.hackerbs.com//20240530125257.png)\n\n当上面显示`Install complete`下面出现`Cancel update and reboot`时，直接选择下面的，意思是取消更新并重启\n\n![20240530125349](https://img.hackerbs.com//20240530125349.png)\n\n等待重启后进入系统\n\n![20240530125451](https://img.hackerbs.com//20240530125451.png)\n\n#### 移除安装介质失败\n\n大概率会出现如图所示的错误，无法移除安装介质，其实并不影响，直接拔了U盘重启即可\n\n![20240530125930](https://img.hackerbs.com//20240530125930.png)\n\n### 安装完毕，成功进入系统\n\n![20240530130045](https://img.hackerbs.com//20240530130045.png)\n\n#### 删除安装过程中不得已创建的用户，并配置root登陆ssh\n\n**除非客户需要，否则不需要执行该步骤**\n\n登陆后先修改root用户密码\n\n第一遍输安装时创建的用户的密码，是用于授权sudo命令\n\n后面两步才是设置root密码\n\n![20240530130218](https://img.hackerbs.com//20240530130218.png)\n\n退出使用root用户登陆\n\n然后使用`userdel -r 用户名`删除用户及其主目录\n\n![20240530130436](https://img.hackerbs.com//20240530130436.png)\n\n编辑`/etc/ssh/sshd_config`文件，使root用户可以通过密码登陆ssh\n\n![20240530130601](https://img.hackerbs.com//20240530130601.png)\n\n在原本的`#PermitRootLogin prohibit-password`下添加一行`PermitRootLogin yes`，作用是允许root用户使用密码登陆ssh，原本的`prohibit-password`作用是禁止密码登陆，会一直提示密码错误\n\n如果是用vim编辑的配置文件则需要使用vim的语法`:wq`以便保存退出，在默认的命令模式下按`i`是编辑模式，按`ESC`是返回命令模式，vim语法自行参考网上教程\n\n![20240530130722](https://img.hackerbs.com//20240530130722.png)\n\n编辑完成保存退出后使用`systemctl restart ssh`重启ssh服务，使修改生效\n\n![20240530131100](https://img.hackerbs.com//20240530131100.png)\n\n使用`ssh root@ip`测试连接，成功，至此Ubuntu安装教程完毕！\n\n![20240530131234](https://img.hackerbs.com//20240530131234.png)","slug":"Ubuntu安装教程","published":1,"updated":"2025-09-04T06:44:07.223Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwts000s9szw7gm59ejo","content":"<h2 id=\"ubuntu-20-04-6-live-server-amd64安装教程\"><a href=\"#ubuntu-20-04-6-live-server-amd64安装教程\" class=\"headerlink\" title=\"ubuntu-20.04.6-live-server-amd64安装教程\"></a>ubuntu-20.04.6-live-server-amd64安装教程</h2><p>该系统下载地址：</p>\n<p><a href=\"https://iso.mirrors.ustc.edu.cn/ubuntu-releases/20.04/ubuntu-20.04.6-live-server-amd64.iso\">中科大镜像站下载</a></p>\n<p><a href=\"https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa\">网盘ISO文件夹中下载</a></p>\n<h3 id=\"进入安装程序\"><a href=\"#进入安装程序\" class=\"headerlink\" title=\"进入安装程序\"></a>进入安装程序</h3><p><strong>灰色&#x2F;绿色高亮就是选定状态，Enter就是确认</strong></p>\n<p>不动键盘的话，会自动选择第一个，手动回车进入第一个也可<code>Install Ubuntu Server</code></p>\n<p><img src=\"https://img.hackerbs.com//20240530120224.png\" alt=\"20240530120224\"></p>\n<span id=\"more\"></span>\n\n<h3 id=\"选择安装语言\"><a href=\"#选择安装语言\" class=\"headerlink\" title=\"选择安装语言\"></a>选择安装语言</h3><p>通常来讲，选择<code>English</code>，因为命令行只支持英文，选择其他语言会导致命令行输出的中文无法显示，呈现方块状。</p>\n<p><img src=\"https://img.hackerbs.com//20240530120346.png\" alt=\"20240530120346\"></p>\n<h3 id=\"跳过更新直接安装\"><a href=\"#跳过更新直接安装\" class=\"headerlink\" title=\"跳过更新直接安装\"></a>跳过更新直接安装</h3><p>因为安装的是20.04.6，所以会在此处提示有更新的版本，选择默认的<code>Continue without updating</code>即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530120638.png\" alt=\"20240530120638\"></p>\n<h3 id=\"选择键盘\"><a href=\"#选择键盘\" class=\"headerlink\" title=\"选择键盘\"></a>选择键盘</h3><p>直接使用默认的<code>English</code>，Enter下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530121043.png\" alt=\"20240530121043\"></p>\n<h3 id=\"配置网络\"><a href=\"#配置网络\" class=\"headerlink\" title=\"配置网络\"></a>配置网络</h3><p>如果是DHCP自动获取则直接<code>Done</code>下一步即可，否则参考配置静态IP</p>\n<p><img src=\"https://img.hackerbs.com//20240530121137.png\" alt=\"20240530121137\"></p>\n<h4 id=\"配置静态IP\"><a href=\"#配置静态IP\" class=\"headerlink\" title=\"配置静态IP\"></a>配置静态IP</h4><p>使用上箭头展开此处</p>\n<p><img src=\"https://img.hackerbs.com//20240530121210.png\" alt=\"20240530121210\"></p>\n<p>选择<code>Edit IPv4</code>并使用<code>Manual</code>手动配置网络</p>\n<p>Ubuntu的配置与其他Linux略有不同，如表所示</p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>内容</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Subnet</td>\n<td>IP段&#x2F;前缀</td>\n<td>这一项需要配置IP段如192.168.2.0段，并指定前缀，前缀可以用子网掩码转前缀工具计算，或者手算</td>\n</tr>\n<tr>\n<td>Address</td>\n<td>IP地址</td>\n<td></td>\n</tr>\n<tr>\n<td>Gateway</td>\n<td>网关地址</td>\n<td></td>\n</tr>\n<tr>\n<td>Name Servers</td>\n<td>DNS地址</td>\n<td>用,做分隔符，一般填119.29.29.29,8.8.8.8就足够了</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://img.hackerbs.com//20240530121329.png\" alt=\"20240530121329\"></p>\n<h3 id=\"配置代理（几乎不需要）\"><a href=\"#配置代理（几乎不需要）\" class=\"headerlink\" title=\"配置代理（几乎不需要）\"></a>配置代理（几乎不需要）</h3><p>配置网络后下一步会弹出配置代理，留空直接下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530123748.png\" alt=\"20240530123748\"></p>\n<h3 id=\"选择镜像站\"><a href=\"#选择镜像站\" class=\"headerlink\" title=\"选择镜像站\"></a>选择镜像站</h3><p>Ubuntu会默认选择国内镜像站，所以这一步也是直接回车即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530123838.png\" alt=\"20240530123838\"></p>\n<h3 id=\"配置磁盘\"><a href=\"#配置磁盘\" class=\"headerlink\" title=\"配置磁盘\"></a>配置磁盘</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>翻译</th>\n<th>作用解析</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Use an entire disk</td>\n<td>使用整个磁盘</td>\n<td></td>\n</tr>\n<tr>\n<td>Set up this disk as an LVM group</td>\n<td>将此磁盘设置为LVM组</td>\n<td>使用lvm逻辑卷可以在后期非常方便的扩容管理，<strong>安装系统必须使用lvm</strong></td>\n</tr>\n<tr>\n<td>Encrypt the LVM group with LUKS</td>\n<td>使用LUKS加密lvm组（磁盘加密，不需要）</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>如图所示这种，选择了磁盘后确保启用了lvm直接下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530123900.png\" alt=\"20240530123900\"></p>\n<p>这一步会显示磁盘的信息、分区等，直接回车下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530124408.png\" alt=\"20240530124408\"></p>\n<p>提示是否确认继续，直接确认继续即可，此处英文的意思就是继续安装将格式化磁盘，丢失磁盘上的数据</p>\n<p><img src=\"https://img.hackerbs.com//20240530124422.png\" alt=\"20240530124422\"></p>\n<h3 id=\"配置用户\"><a href=\"#配置用户\" class=\"headerlink\" title=\"配置用户\"></a>配置用户</h3><p>Ubuntu默认不会启用root用户，所以需要在此设置用户名密码</p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>翻译</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Your name</td>\n<td>昵称</td>\n<td>就是个显示名称，随便填</td>\n</tr>\n<tr>\n<td>Your server’s name</td>\n<td>主机名</td>\n<td>就是hostname，主机名，计算机名</td>\n</tr>\n<tr>\n<td>Pick a username</td>\n<td>选择一个用户名</td>\n<td>就是登陆用的，账号</td>\n</tr>\n<tr>\n<td>Choose a password</td>\n<td>选择一个密码</td>\n<td>设密码</td>\n</tr>\n<tr>\n<td>Confirm your password</td>\n<td>确认你的密码</td>\n<td>二次输入再确认一遍</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://img.hackerbs.com//20240530124629.png\" alt=\"20240530124629\"></p>\n<h3 id=\"安装SSH服务\"><a href=\"#安装SSH服务\" class=\"headerlink\" title=\"安装SSH服务\"></a>安装SSH服务</h3><p>勾选<code>Install OpenSSH server</code>，否则无法进行ssh连接，忽略<code>Import SSH identity</code>，不需要导入ssh key</p>\n<p><img src=\"https://img.hackerbs.com//20240530124958.png\" alt=\"20240530124958\"></p>\n<h3 id=\"跳过额外软件包安装\"><a href=\"#跳过额外软件包安装\" class=\"headerlink\" title=\"跳过额外软件包安装\"></a>跳过额外软件包安装</h3><p>没必要在这里安装额外软件包，除非用户指定，但更建议安装完毕后手动安装，因为官方的包通常会落后一些而且并不如手动安装的，比如docker等</p>\n<p>直接跳过，执行下一步</p>\n<p><img src=\"https://img.hackerbs.com//20240530125216.png\" alt=\"20240530125216\"></p>\n<h3 id=\"等待系统安装完毕\"><a href=\"#等待系统安装完毕\" class=\"headerlink\" title=\"等待系统安装完毕\"></a>等待系统安装完毕</h3><p>显示<code>Installing system</code></p>\n<p><img src=\"https://img.hackerbs.com//20240530125257.png\" alt=\"20240530125257\"></p>\n<p>当上面显示<code>Install complete</code>下面出现<code>Cancel update and reboot</code>时，直接选择下面的，意思是取消更新并重启</p>\n<p><img src=\"https://img.hackerbs.com//20240530125349.png\" alt=\"20240530125349\"></p>\n<p>等待重启后进入系统</p>\n<p><img src=\"https://img.hackerbs.com//20240530125451.png\" alt=\"20240530125451\"></p>\n<h4 id=\"移除安装介质失败\"><a href=\"#移除安装介质失败\" class=\"headerlink\" title=\"移除安装介质失败\"></a>移除安装介质失败</h4><p>大概率会出现如图所示的错误，无法移除安装介质，其实并不影响，直接拔了U盘重启即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530125930.png\" alt=\"20240530125930\"></p>\n<h3 id=\"安装完毕，成功进入系统\"><a href=\"#安装完毕，成功进入系统\" class=\"headerlink\" title=\"安装完毕，成功进入系统\"></a>安装完毕，成功进入系统</h3><p><img src=\"https://img.hackerbs.com//20240530130045.png\" alt=\"20240530130045\"></p>\n<h4 id=\"删除安装过程中不得已创建的用户，并配置root登陆ssh\"><a href=\"#删除安装过程中不得已创建的用户，并配置root登陆ssh\" class=\"headerlink\" title=\"删除安装过程中不得已创建的用户，并配置root登陆ssh\"></a>删除安装过程中不得已创建的用户，并配置root登陆ssh</h4><p><strong>除非客户需要，否则不需要执行该步骤</strong></p>\n<p>登陆后先修改root用户密码</p>\n<p>第一遍输安装时创建的用户的密码，是用于授权sudo命令</p>\n<p>后面两步才是设置root密码</p>\n<p><img src=\"https://img.hackerbs.com//20240530130218.png\" alt=\"20240530130218\"></p>\n<p>退出使用root用户登陆</p>\n<p>然后使用<code>userdel -r 用户名</code>删除用户及其主目录</p>\n<p><img src=\"https://img.hackerbs.com//20240530130436.png\" alt=\"20240530130436\"></p>\n<p>编辑<code>/etc/ssh/sshd_config</code>文件，使root用户可以通过密码登陆ssh</p>\n<p><img src=\"https://img.hackerbs.com//20240530130601.png\" alt=\"20240530130601\"></p>\n<p>在原本的<code>#PermitRootLogin prohibit-password</code>下添加一行<code>PermitRootLogin yes</code>，作用是允许root用户使用密码登陆ssh，原本的<code>prohibit-password</code>作用是禁止密码登陆，会一直提示密码错误</p>\n<p>如果是用vim编辑的配置文件则需要使用vim的语法<code>:wq</code>以便保存退出，在默认的命令模式下按<code>i</code>是编辑模式，按<code>ESC</code>是返回命令模式，vim语法自行参考网上教程</p>\n<p><img src=\"https://img.hackerbs.com//20240530130722.png\" alt=\"20240530130722\"></p>\n<p>编辑完成保存退出后使用<code>systemctl restart ssh</code>重启ssh服务，使修改生效</p>\n<p><img src=\"https://img.hackerbs.com//20240530131100.png\" alt=\"20240530131100\"></p>\n<p>使用<code>ssh root@ip</code>测试连接，成功，至此Ubuntu安装教程完毕！</p>\n<p><img src=\"https://img.hackerbs.com//20240530131234.png\" alt=\"20240530131234\"></p>\n","site":{"data":{}},"length":1227,"excerpt":"<h2 id=\"ubuntu-20-04-6-live-server-amd64安装教程\"><a href=\"#ubuntu-20-04-6-live-server-amd64安装教程\" class=\"headerlink\" title=\"ubuntu-20.04.6-live-server-amd64安装教程\"></a>ubuntu-20.04.6-live-server-amd64安装教程</h2><p>该系统下载地址：</p>\n<p><a href=\"https://iso.mirrors.ustc.edu.cn/ubuntu-releases/20.04/ubuntu-20.04.6-live-server-amd64.iso\">中科大镜像站下载</a></p>\n<p><a href=\"https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa\">网盘ISO文件夹中下载</a></p>\n<h3 id=\"进入安装程序\"><a href=\"#进入安装程序\" class=\"headerlink\" title=\"进入安装程序\"></a>进入安装程序</h3><p><strong>灰色&#x2F;绿色高亮就是选定状态，Enter就是确认</strong></p>\n<p>不动键盘的话，会自动选择第一个，手动回车进入第一个也可<code>Install Ubuntu Server</code></p>\n<p><img src=\"https://img.hackerbs.com//20240530120224.png\" alt=\"20240530120224\"></p>","more":"<h3 id=\"选择安装语言\"><a href=\"#选择安装语言\" class=\"headerlink\" title=\"选择安装语言\"></a>选择安装语言</h3><p>通常来讲，选择<code>English</code>，因为命令行只支持英文，选择其他语言会导致命令行输出的中文无法显示，呈现方块状。</p>\n<p><img src=\"https://img.hackerbs.com//20240530120346.png\" alt=\"20240530120346\"></p>\n<h3 id=\"跳过更新直接安装\"><a href=\"#跳过更新直接安装\" class=\"headerlink\" title=\"跳过更新直接安装\"></a>跳过更新直接安装</h3><p>因为安装的是20.04.6，所以会在此处提示有更新的版本，选择默认的<code>Continue without updating</code>即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530120638.png\" alt=\"20240530120638\"></p>\n<h3 id=\"选择键盘\"><a href=\"#选择键盘\" class=\"headerlink\" title=\"选择键盘\"></a>选择键盘</h3><p>直接使用默认的<code>English</code>，Enter下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530121043.png\" alt=\"20240530121043\"></p>\n<h3 id=\"配置网络\"><a href=\"#配置网络\" class=\"headerlink\" title=\"配置网络\"></a>配置网络</h3><p>如果是DHCP自动获取则直接<code>Done</code>下一步即可，否则参考配置静态IP</p>\n<p><img src=\"https://img.hackerbs.com//20240530121137.png\" alt=\"20240530121137\"></p>\n<h4 id=\"配置静态IP\"><a href=\"#配置静态IP\" class=\"headerlink\" title=\"配置静态IP\"></a>配置静态IP</h4><p>使用上箭头展开此处</p>\n<p><img src=\"https://img.hackerbs.com//20240530121210.png\" alt=\"20240530121210\"></p>\n<p>选择<code>Edit IPv4</code>并使用<code>Manual</code>手动配置网络</p>\n<p>Ubuntu的配置与其他Linux略有不同，如表所示</p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>内容</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Subnet</td>\n<td>IP段&#x2F;前缀</td>\n<td>这一项需要配置IP段如192.168.2.0段，并指定前缀，前缀可以用子网掩码转前缀工具计算，或者手算</td>\n</tr>\n<tr>\n<td>Address</td>\n<td>IP地址</td>\n<td></td>\n</tr>\n<tr>\n<td>Gateway</td>\n<td>网关地址</td>\n<td></td>\n</tr>\n<tr>\n<td>Name Servers</td>\n<td>DNS地址</td>\n<td>用,做分隔符，一般填119.29.29.29,8.8.8.8就足够了</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://img.hackerbs.com//20240530121329.png\" alt=\"20240530121329\"></p>\n<h3 id=\"配置代理（几乎不需要）\"><a href=\"#配置代理（几乎不需要）\" class=\"headerlink\" title=\"配置代理（几乎不需要）\"></a>配置代理（几乎不需要）</h3><p>配置网络后下一步会弹出配置代理，留空直接下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530123748.png\" alt=\"20240530123748\"></p>\n<h3 id=\"选择镜像站\"><a href=\"#选择镜像站\" class=\"headerlink\" title=\"选择镜像站\"></a>选择镜像站</h3><p>Ubuntu会默认选择国内镜像站，所以这一步也是直接回车即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530123838.png\" alt=\"20240530123838\"></p>\n<h3 id=\"配置磁盘\"><a href=\"#配置磁盘\" class=\"headerlink\" title=\"配置磁盘\"></a>配置磁盘</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>翻译</th>\n<th>作用解析</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Use an entire disk</td>\n<td>使用整个磁盘</td>\n<td></td>\n</tr>\n<tr>\n<td>Set up this disk as an LVM group</td>\n<td>将此磁盘设置为LVM组</td>\n<td>使用lvm逻辑卷可以在后期非常方便的扩容管理，<strong>安装系统必须使用lvm</strong></td>\n</tr>\n<tr>\n<td>Encrypt the LVM group with LUKS</td>\n<td>使用LUKS加密lvm组（磁盘加密，不需要）</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>如图所示这种，选择了磁盘后确保启用了lvm直接下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530123900.png\" alt=\"20240530123900\"></p>\n<p>这一步会显示磁盘的信息、分区等，直接回车下一步即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530124408.png\" alt=\"20240530124408\"></p>\n<p>提示是否确认继续，直接确认继续即可，此处英文的意思就是继续安装将格式化磁盘，丢失磁盘上的数据</p>\n<p><img src=\"https://img.hackerbs.com//20240530124422.png\" alt=\"20240530124422\"></p>\n<h3 id=\"配置用户\"><a href=\"#配置用户\" class=\"headerlink\" title=\"配置用户\"></a>配置用户</h3><p>Ubuntu默认不会启用root用户，所以需要在此设置用户名密码</p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>翻译</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Your name</td>\n<td>昵称</td>\n<td>就是个显示名称，随便填</td>\n</tr>\n<tr>\n<td>Your server’s name</td>\n<td>主机名</td>\n<td>就是hostname，主机名，计算机名</td>\n</tr>\n<tr>\n<td>Pick a username</td>\n<td>选择一个用户名</td>\n<td>就是登陆用的，账号</td>\n</tr>\n<tr>\n<td>Choose a password</td>\n<td>选择一个密码</td>\n<td>设密码</td>\n</tr>\n<tr>\n<td>Confirm your password</td>\n<td>确认你的密码</td>\n<td>二次输入再确认一遍</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://img.hackerbs.com//20240530124629.png\" alt=\"20240530124629\"></p>\n<h3 id=\"安装SSH服务\"><a href=\"#安装SSH服务\" class=\"headerlink\" title=\"安装SSH服务\"></a>安装SSH服务</h3><p>勾选<code>Install OpenSSH server</code>，否则无法进行ssh连接，忽略<code>Import SSH identity</code>，不需要导入ssh key</p>\n<p><img src=\"https://img.hackerbs.com//20240530124958.png\" alt=\"20240530124958\"></p>\n<h3 id=\"跳过额外软件包安装\"><a href=\"#跳过额外软件包安装\" class=\"headerlink\" title=\"跳过额外软件包安装\"></a>跳过额外软件包安装</h3><p>没必要在这里安装额外软件包，除非用户指定，但更建议安装完毕后手动安装，因为官方的包通常会落后一些而且并不如手动安装的，比如docker等</p>\n<p>直接跳过，执行下一步</p>\n<p><img src=\"https://img.hackerbs.com//20240530125216.png\" alt=\"20240530125216\"></p>\n<h3 id=\"等待系统安装完毕\"><a href=\"#等待系统安装完毕\" class=\"headerlink\" title=\"等待系统安装完毕\"></a>等待系统安装完毕</h3><p>显示<code>Installing system</code></p>\n<p><img src=\"https://img.hackerbs.com//20240530125257.png\" alt=\"20240530125257\"></p>\n<p>当上面显示<code>Install complete</code>下面出现<code>Cancel update and reboot</code>时，直接选择下面的，意思是取消更新并重启</p>\n<p><img src=\"https://img.hackerbs.com//20240530125349.png\" alt=\"20240530125349\"></p>\n<p>等待重启后进入系统</p>\n<p><img src=\"https://img.hackerbs.com//20240530125451.png\" alt=\"20240530125451\"></p>\n<h4 id=\"移除安装介质失败\"><a href=\"#移除安装介质失败\" class=\"headerlink\" title=\"移除安装介质失败\"></a>移除安装介质失败</h4><p>大概率会出现如图所示的错误，无法移除安装介质，其实并不影响，直接拔了U盘重启即可</p>\n<p><img src=\"https://img.hackerbs.com//20240530125930.png\" alt=\"20240530125930\"></p>\n<h3 id=\"安装完毕，成功进入系统\"><a href=\"#安装完毕，成功进入系统\" class=\"headerlink\" title=\"安装完毕，成功进入系统\"></a>安装完毕，成功进入系统</h3><p><img src=\"https://img.hackerbs.com//20240530130045.png\" alt=\"20240530130045\"></p>\n<h4 id=\"删除安装过程中不得已创建的用户，并配置root登陆ssh\"><a href=\"#删除安装过程中不得已创建的用户，并配置root登陆ssh\" class=\"headerlink\" title=\"删除安装过程中不得已创建的用户，并配置root登陆ssh\"></a>删除安装过程中不得已创建的用户，并配置root登陆ssh</h4><p><strong>除非客户需要，否则不需要执行该步骤</strong></p>\n<p>登陆后先修改root用户密码</p>\n<p>第一遍输安装时创建的用户的密码，是用于授权sudo命令</p>\n<p>后面两步才是设置root密码</p>\n<p><img src=\"https://img.hackerbs.com//20240530130218.png\" alt=\"20240530130218\"></p>\n<p>退出使用root用户登陆</p>\n<p>然后使用<code>userdel -r 用户名</code>删除用户及其主目录</p>\n<p><img src=\"https://img.hackerbs.com//20240530130436.png\" alt=\"20240530130436\"></p>\n<p>编辑<code>/etc/ssh/sshd_config</code>文件，使root用户可以通过密码登陆ssh</p>\n<p><img src=\"https://img.hackerbs.com//20240530130601.png\" alt=\"20240530130601\"></p>\n<p>在原本的<code>#PermitRootLogin prohibit-password</code>下添加一行<code>PermitRootLogin yes</code>，作用是允许root用户使用密码登陆ssh，原本的<code>prohibit-password</code>作用是禁止密码登陆，会一直提示密码错误</p>\n<p>如果是用vim编辑的配置文件则需要使用vim的语法<code>:wq</code>以便保存退出，在默认的命令模式下按<code>i</code>是编辑模式，按<code>ESC</code>是返回命令模式，vim语法自行参考网上教程</p>\n<p><img src=\"https://img.hackerbs.com//20240530130722.png\" alt=\"20240530130722\"></p>\n<p>编辑完成保存退出后使用<code>systemctl restart ssh</code>重启ssh服务，使修改生效</p>\n<p><img src=\"https://img.hackerbs.com//20240530131100.png\" alt=\"20240530131100\"></p>\n<p>使用<code>ssh root@ip</code>测试连接，成功，至此Ubuntu安装教程完毕！</p>\n<p><img src=\"https://img.hackerbs.com//20240530131234.png\" alt=\"20240530131234\"></p>"},{"title":"Proxmox-VE批量加集群、批量克隆、批量设置并同步时间、批量清除集群残留、批量创建网卡等一站式解决方案！","comments":1,"date":"2024-02-05T21:32:15.000Z","keywords":["Proxmox-VE"],"_content":"\n---\n**本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux KVM QEMU虚拟化通用命令，如命令有不兼容*十分拜托您务必联系我修正文章！十分感谢！***\n---\n\n**以下命令中`10.0.1.$i`是因为本次批量部署节点均在10.0.1.0/24段，需自行修改为你节点所在网段，如`192.168.100.$i`**\n\n**批量创建网卡适用于如本次部署一样的情况，如外网网线统一连接到enp6s0网口，然后桥接到vmbr1给虚拟机连接使用，请根据你的情况自行修改**\n\n## 批量加集群\n\n<!-- more -->\n\n*更新：利用expect实现初次连接自动登陆或自动上传ssh key*\n\n```shell\n# 初次连接自动登陆\nexpect -c 'spawn ssh -o StrictHostKeyChecking=no root@10.0.1.$i; expect \"(yes/no)\" { send \"yes\\n\"; exp_continue } \"assword:\" { send \"密码\\n\" }; interact'\n\n# 初次连接自动上传ssh key，便于后续免密连接批量执行命令\nexpect -c 'spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect \"(yes/no)\" { send \"yes\\n\"; exp_continue } \"assword:\" { send \"密码\\n\" }; interact'\n\n# 批量做免密连接\nfor i in {开始节点如104..结束节点如150}; do expect -c \"spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect \\\"(yes/no)\\\" { send \\\"yes\\n\\\"; exp_continue } \\\"assword:\\\" { send \\\"密码\\n\\\" }; interact\" ; sleep 1 ; done\n```\n\n```shell\n# 从创建集群的主节点批量远程自动加集群\nfor i in {开始节点如104..结束节点如150}; do ssh -t root@10.0.1.$i \"echo -e \\\"密码\\\\nyes\\\" | pvecm add 主节点完整IP如10.0.1.101 && while true; do if pvecm status | grep -q $i; then echo -e \\\"successfully\\\"; break; else echo -e \\\"Please wait a moment.\\\"; sleep 5; fi; done\"; done\n\n# 自动加集群示例\nfor i in {126..150}; do ssh -t root@10.0.1.$i \"echo -e \\\"密码\\\\nyes\\\" | pvecm add 10.0.1.125 && while true; do if pvecm status | grep -q $i; then echo -e \\\"successfully\\\"; break; else echo -e \\\"Please wait a moment.\\\"; sleep 5; fi; done\"; done\n\n# 批量自动创建vmbr1网卡\nfor i in {127..150}; do ssh -t root@10.0.1.$i 'echo -e \"auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0\" >> /etc/network/interfaces && systemctl restart networking'; done\n\n# 从开始节点循环执行到结束节点\n# 自动移除yge-data\n# 扩容yge-root\n# 刷新yge-root分区容量\n# 修改时间服务器为10.0.1.110节点\n# 重启chrony.service\n# 强制同步时间\n# 自动加入集群\n# 搜索当前ip比对pvecm status输出结果\n# 未输出当前节点ip则持续提示等待\n# 输出当前节点ip则表示加入集群成功，输出successfully\n# 间隔5秒执行\n# 批量创建vmbr1网卡，桥接enp6s0\n# -- 命令为单行命令，严禁换行，”一条龙命令“ --\n# 因YgeCloud无sshpass工具，且新节点与主节点无免密登陆\n# 所以该命令需要手动输入ssh密码\n\nfor i in {开始节点如104..结束节点如150}; do ssh -t root@10.0.1.$i \"lvremove -f /dev/yge/data && lvextend -l +100%FREE /dev/yge/root && resize2fs /dev/yge/root && sed -i 's/pool 2.debian.pool.ntp.org/server 10.0.1.110/' /etc/chrony/chrony.conf && systemctl restart chrony && chronyc makestep && sleep 3 && date && echo -e \\\"密码\\\\nyes\\\" | pvecm add 主节点完整IP如10.0.1.101 && while true; do if pvecm status | grep -q $i; then echo -e \\\"successfully\\\"; break; else echo -e \\\"Please wait a moment.\\\"; sleep 5; fi; done && echo -e \\\"auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0\\\" >> /etc/network/interfaces && systemctl restart networking\"; done\n```\n\n## 批量从模板恢复虚拟机，比克隆更骚的办法\n\n**vzdump生成的备份恢复时是根据名称匹配的，如果修改了命名会导致恢复失败，使用qmrestore恢复前一定要还原名称**\n\n**如需临时命名以便区分备份文件，强烈建议添加前缀，不要修改原本的文件名！**\n\n**-storage指向的目标存储不能为共享！否则会出现cfs无法锁定报错（local在集群中错误的设置为了共享发现的）**\n\n```shell\n# 加了集群之后可以免密了！！！\n# ssh连接到对应的子节点\n# 执行qmrestore命令\n# /mnt/pve/backup/dump是YGENAS发布的NFS在集群存储添加为NFS挂载的位置\n# 从 [你的备份文件名称] 备份文件批量恢复虚拟机并将虚拟机ID设置为当前节点ID，避免ID重复\n# --store 指定恢复到local存储\n# --uniaue使恢复的虚拟机重设网卡MAC以防MAC冲突\n# 恢复完成后使用qm set VMID --name string命令重设虚拟机名为对应当前节点IP\nfor i in {125..150}; do ssh -t root@10.0.1.$i \"qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique && qm set $i --name g$i\";done\n\n# 并发恢复，将输出重定向到对应的$i.log，避免ssh -t等待\nfor i in {125..150}; do nohup ssh -t root@10.0.1.$i \"qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique && qm set $i --name g$i\" > $i.log 2>&1 & done\n\n# 间隔1秒持续显示恢复进度\nwhile true; do bash -c 'clear;for i in {125..150}; do echo $i ; tail -n 1 \"$i.log\"; done'; sleep 1; done\n\n# 排除rescan volumes...从而筛选出恢复失败的节点\nwhile true; do clear; for i in {125..150}; do tail -n 1 \"$i.log\" | grep -q \"update\" || { echo \"$i error\"; }; done; sleep 1; done\n\n# 批量删除克隆错误的虚拟机\nfor i in {125..150};do nohup ssh -t root@10.0.1.$i \"qm destroy $i\" > del$i.log 2>&1 & done\n```\n\n## 加错集群处理办法\n\n### 主节点批量移除失效节点\n\n```shell\n# 删除[104到124]的所有节点，yge是因为我的节点名前缀为yge，可以根据你的hostname来\n# 我的hostname输出为yge104\nfor i in {104..124}; do pvecm delnode yge$i; done\n```\n\n### 在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\n\n```shell\n# 一条龙清理\n# 从127开始清理到150，需在主节点执行，误加集群后主节点可以免密登陆子节点\n# 先在主节点创建cleanup.sh脚本并chmod +x cleanup.sh赋予可执行权限\nfor i in {127..150}; do scp cleanup.sh root@10.0.1.$i:/tmp/ && ssh -t root@10.0.1.$i \"bash /tmp/cleanup.sh\" && ssh -t root@10.0.1.$i \"rm /tmp/cleanup.sh\"; done\n```\n\n**因ssh -t无法处理!，所以迫不得已使用脚本执行**\n\n```shell\n#!/bin/bash\n\nsystemctl stop pve-cluster\nsystemctl stop corosync\npmxcfs -l\nrm /etc/pve/corosync.conf\nrm -rf /etc/corosync/*\nrm -rf /etc/pve/nodes/!(hostname)\nkillall pmxcfs\nsystemctl start pve-cluster\n```\n\n## 基于免密后批量配置crontab\n\n```shell\nfor i in {101..103};do ssh root@10.0.1.$i -t \"crontab -e\";done\n```","source":"_posts/Proxmox-VE批量加集群、批量克隆、批量设置并同步时间、批量清除集群残留、批量创建网卡等一站式解决方案！（本教程采用YgeCloud实测）.md","raw":"---\ntitle: Proxmox-VE批量加集群、批量克隆、批量设置并同步时间、批量清除集群残留、批量创建网卡等一站式解决方案！\ncategories: [伟大的知识库]\ncomments: true\ndate: 2024-02-06 05:32:15\nkeywords:\n    - Proxmox-VE\ntags:\n    - Proxmox-VE\n    - 批量\n---\n\n---\n**本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux KVM QEMU虚拟化通用命令，如命令有不兼容*十分拜托您务必联系我修正文章！十分感谢！***\n---\n\n**以下命令中`10.0.1.$i`是因为本次批量部署节点均在10.0.1.0/24段，需自行修改为你节点所在网段，如`192.168.100.$i`**\n\n**批量创建网卡适用于如本次部署一样的情况，如外网网线统一连接到enp6s0网口，然后桥接到vmbr1给虚拟机连接使用，请根据你的情况自行修改**\n\n## 批量加集群\n\n<!-- more -->\n\n*更新：利用expect实现初次连接自动登陆或自动上传ssh key*\n\n```shell\n# 初次连接自动登陆\nexpect -c 'spawn ssh -o StrictHostKeyChecking=no root@10.0.1.$i; expect \"(yes/no)\" { send \"yes\\n\"; exp_continue } \"assword:\" { send \"密码\\n\" }; interact'\n\n# 初次连接自动上传ssh key，便于后续免密连接批量执行命令\nexpect -c 'spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect \"(yes/no)\" { send \"yes\\n\"; exp_continue } \"assword:\" { send \"密码\\n\" }; interact'\n\n# 批量做免密连接\nfor i in {开始节点如104..结束节点如150}; do expect -c \"spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect \\\"(yes/no)\\\" { send \\\"yes\\n\\\"; exp_continue } \\\"assword:\\\" { send \\\"密码\\n\\\" }; interact\" ; sleep 1 ; done\n```\n\n```shell\n# 从创建集群的主节点批量远程自动加集群\nfor i in {开始节点如104..结束节点如150}; do ssh -t root@10.0.1.$i \"echo -e \\\"密码\\\\nyes\\\" | pvecm add 主节点完整IP如10.0.1.101 && while true; do if pvecm status | grep -q $i; then echo -e \\\"successfully\\\"; break; else echo -e \\\"Please wait a moment.\\\"; sleep 5; fi; done\"; done\n\n# 自动加集群示例\nfor i in {126..150}; do ssh -t root@10.0.1.$i \"echo -e \\\"密码\\\\nyes\\\" | pvecm add 10.0.1.125 && while true; do if pvecm status | grep -q $i; then echo -e \\\"successfully\\\"; break; else echo -e \\\"Please wait a moment.\\\"; sleep 5; fi; done\"; done\n\n# 批量自动创建vmbr1网卡\nfor i in {127..150}; do ssh -t root@10.0.1.$i 'echo -e \"auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0\" >> /etc/network/interfaces && systemctl restart networking'; done\n\n# 从开始节点循环执行到结束节点\n# 自动移除yge-data\n# 扩容yge-root\n# 刷新yge-root分区容量\n# 修改时间服务器为10.0.1.110节点\n# 重启chrony.service\n# 强制同步时间\n# 自动加入集群\n# 搜索当前ip比对pvecm status输出结果\n# 未输出当前节点ip则持续提示等待\n# 输出当前节点ip则表示加入集群成功，输出successfully\n# 间隔5秒执行\n# 批量创建vmbr1网卡，桥接enp6s0\n# -- 命令为单行命令，严禁换行，”一条龙命令“ --\n# 因YgeCloud无sshpass工具，且新节点与主节点无免密登陆\n# 所以该命令需要手动输入ssh密码\n\nfor i in {开始节点如104..结束节点如150}; do ssh -t root@10.0.1.$i \"lvremove -f /dev/yge/data && lvextend -l +100%FREE /dev/yge/root && resize2fs /dev/yge/root && sed -i 's/pool 2.debian.pool.ntp.org/server 10.0.1.110/' /etc/chrony/chrony.conf && systemctl restart chrony && chronyc makestep && sleep 3 && date && echo -e \\\"密码\\\\nyes\\\" | pvecm add 主节点完整IP如10.0.1.101 && while true; do if pvecm status | grep -q $i; then echo -e \\\"successfully\\\"; break; else echo -e \\\"Please wait a moment.\\\"; sleep 5; fi; done && echo -e \\\"auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0\\\" >> /etc/network/interfaces && systemctl restart networking\"; done\n```\n\n## 批量从模板恢复虚拟机，比克隆更骚的办法\n\n**vzdump生成的备份恢复时是根据名称匹配的，如果修改了命名会导致恢复失败，使用qmrestore恢复前一定要还原名称**\n\n**如需临时命名以便区分备份文件，强烈建议添加前缀，不要修改原本的文件名！**\n\n**-storage指向的目标存储不能为共享！否则会出现cfs无法锁定报错（local在集群中错误的设置为了共享发现的）**\n\n```shell\n# 加了集群之后可以免密了！！！\n# ssh连接到对应的子节点\n# 执行qmrestore命令\n# /mnt/pve/backup/dump是YGENAS发布的NFS在集群存储添加为NFS挂载的位置\n# 从 [你的备份文件名称] 备份文件批量恢复虚拟机并将虚拟机ID设置为当前节点ID，避免ID重复\n# --store 指定恢复到local存储\n# --uniaue使恢复的虚拟机重设网卡MAC以防MAC冲突\n# 恢复完成后使用qm set VMID --name string命令重设虚拟机名为对应当前节点IP\nfor i in {125..150}; do ssh -t root@10.0.1.$i \"qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique && qm set $i --name g$i\";done\n\n# 并发恢复，将输出重定向到对应的$i.log，避免ssh -t等待\nfor i in {125..150}; do nohup ssh -t root@10.0.1.$i \"qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique && qm set $i --name g$i\" > $i.log 2>&1 & done\n\n# 间隔1秒持续显示恢复进度\nwhile true; do bash -c 'clear;for i in {125..150}; do echo $i ; tail -n 1 \"$i.log\"; done'; sleep 1; done\n\n# 排除rescan volumes...从而筛选出恢复失败的节点\nwhile true; do clear; for i in {125..150}; do tail -n 1 \"$i.log\" | grep -q \"update\" || { echo \"$i error\"; }; done; sleep 1; done\n\n# 批量删除克隆错误的虚拟机\nfor i in {125..150};do nohup ssh -t root@10.0.1.$i \"qm destroy $i\" > del$i.log 2>&1 & done\n```\n\n## 加错集群处理办法\n\n### 主节点批量移除失效节点\n\n```shell\n# 删除[104到124]的所有节点，yge是因为我的节点名前缀为yge，可以根据你的hostname来\n# 我的hostname输出为yge104\nfor i in {104..124}; do pvecm delnode yge$i; done\n```\n\n### 在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\n\n```shell\n# 一条龙清理\n# 从127开始清理到150，需在主节点执行，误加集群后主节点可以免密登陆子节点\n# 先在主节点创建cleanup.sh脚本并chmod +x cleanup.sh赋予可执行权限\nfor i in {127..150}; do scp cleanup.sh root@10.0.1.$i:/tmp/ && ssh -t root@10.0.1.$i \"bash /tmp/cleanup.sh\" && ssh -t root@10.0.1.$i \"rm /tmp/cleanup.sh\"; done\n```\n\n**因ssh -t无法处理!，所以迫不得已使用脚本执行**\n\n```shell\n#!/bin/bash\n\nsystemctl stop pve-cluster\nsystemctl stop corosync\npmxcfs -l\nrm /etc/pve/corosync.conf\nrm -rf /etc/corosync/*\nrm -rf /etc/pve/nodes/!(hostname)\nkillall pmxcfs\nsystemctl start pve-cluster\n```\n\n## 基于免密后批量配置crontab\n\n```shell\nfor i in {101..103};do ssh root@10.0.1.$i -t \"crontab -e\";done\n```","slug":"Proxmox-VE批量加集群、批量克隆、批量设置并同步时间、批量清除集群残留、批量创建网卡等一站式解决方案！（本教程采用YgeCloud实测）","published":1,"updated":"2025-09-04T06:44:07.222Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtt000v9szwciawbwn5","content":"<hr>\n<h2 id=\"本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux-KVM-QEMU虚拟化通用命令，如命令有不兼容十分拜托您务必联系我修正文章！十分感谢！\"><a href=\"#本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux-KVM-QEMU虚拟化通用命令，如命令有不兼容十分拜托您务必联系我修正文章！十分感谢！\" class=\"headerlink\" title=\"本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux KVM QEMU虚拟化通用命令，如命令有不兼容十分拜托您务必联系我修正文章！十分感谢！\"></a><strong>本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux KVM QEMU虚拟化通用命令，如命令有不兼容<em>十分拜托您务必联系我修正文章！十分感谢！</em></strong></h2><p><strong>以下命令中<code>10.0.1.$i</code>是因为本次批量部署节点均在10.0.1.0&#x2F;24段，需自行修改为你节点所在网段，如<code>192.168.100.$i</code></strong></p>\n<p><strong>批量创建网卡适用于如本次部署一样的情况，如外网网线统一连接到enp6s0网口，然后桥接到vmbr1给虚拟机连接使用，请根据你的情况自行修改</strong></p>\n<h2 id=\"批量加集群\"><a href=\"#批量加集群\" class=\"headerlink\" title=\"批量加集群\"></a>批量加集群</h2><span id=\"more\"></span>\n\n<p><em>更新：利用expect实现初次连接自动登陆或自动上传ssh key</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初次连接自动登陆</span></span><br><span class=\"line\">expect -c &#x27;spawn ssh -o StrictHostKeyChecking=no root@10.0.1.$i; expect &quot;(yes/no)&quot; &#123; send &quot;yes\\n&quot;; exp_continue &#125; &quot;assword:&quot; &#123; send &quot;密码\\n&quot; &#125;; interact&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初次连接自动上传ssh key，便于后续免密连接批量执行命令</span></span><br><span class=\"line\">expect -c &#x27;spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect &quot;(yes/no)&quot; &#123; send &quot;yes\\n&quot;; exp_continue &#125; &quot;assword:&quot; &#123; send &quot;密码\\n&quot; &#125;; interact&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量做免密连接</span></span><br><span class=\"line\">for i in &#123;开始节点如104..结束节点如150&#125;; do expect -c &quot;spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect \\&quot;(yes/no)\\&quot; &#123; send \\&quot;yes\\n\\&quot;; exp_continue &#125; \\&quot;assword:\\&quot; &#123; send \\&quot;密码\\n\\&quot; &#125;; interact&quot; ; sleep 1 ; done</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从创建集群的主节点批量远程自动加集群</span></span><br><span class=\"line\">for i in &#123;开始节点如104..结束节点如150&#125;; do ssh -t root@10.0.1.$i &quot;echo -e \\&quot;密码\\\\nyes\\&quot; | pvecm add 主节点完整IP如10.0.1.101 &amp;&amp; while true; do if pvecm status | grep -q $i; then echo -e \\&quot;successfully\\&quot;; break; else echo -e \\&quot;Please wait a moment.\\&quot;; sleep 5; fi; done&quot;; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动加集群示例</span></span><br><span class=\"line\">for i in &#123;126..150&#125;; do ssh -t root@10.0.1.$i &quot;echo -e \\&quot;密码\\\\nyes\\&quot; | pvecm add 10.0.1.125 &amp;&amp; while true; do if pvecm status | grep -q $i; then echo -e \\&quot;successfully\\&quot;; break; else echo -e \\&quot;Please wait a moment.\\&quot;; sleep 5; fi; done&quot;; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量自动创建vmbr1网卡</span></span><br><span class=\"line\">for i in &#123;127..150&#125;; do ssh -t root@10.0.1.$i &#x27;echo -e &quot;auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0&quot; &gt;&gt; /etc/network/interfaces &amp;&amp; systemctl restart networking&#x27;; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从开始节点循环执行到结束节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动移除yge-data</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">扩容yge-root</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">刷新yge-root分区容量</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改时间服务器为10.0.1.110节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启chrony.service</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">强制同步时间</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动加入集群</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">搜索当前ip比对pvecm status输出结果</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">未输出当前节点ip则持续提示等待</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输出当前节点ip则表示加入集群成功，输出successfully</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">间隔5秒执行</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量创建vmbr1网卡，桥接enp6s0</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-- 命令为单行命令，严禁换行，”一条龙命令“ --</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因YgeCloud无sshpass工具，且新节点与主节点无免密登陆</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">所以该命令需要手动输入ssh密码</span></span><br><span class=\"line\"></span><br><span class=\"line\">for i in &#123;开始节点如104..结束节点如150&#125;; do ssh -t root@10.0.1.$i &quot;lvremove -f /dev/yge/data &amp;&amp; lvextend -l +100%FREE /dev/yge/root &amp;&amp; resize2fs /dev/yge/root &amp;&amp; sed -i &#x27;s/pool 2.debian.pool.ntp.org/server 10.0.1.110/&#x27; /etc/chrony/chrony.conf &amp;&amp; systemctl restart chrony &amp;&amp; chronyc makestep &amp;&amp; sleep 3 &amp;&amp; date &amp;&amp; echo -e \\&quot;密码\\\\nyes\\&quot; | pvecm add 主节点完整IP如10.0.1.101 &amp;&amp; while true; do if pvecm status | grep -q $i; then echo -e \\&quot;successfully\\&quot;; break; else echo -e \\&quot;Please wait a moment.\\&quot;; sleep 5; fi; done &amp;&amp; echo -e \\&quot;auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0\\&quot; &gt;&gt; /etc/network/interfaces &amp;&amp; systemctl restart networking&quot;; done</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"批量从模板恢复虚拟机，比克隆更骚的办法\"><a href=\"#批量从模板恢复虚拟机，比克隆更骚的办法\" class=\"headerlink\" title=\"批量从模板恢复虚拟机，比克隆更骚的办法\"></a>批量从模板恢复虚拟机，比克隆更骚的办法</h2><p><strong>vzdump生成的备份恢复时是根据名称匹配的，如果修改了命名会导致恢复失败，使用qmrestore恢复前一定要还原名称</strong></p>\n<p><strong>如需临时命名以便区分备份文件，强烈建议添加前缀，不要修改原本的文件名！</strong></p>\n<p><strong>-storage指向的目标存储不能为共享！否则会出现cfs无法锁定报错（local在集群中错误的设置为了共享发现的）</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加了集群之后可以免密了！！！</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ssh连接到对应的子节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">执行qmrestore命令</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/mnt/pve/backup/dump是YGENAS发布的NFS在集群存储添加为NFS挂载的位置</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从 [你的备份文件名称] 备份文件批量恢复虚拟机并将虚拟机ID设置为当前节点ID，避免ID重复</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--store 指定恢复到<span class=\"built_in\">local</span>存储</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--uniaue使恢复的虚拟机重设网卡MAC以防MAC冲突</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">恢复完成后使用qm <span class=\"built_in\">set</span> VMID --name string命令重设虚拟机名为对应当前节点IP</span></span><br><span class=\"line\">for i in &#123;125..150&#125;; do ssh -t root@10.0.1.$i &quot;qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique &amp;&amp; qm set $i --name g$i&quot;;done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">并发恢复，将输出重定向到对应的<span class=\"variable\">$i</span>.<span class=\"built_in\">log</span>，避免ssh -t等待</span></span><br><span class=\"line\">for i in &#123;125..150&#125;; do nohup ssh -t root@10.0.1.$i &quot;qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique &amp;&amp; qm set $i --name g$i&quot; &gt; $i.log 2&gt;&amp;1 &amp; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">间隔1秒持续显示恢复进度</span></span><br><span class=\"line\">while true; do bash -c &#x27;clear;for i in &#123;125..150&#125;; do echo $i ; tail -n 1 &quot;$i.log&quot;; done&#x27;; sleep 1; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">排除rescan volumes...从而筛选出恢复失败的节点</span></span><br><span class=\"line\">while true; do clear; for i in &#123;125..150&#125;; do tail -n 1 &quot;$i.log&quot; | grep -q &quot;update&quot; || &#123; echo &quot;$i error&quot;; &#125;; done; sleep 1; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量删除克隆错误的虚拟机</span></span><br><span class=\"line\">for i in &#123;125..150&#125;;do nohup ssh -t root@10.0.1.$i &quot;qm destroy $i&quot; &gt; del$i.log 2&gt;&amp;1 &amp; done</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加错集群处理办法\"><a href=\"#加错集群处理办法\" class=\"headerlink\" title=\"加错集群处理办法\"></a>加错集群处理办法</h2><h3 id=\"主节点批量移除失效节点\"><a href=\"#主节点批量移除失效节点\" class=\"headerlink\" title=\"主节点批量移除失效节点\"></a>主节点批量移除失效节点</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除[104到124]的所有节点，yge是因为我的节点名前缀为yge，可以根据你的hostname来</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的hostname输出为yge104</span></span><br><span class=\"line\">for i in &#123;104..124&#125;; do pvecm delnode yge$i; done</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\"><a href=\"#在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\" class=\"headerlink\" title=\"在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\"></a>在主节点删除后子节点会残留集群信息无法加入，需清除残留信息</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">一条龙清理</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从127开始清理到150，需在主节点执行，误加集群后主节点可以免密登陆子节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">先在主节点创建cleanup.sh脚本并<span class=\"built_in\">chmod</span> +x cleanup.sh赋予可执行权限</span></span><br><span class=\"line\">for i in &#123;127..150&#125;; do scp cleanup.sh root@10.0.1.$i:/tmp/ &amp;&amp; ssh -t root@10.0.1.$i &quot;bash /tmp/cleanup.sh&quot; &amp;&amp; ssh -t root@10.0.1.$i &quot;rm /tmp/cleanup.sh&quot;; done</span><br></pre></td></tr></table></figure>\n\n<p><strong>因ssh -t无法处理!，所以迫不得已使用脚本执行</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop pve-cluster</span><br><span class=\"line\">systemctl stop corosync</span><br><span class=\"line\">pmxcfs -l</span><br><span class=\"line\">rm /etc/pve/corosync.conf</span><br><span class=\"line\">rm -rf /etc/corosync/*</span><br><span class=\"line\">rm -rf /etc/pve/nodes/!(hostname)</span><br><span class=\"line\">killall pmxcfs</span><br><span class=\"line\">systemctl start pve-cluster</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基于免密后批量配置crontab\"><a href=\"#基于免密后批量配置crontab\" class=\"headerlink\" title=\"基于免密后批量配置crontab\"></a>基于免密后批量配置crontab</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i in &#123;101..103&#125;;do ssh root@10.0.1.$i -t &quot;crontab -e&quot;;done</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1534,"excerpt":"<hr>\n<h2 id=\"本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux-KVM-QEMU虚拟化通用命令，如命令有不兼容十分拜托您务必联系我修正文章！十分感谢！\"><a href=\"#本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux-KVM-QEMU虚拟化通用命令，如命令有不兼容十分拜托您务必联系我修正文章！十分感谢！\" class=\"headerlink\" title=\"本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux KVM QEMU虚拟化通用命令，如命令有不兼容十分拜托您务必联系我修正文章！十分感谢！\"></a><strong>本文章所有命令均在Proxmox-VE进行实测并列出了各种BUG，本文涉及的命令均为Linux KVM QEMU虚拟化通用命令，如命令有不兼容<em>十分拜托您务必联系我修正文章！十分感谢！</em></strong></h2><p><strong>以下命令中<code>10.0.1.$i</code>是因为本次批量部署节点均在10.0.1.0&#x2F;24段，需自行修改为你节点所在网段，如<code>192.168.100.$i</code></strong></p>\n<p><strong>批量创建网卡适用于如本次部署一样的情况，如外网网线统一连接到enp6s0网口，然后桥接到vmbr1给虚拟机连接使用，请根据你的情况自行修改</strong></p>\n<h2 id=\"批量加集群\"><a href=\"#批量加集群\" class=\"headerlink\" title=\"批量加集群\"></a>批量加集群</h2>","more":"<p><em>更新：利用expect实现初次连接自动登陆或自动上传ssh key</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初次连接自动登陆</span></span><br><span class=\"line\">expect -c &#x27;spawn ssh -o StrictHostKeyChecking=no root@10.0.1.$i; expect &quot;(yes/no)&quot; &#123; send &quot;yes\\n&quot;; exp_continue &#125; &quot;assword:&quot; &#123; send &quot;密码\\n&quot; &#125;; interact&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初次连接自动上传ssh key，便于后续免密连接批量执行命令</span></span><br><span class=\"line\">expect -c &#x27;spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect &quot;(yes/no)&quot; &#123; send &quot;yes\\n&quot;; exp_continue &#125; &quot;assword:&quot; &#123; send &quot;密码\\n&quot; &#125;; interact&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量做免密连接</span></span><br><span class=\"line\">for i in &#123;开始节点如104..结束节点如150&#125;; do expect -c &quot;spawn ssh-copy-id -o StrictHostKeyChecking=no root@10.0.1.$i; expect \\&quot;(yes/no)\\&quot; &#123; send \\&quot;yes\\n\\&quot;; exp_continue &#125; \\&quot;assword:\\&quot; &#123; send \\&quot;密码\\n\\&quot; &#125;; interact&quot; ; sleep 1 ; done</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从创建集群的主节点批量远程自动加集群</span></span><br><span class=\"line\">for i in &#123;开始节点如104..结束节点如150&#125;; do ssh -t root@10.0.1.$i &quot;echo -e \\&quot;密码\\\\nyes\\&quot; | pvecm add 主节点完整IP如10.0.1.101 &amp;&amp; while true; do if pvecm status | grep -q $i; then echo -e \\&quot;successfully\\&quot;; break; else echo -e \\&quot;Please wait a moment.\\&quot;; sleep 5; fi; done&quot;; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动加集群示例</span></span><br><span class=\"line\">for i in &#123;126..150&#125;; do ssh -t root@10.0.1.$i &quot;echo -e \\&quot;密码\\\\nyes\\&quot; | pvecm add 10.0.1.125 &amp;&amp; while true; do if pvecm status | grep -q $i; then echo -e \\&quot;successfully\\&quot;; break; else echo -e \\&quot;Please wait a moment.\\&quot;; sleep 5; fi; done&quot;; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量自动创建vmbr1网卡</span></span><br><span class=\"line\">for i in &#123;127..150&#125;; do ssh -t root@10.0.1.$i &#x27;echo -e &quot;auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0&quot; &gt;&gt; /etc/network/interfaces &amp;&amp; systemctl restart networking&#x27;; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从开始节点循环执行到结束节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动移除yge-data</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">扩容yge-root</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">刷新yge-root分区容量</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改时间服务器为10.0.1.110节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启chrony.service</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">强制同步时间</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">自动加入集群</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">搜索当前ip比对pvecm status输出结果</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">未输出当前节点ip则持续提示等待</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输出当前节点ip则表示加入集群成功，输出successfully</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">间隔5秒执行</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量创建vmbr1网卡，桥接enp6s0</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-- 命令为单行命令，严禁换行，”一条龙命令“ --</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因YgeCloud无sshpass工具，且新节点与主节点无免密登陆</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">所以该命令需要手动输入ssh密码</span></span><br><span class=\"line\"></span><br><span class=\"line\">for i in &#123;开始节点如104..结束节点如150&#125;; do ssh -t root@10.0.1.$i &quot;lvremove -f /dev/yge/data &amp;&amp; lvextend -l +100%FREE /dev/yge/root &amp;&amp; resize2fs /dev/yge/root &amp;&amp; sed -i &#x27;s/pool 2.debian.pool.ntp.org/server 10.0.1.110/&#x27; /etc/chrony/chrony.conf &amp;&amp; systemctl restart chrony &amp;&amp; chronyc makestep &amp;&amp; sleep 3 &amp;&amp; date &amp;&amp; echo -e \\&quot;密码\\\\nyes\\&quot; | pvecm add 主节点完整IP如10.0.1.101 &amp;&amp; while true; do if pvecm status | grep -q $i; then echo -e \\&quot;successfully\\&quot;; break; else echo -e \\&quot;Please wait a moment.\\&quot;; sleep 5; fi; done &amp;&amp; echo -e \\&quot;auto vmbr1\\niface vmbr1 inet manual\\n\\tbridge-ports enp6s0\\n\\tbridge-stp off\\n\\tbridge-fd 0\\&quot; &gt;&gt; /etc/network/interfaces &amp;&amp; systemctl restart networking&quot;; done</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"批量从模板恢复虚拟机，比克隆更骚的办法\"><a href=\"#批量从模板恢复虚拟机，比克隆更骚的办法\" class=\"headerlink\" title=\"批量从模板恢复虚拟机，比克隆更骚的办法\"></a>批量从模板恢复虚拟机，比克隆更骚的办法</h2><p><strong>vzdump生成的备份恢复时是根据名称匹配的，如果修改了命名会导致恢复失败，使用qmrestore恢复前一定要还原名称</strong></p>\n<p><strong>如需临时命名以便区分备份文件，强烈建议添加前缀，不要修改原本的文件名！</strong></p>\n<p><strong>-storage指向的目标存储不能为共享！否则会出现cfs无法锁定报错（local在集群中错误的设置为了共享发现的）</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加了集群之后可以免密了！！！</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ssh连接到对应的子节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">执行qmrestore命令</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/mnt/pve/backup/dump是YGENAS发布的NFS在集群存储添加为NFS挂载的位置</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从 [你的备份文件名称] 备份文件批量恢复虚拟机并将虚拟机ID设置为当前节点ID，避免ID重复</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--store 指定恢复到<span class=\"built_in\">local</span>存储</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--uniaue使恢复的虚拟机重设网卡MAC以防MAC冲突</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">恢复完成后使用qm <span class=\"built_in\">set</span> VMID --name string命令重设虚拟机名为对应当前节点IP</span></span><br><span class=\"line\">for i in &#123;125..150&#125;; do ssh -t root@10.0.1.$i &quot;qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique &amp;&amp; qm set $i --name g$i&quot;;done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">并发恢复，将输出重定向到对应的<span class=\"variable\">$i</span>.<span class=\"built_in\">log</span>，避免ssh -t等待</span></span><br><span class=\"line\">for i in &#123;125..150&#125;; do nohup ssh -t root@10.0.1.$i &quot;qmrestore /mnt/pve/backup/dump/vzdump-qemu-2002-2024_02_04-16_44.vma.lzo $i -storage local -unique &amp;&amp; qm set $i --name g$i&quot; &gt; $i.log 2&gt;&amp;1 &amp; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">间隔1秒持续显示恢复进度</span></span><br><span class=\"line\">while true; do bash -c &#x27;clear;for i in &#123;125..150&#125;; do echo $i ; tail -n 1 &quot;$i.log&quot;; done&#x27;; sleep 1; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">排除rescan volumes...从而筛选出恢复失败的节点</span></span><br><span class=\"line\">while true; do clear; for i in &#123;125..150&#125;; do tail -n 1 &quot;$i.log&quot; | grep -q &quot;update&quot; || &#123; echo &quot;$i error&quot;; &#125;; done; sleep 1; done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">批量删除克隆错误的虚拟机</span></span><br><span class=\"line\">for i in &#123;125..150&#125;;do nohup ssh -t root@10.0.1.$i &quot;qm destroy $i&quot; &gt; del$i.log 2&gt;&amp;1 &amp; done</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加错集群处理办法\"><a href=\"#加错集群处理办法\" class=\"headerlink\" title=\"加错集群处理办法\"></a>加错集群处理办法</h2><h3 id=\"主节点批量移除失效节点\"><a href=\"#主节点批量移除失效节点\" class=\"headerlink\" title=\"主节点批量移除失效节点\"></a>主节点批量移除失效节点</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除[104到124]的所有节点，yge是因为我的节点名前缀为yge，可以根据你的hostname来</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的hostname输出为yge104</span></span><br><span class=\"line\">for i in &#123;104..124&#125;; do pvecm delnode yge$i; done</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\"><a href=\"#在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\" class=\"headerlink\" title=\"在主节点删除后子节点会残留集群信息无法加入，需清除残留信息\"></a>在主节点删除后子节点会残留集群信息无法加入，需清除残留信息</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">一条龙清理</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从127开始清理到150，需在主节点执行，误加集群后主节点可以免密登陆子节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">先在主节点创建cleanup.sh脚本并<span class=\"built_in\">chmod</span> +x cleanup.sh赋予可执行权限</span></span><br><span class=\"line\">for i in &#123;127..150&#125;; do scp cleanup.sh root@10.0.1.$i:/tmp/ &amp;&amp; ssh -t root@10.0.1.$i &quot;bash /tmp/cleanup.sh&quot; &amp;&amp; ssh -t root@10.0.1.$i &quot;rm /tmp/cleanup.sh&quot;; done</span><br></pre></td></tr></table></figure>\n\n<p><strong>因ssh -t无法处理!，所以迫不得已使用脚本执行</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl stop pve-cluster</span><br><span class=\"line\">systemctl stop corosync</span><br><span class=\"line\">pmxcfs -l</span><br><span class=\"line\">rm /etc/pve/corosync.conf</span><br><span class=\"line\">rm -rf /etc/corosync/*</span><br><span class=\"line\">rm -rf /etc/pve/nodes/!(hostname)</span><br><span class=\"line\">killall pmxcfs</span><br><span class=\"line\">systemctl start pve-cluster</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基于免密后批量配置crontab\"><a href=\"#基于免密后批量配置crontab\" class=\"headerlink\" title=\"基于免密后批量配置crontab\"></a>基于免密后批量配置crontab</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i in &#123;101..103&#125;;do ssh root@10.0.1.$i -t &quot;crontab -e&quot;;done</span><br></pre></td></tr></table></figure>"},{"title":"C++编写fio测试工具 | C++写脚本，我在发疯","comments":1,"date":"2024-11-15T06:05:38.000Z","keywords":["C++ - C - fio - 脚本"],"_content":"\n## 我有病，拿C++写测试工具\n\n[仓库地址：https://github.com/1949hacker/studycplusplus](https://github.com/1949hacker/studycplusplus)\n\nfio.hpp\n\nmain.cpp\n\nfio.cpp\n\n长文预警\n\n<!-- more -->\n\nfio.hpp代码\n\n```cpp\n// fio.hpp\n#ifndef FIO_HPP\n#define FIO_HPP\n\n// 设置测试参数\nvoid setConfig();\n\n// 创建预读文件\nvoid init_read();\n\n// 顺序写\nvoid fio_seq_write();\n\n// 顺序读\nvoid fio_seq_read();\n\n// 随机写\nvoid fio_rand_write();\n\n// 随机读\nvoid fio_rand_read();\n\n// 随机读写测试\nvoid fio_randrw();\n\n// 输出结果\nvoid runReport();\n\n#endif // FIO_HPP\n```\n\nmain.cpp代码\n\n```cpp\n#include \"fio.hpp\"\n#include <ctime>\n#include <fstream>\n#include <iostream>\n#include <memory>\n#include <streambuf>\n#include <termios.h>\n#include <unistd.h>\n\n// Linux/macOS 下的 getch() 实现\nint getch() {\n  struct termios oldt, newt;\n  int ch;\n  tcgetattr(STDIN_FILENO, &oldt);\n  newt = oldt;\n  newt.c_lflag &= ~(ICANON | ECHO);\n  tcsetattr(STDIN_FILENO, TCSANOW, &newt);\n  ch = getchar();\n  tcsetattr(STDIN_FILENO, TCSANOW, &oldt);\n  return ch;\n}\n\nusing namespace std;\n\n// 自定义流缓冲区类，将输出内容同时写入控制台和日志文件\nclass TeeBuf : public streambuf {\npublic:\n  TeeBuf(streambuf *consoleBuf, streambuf *fileBuf)\n      : consoleBuf(consoleBuf), fileBuf(fileBuf) {}\n\nprotected:\n  virtual int overflow(int c) override {\n    if (c == EOF) {\n      return !EOF;\n    } else {\n      if (consoleBuf->sputc(c) == EOF)\n        return EOF;\n      if (fileBuf->sputc(c) == EOF)\n        return EOF;\n      return c;\n    }\n  }\n\n  virtual int sync() override {\n    if (consoleBuf->pubsync() == -1)\n      return -1;\n    if (fileBuf->pubsync() == -1)\n      return -1;\n    return 0;\n  }\n\nprivate:\n  streambuf *consoleBuf;\n  streambuf *fileBuf;\n};\n\nint main() {\n\n  // 日志目录初始化\n  int result = system(\"mkdir -p /var/log/fio_tool\");\n\n  if (result == 0) {\n    std::cout << \"\\033[32m日志存储目录 /var/log/fio_tool 已成功创建。\\033[0m\"\n              << std::endl;\n  } else {\n    std::cerr << \"\\033[31m创建目录 /var/log/fio_tool \"\n                 \"时出现错误。请检查当前用户的运行权限！\\033[0m\"\n              << std::endl;\n    return 0;\n  }\n\n  // 获取时间并格式化文件名\n  time_t log_time = time(nullptr);\n  tm *localTime = localtime(&log_time);\n  char timeStr[20];\n  strftime(timeStr, sizeof(timeStr), \"%Y-%m-%d-%H-%M-%S\", localTime);\n  string fileName = \"/var/log/fio_tool/\" + string(timeStr) + \".log\";\n\n  // 创建日志文件流\n  ofstream logFile(fileName, ios::app);\n  if (!logFile) {\n    cerr << \"\\033[31m无法创建日志文件！\\033[0m\" << endl;\n    return 1;\n  } else {\n    cout << \"\\033[32m成功创建日志文件：\\033[0m\" << fileName << endl;\n  }\n\n  // 重定向 cout 输出到日志文件和控制台\n  TeeBuf teeBuf(cout.rdbuf(), logFile.rdbuf());\n  streambuf *originalCoutBuf = cout.rdbuf(&teeBuf);\n\n  cout << \"\\033[36m欢迎使用fio测试工具\\n日志和输出的fio.\"\n          \"csv默认保存到/var/log/fio_tool/\"\n          \"\\n日志不会自行清除，运行前请自行清理日志文件和检查是否残留有测试文件\"\n          \"\\n输出的数据统一为KiB/s单位，iops无单位\\n请<按键>\"\n          \"选择你的测试内容：\\n\"\n       << \"1. 顺序写测试\\n\"\n       << \"2. 随机写测试\\n\\n\\n\"\n       << \"\\033[31m-------分割线-------\\n\"\n       << \"进行读测试之前需要先创建预读文件，固定为测试路径下的init_read.[0-15]\"\n       << \".0共16个文件\\n\"\n       << \"请自行根据测试情况判断是否需要重新生成，如需重新生成，请删除后按<r>\"\n       << \"进行预读文件创建\\n\"\n       << \"如无需创建预读文件则直接按键开始测试即可！\\n\\n\"\n       << \"测试完成后记得清理干净测试残留的文件和日志文件\\n\"\n       << \"-------分割线-------\\033[36m\\n\\n\\n\"\n       << \"3. 顺序读测试\\n\"\n       << \"4. 随机读测试\\n\"\n       << \"5. 4k随机50%混合读写测试\\n\"\n       << \"r. 创建预读文件\\n\"\n       << \"f. Fullauto全自动测试\"\n       << \"q. 退出程序\\n\"\n       << \"s. 你想骚一下？\\033[0m\" << endl;\n\n  char choice;\n  while (true) {\n    choice = getch(); // Linux/macOS 下使用自定义 getch()\n\n    cout << choice << endl; // 打印选项\n    switch (choice) {\n    case '1':\n      setConfig();\n      fio_seq_write();\n      return 0;\n    case '2':\n      setConfig();\n      fio_rand_write();\n      return 0;\n    case '3':\n      setConfig();\n      fio_seq_read();\n      return 0;\n    case '4':\n      setConfig();\n      fio_rand_read();\n      return 0;\n    case '5':\n      setConfig();\n      fio_randrw();\n      return 0;\n    case 'r':\n      setConfig();\n      init_read();\n      return 0;\n    case 'f':\n      setConfig();\n      fio_seq_write();\n      fio_rand_write();\n      init_read();\n      fio_seq_read();\n      fio_rand_read();\n      fio_randrw();\n      return 0;\n    case 'q':\n      cout << \"程序已退出。\" << endl;\n      return 0;\n    case 's':\n      while (true) {\n        cout << \"骚个鸡儿啊，正事儿不干？我不懒得写炸机代码？\" << endl;\n      }\n      return 0;\n    default:\n      cout << \"\\033[31m无效选项，请重新输入。\\033[0m\" << endl;\n    }\n  }\n\n  // 恢复 cout 的原始缓冲区\n  cout.rdbuf(originalCoutBuf);\n\n  return 0;\n}\n\n```\n\nfio.cpp代码\n\n```cpp\n#include <array>\n#include <cstdlib>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <regex>\n#include <sstream>\n#include <stdexcept>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\n// 全局参数\nint bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg, bw[] = {0, 0, 0, 0, 0, 0},\n                                                    iops[] = {0, 0, 0, 0, 0, 0};\nstring dir, fsize, ioengine, name, fio_cmd, runtime, direct, line;\nstringstream fio_output;\nvector<vector<string>> run_report;\nvector<string> row;\nvector<int> values, bw_int, iops_int;\n\n// 参数设置\nvoid setConfig() {\n  cout << \"\\033[36m测试路径（完整输入，带/结尾，如/mnt/iotest/）：\";\n  cin >> dir;\n  cout << \"测试文件大小，需要略大于内存大小，仅输入数字单位为G，size=\";\n  cin >> fsize;\n  cout << \"运行时长，至少30秒，仅输入数字单位为秒，runtime=\";\n  cin >> runtime;\n  cout << \"io测试引擎，Linux（NAS）输入libaio，ioengine=\";\n  cin >> ioengine;\n  cout << \"设置是否经过系统缓存，1不缓存，0操作系统缓存，direct=\\033[0m\";\n  cin >> direct;\n}\n\n// 删除测试文件\nvoid rm_file(string name) {\n  string rm_command = \"rm -rf \" + dir + name;\n  system(rm_command.c_str()); // 删除 /iopsTest 目录下的所有文件\n  cout << \"\\033[32m临时文件已删除\\033[0m\" << endl;\n}\n\nvoid run_cmd(const string &cmd) {\n  // 重置变量\n  fio_output.str(\"\");\n  fio_output.clear();\n\n  FILE *fp = popen(cmd.c_str(), \"r\");\n  if (fp == nullptr) {\n    cerr << \"\\033[31mError opening pipe!\\033[0m\" << endl;\n    return;\n  }\n\n  // 从fio输出中获取数据\n  char buffer[128];\n  while (fgets(buffer, sizeof(buffer), fp) != nullptr) {\n    fio_output << buffer;\n  }\n  fclose(fp);\n\n  // DEBUG:显示fio的输出内容\n  // cout << fio_output.str();\n}\n\n// 分析fio输出\nvoid format(const int &i) {\n\n  vector<string> bw_num, iops_num;\n\n  while (getline(fio_output, line)) {\n    if (line.find(\"samples\") != string::npos) {\n      cout << \"\\033[32;1m筛选成功，原始数据：\\033[0m\" << line << endl;\n      if (line.find(\"bw \") != string::npos) {\n        if (line.find(\"MiB/s\") != string::npos) {\n          cout << \"\\033[32;1m检测到单位MiB/s，将转换为KiB/s\\033[0m\" << endl;\n          // 提取带宽数字\n          regex bw_regex(R\"(\\d+\\.\\d+|\\d+)\");\n          smatch match;\n          while (regex_search(line, match, bw_regex)) {\n            // 检测到单位是MiB，则转换为KiB\n            float bw_value_kib = stof(match.str());\n            bw_value_kib *= 1024;\n            int bw_value_bytes = static_cast<int>(bw_value_kib); // 转为整数\n            bw_num.push_back(to_string(bw_value_bytes));\n            line = match.suffix();\n          }\n        } else if (line.find(\"KiB/s\") != string::npos) {\n          cout << \"\\033[32;1m检测到单位KiB/s，直接提取\\033[0m\" << endl;\n          // 提取带宽数字\n          regex bw_regex(R\"(\\d+\\.\\d+|\\d+)\");\n          smatch match;\n          while (regex_search(line, match, bw_regex)) {\n            bw_num.push_back(match.str());\n            line = match.suffix();\n          }\n        }\n      }\n      if (line.find(\"iops\") != string::npos) {\n        // 提取IOPS数字\n        regex iops_regex(R\"(\\d+\\.\\d+|\\d+)\");\n        smatch match;\n        while (regex_search(line, match, iops_regex)) {\n          iops_num.push_back(match.str());\n          line = match.suffix();\n        }\n      }\n    }\n  }\n  // 转换为整数\n  for (const string &s : bw_num) {\n    bw_int.push_back(static_cast<int>(stof(s)));\n  }\n  for (const string &s : iops_num) {\n    iops_int.push_back(static_cast<int>(stof(s)));\n  }\n\n  // DEBUG: 检查原始数据是否正常\n  // for (int a : bw_int) {\n  //   cout << \"bw:\" << a << endl;\n  // }\n  // for (int a : iops_int) {\n  //   cout << \"iops:\" << a << endl;\n  // }\n\n  if (bw_int.size() > 7) {\n    // 混合读写\n    cout << \"\\033[32;1m\" << name << \" | 第\" << i << \"次带宽运行<读>结果:\"\n         << \"min:\" << bw_int[0] << \"KiB/s max:\" << bw_int[1]\n         << \"KiB/s avg:\" << bw_int[3] << \"KiB/s\\n\"\n         << name << \" | 第\" << i << \"次次IOPS运行<读>结果:\"\n         << \"min:\" << iops_int[0] << \" max:\" << iops_int[1]\n         << \" avg:\" << iops_int[2] << endl;\n    cout << name << \" | 第\" << i << \"次带宽运行<写>结果:\"\n         << \"min:\" << bw_int[6] << \"KiB/s max:\" << bw_int[7]\n         << \"KiB/s avg:\" << bw_int[9] << \"KiB/s\\n\"\n         << name << \" | 第\" << i << \"次次IOPS运行<写>结果:\"\n         << \"min:\" << iops_int[5] << \" max:\" << iops_int[6]\n         << \" avg:\" << iops_int[7] << \"\\033[0m\" << endl;\n    // 整理带宽和IOPS数据\n    bw[0] += bw_int[0];\n    bw[1] += bw_int[1];\n    bw[2] += bw_int[3];\n    bw[3] = bw_int[6];\n    bw[4] += bw_int[7];\n    bw[5] += bw_int[9];\n    iops[0] += iops_int[0];\n    iops[1] += iops_int[1];\n    iops[2] += iops_int[2];\n    iops[3] += iops_int[5];\n    iops[4] += iops_int[6];\n    iops[5] += iops_int[7];\n  } else {\n    cout << \"\\033[32;1m\" << name << \" | 第\" << i << \"次带宽运行结果:\"\n         << \"min:\" << bw_int[0] << \"KiB/s max:\" << bw_int[1]\n         << \"KiB/s avg:\" << bw_int[3] << \"KiB/s\\n\"\n         << name << \" | 第\" << i << \"次次IOPS运行结果:\"\n         << \"min:\" << iops_int[0] << \" max:\" << iops_int[1]\n         << \" avg:\" << iops_int[2] << \"\\033[0m\" << endl;\n    // 整理带宽和IOPS数据\n    bw[0] += bw_int[0];\n    bw[1] += bw_int[1];\n    bw[2] += bw_int[3];\n    iops[0] += iops_int[0];\n    iops[1] += iops_int[1];\n    iops[2] += iops_int[2];\n  }\n}\n\nvoid fio_sum(const string &name) {\n\n  if (bw[3] != 0) {\n    // 针对混合读写处理\n    //  计算最小、最大和平均值\n    int RbwMin = bw[0] / 3;\n    int RbwMax = bw[1] / 3;\n    int RbwAvg = bw[2] / 3;\n    int RiopsMin = iops[0] / 3;\n    int RiopsMax = iops[1] / 3;\n    int RiopsAvg = iops[2] / 3;\n    int WbwMin = bw[3] / 3;\n    int WbwMax = bw[4] / 3;\n    int WbwAvg = bw[5] / 3;\n    int WiopsMin = iops[3] / 3;\n    int WiopsMax = iops[4] / 3;\n    int WiopsAvg = iops[5] / 3;\n    // 将结果存储到数据表中，第一列是 名称，后面是6个值\n    values = {RbwMin, RbwMax, RbwAvg, RiopsMin, RiopsMax, RiopsAvg,\n              WbwMin, WbwMax, WbwAvg, WiopsMin, WiopsMax, WiopsAvg};\n    row = {name};\n    for (int val : values) {\n      row.push_back(to_string(val)); // 将每个值转换为字符串并添加到行中\n    }\n    run_report.push_back(row); // 将这行添加到数据中\n  } else {\n    // 计算最小、最大和平均值\n    int bwMin = bw[0] / 3;\n    int bwMax = bw[1] / 3;\n    int bwAvg = bw[2] / 3;\n    int iopsMin = iops[0] / 3;\n    int iopsMax = iops[1] / 3;\n    int iopsAvg = iops[2] / 3;\n    // 将结果存储到数据表中，第一列是 名称，后面是6个值\n    values = {bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg};\n    row = {name};\n    for (int val : values) {\n      row.push_back(to_string(val)); // 将每个值转换为字符串并添加到行中\n    }\n    run_report.push_back(row); // 将这行添加到数据中\n    // 重置\n    values.clear();\n    row.clear();\n  }\n\n  // 重置数据\n  fill(begin(bw), end(bw), 0);\n  fill(begin(iops), end(iops), 0);\n}\n\nvoid runReport() {\n\n  // 打开文件用于追加写入\n  ofstream outputFile(\"/var/log/fio_tool/fio.csv\", ios::app);\n\n  if (outputFile.is_open()) {\n    // 如果文件为空，先写入表头（假设表头只在文件为空时写入一次）\n    if (outputFile.tellp() == 0) {\n      outputFile\n          << \"测试类型,带宽最小值,带宽最大值,带宽均值,IOPS最小值,\"\n             \"IOPS最大值,IOPS均值,写带宽最小值,写带宽最大值,写带宽均值,\"\n             \"写IOPS最小值,\"\n             \"写IOPS最大值,写IOPS均值,(前6列数据在混合读写中作为读的数据)\"\n          << endl;\n    }\n\n    for (const auto &row : run_report) {\n      for (const auto &cell : row) {\n        outputFile << cell << \",\";\n      }\n      outputFile << endl;\n    }\n\n    // 关闭文件\n    outputFile.close();\n\n    cout << \"\\033[32;1m数据已成功追加到fio.csv文件。\\033[0m\" << endl;\n  } else {\n    cerr << \"\\033[31;1m无法打开fio.csv文件进行追加写入。\\033[0m\" << endl;\n  }\n  cout << \"\\033[32;1m已重置run_report\\033[0m\" << endl;\n  // 重置run_report\n  run_report.clear();\n}\n\n// ---创建预读文件 start---\nvoid init_read() {\n  cout << \"\\033[32;1m预读文件的大小与测试文件一致，自动从之前的测试中获取\\033[\"\n          \"0m\\n\";\n  cout << \"\\033[31;1m正在为读取测试创建预读文件，请稍后...\"\n          \"\\n创建完毕后会出现提示，创建的文件数量为最大numjobs数量：16个，每个\"\n          \"大小为\" +\n              fsize + \"G\"\n       << \"\\033[0m\" << endl;\n  fio_cmd = \"fio -name=init_read -size=\" + fsize +\n            \"G -bs=1m -direct=1 -rw=write -ioengine=\" + ioengine +\n            \" -numjobs=16 -group_reporting -iodepth=1 -directory=\" + dir;\n  run_cmd(fio_cmd);\n  cout << \"\\033[32;\"\n          \"1m预读文件创建完毕！！！\\n预读文件创建完毕！！！\\n预读文件创建完毕！\"\n          \"！\"\n          \"！\\n\\033[0m\"\n       << endl;\n}\n// ---创建预读文件 end---\n\n// --- 顺序写start ---\nvoid fio_seq_write() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m顺序写测试，共计50项，每项3次，每次 \" << runtime\n       << \" 秒，共计 \" << to_string((stoi(runtime) + 5) * 50 * 3) << \" 秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 50 * 3 / 60 / 60\n       << \" 小时\\n进行中...\\033[0m\" << endl;\n\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n\n      // numjobs=1\n      string numjobs[] = {\"1\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=512/1024\n        string bs_group[] = {\"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"write\";\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            // 重复运行3次\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + to_string(i);\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(to_string(i)); //\"rm -rf \" + dir + ? rm -rf /mnt/?\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"128\", \"256\", \"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            string rw = \"write\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"mkdir -p \" + dir + \"dir_\" + to_string(i) + \"/\" +\n                        \" && fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"dir_\" + to_string(i) + \"/\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(\"dir_\" + to_string(i));\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 顺序写end ---\n\n// --- 顺序读start ---\nvoid fio_seq_read() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m顺序读测试，共计50项，每项3次，每次预热5秒，每次测试\" +\n              runtime + \"秒，共计\" + to_string((stoi(runtime) + 5) * 50 * 3) +\n              \"秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 50 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n\n      // numjobs=1\n      string numjobs[] = {\"1\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=512/1024\n        string bs_group[] = {\"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            string rw = \"read\";\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            // 重复运行3次\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"init_read.0.0\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"128\", \"256\", \"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"read\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir;\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 顺序读end ---\n\n// --- 随机读start ---\nvoid fio_rand_read() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m随机读测试，共计15项，每项3次，每次预热5秒，每次测试\" +\n              runtime + \"秒，共计\" + to_string((stoi(runtime) + 5) * 15 * 3) +\n              \"秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 15 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n\n      // numjobs=1\n      string numjobs[] = {\"1\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=512/1024\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            string rw = \"randread\";\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            // 重复运行3次\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd =\n                  \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                  \"-name=init_read -size=\" +\n                  fsize + \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                  \"k -direct=\" + direct + \" -rw=\" + rw +\n                  \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                  \" -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=\" +\n                  iodepth + \" -\" + dorf + \"=\" + dir + \"init_read.0.0\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randread\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd =\n                  \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                  \"-name=init_read -size=\" +\n                  fsize + \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                  \"k -direct=\" + direct + \" -rw=\" + rw +\n                  \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                  \" -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=\" +\n                  iodepth + \" -\" + dorf + \"=\" + dir;\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 随机读end ---\n\n// --- 随机写开始 ---\nvoid fio_rand_write() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  cout << \"\\033[31;1m随机写测试，共计15项，每项3次，每次预热5秒，每次测试\" +\n              runtime + \"秒，共计\" + to_string((stoi(runtime) + 5) * 15 * 3) +\n              \"秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 15 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n                                             // numjobs=8/16\n      string numjobs[] = {\"1\"};              // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randwrite\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + to_string(i);\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(to_string(i));\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randwrite\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"mkdir -p \" + dir + \"dir_\" + to_string(i) + \"/\" +\n                        \" && fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"dir_\" + to_string(i) + \"/\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(\"dir_\" + to_string(i));\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 随机写结束 ---\n\n// --- 4k随机读写开始 ---\nvoid fio_randrw() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m50%随机读写测试，共计15项，每项3次，每次\" + runtime +\n              \"秒，共计\" + to_string((stoi(runtime) + 5) * 15 * 3) + \"秒，约\"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 15 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n                                             // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"};        // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randrw\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"init_read.0.0\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randrw\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir;\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 4k随机读写结束 ---\n```\n","source":"_posts/cpp编写fio测试工具，我在发疯.md","raw":"---\ntitle: C++编写fio测试工具 | C++写脚本，我在发疯\ncomments: true\ncategories: [知识库]\ndate: 2024-11-15 14:05:38\nkeywords:\n\t- C++\n    - C\n    - fio\n    - 脚本\ntags:\n\t- C++\n    - C\n    - fio\n    - 脚本\n---\n\n## 我有病，拿C++写测试工具\n\n[仓库地址：https://github.com/1949hacker/studycplusplus](https://github.com/1949hacker/studycplusplus)\n\nfio.hpp\n\nmain.cpp\n\nfio.cpp\n\n长文预警\n\n<!-- more -->\n\nfio.hpp代码\n\n```cpp\n// fio.hpp\n#ifndef FIO_HPP\n#define FIO_HPP\n\n// 设置测试参数\nvoid setConfig();\n\n// 创建预读文件\nvoid init_read();\n\n// 顺序写\nvoid fio_seq_write();\n\n// 顺序读\nvoid fio_seq_read();\n\n// 随机写\nvoid fio_rand_write();\n\n// 随机读\nvoid fio_rand_read();\n\n// 随机读写测试\nvoid fio_randrw();\n\n// 输出结果\nvoid runReport();\n\n#endif // FIO_HPP\n```\n\nmain.cpp代码\n\n```cpp\n#include \"fio.hpp\"\n#include <ctime>\n#include <fstream>\n#include <iostream>\n#include <memory>\n#include <streambuf>\n#include <termios.h>\n#include <unistd.h>\n\n// Linux/macOS 下的 getch() 实现\nint getch() {\n  struct termios oldt, newt;\n  int ch;\n  tcgetattr(STDIN_FILENO, &oldt);\n  newt = oldt;\n  newt.c_lflag &= ~(ICANON | ECHO);\n  tcsetattr(STDIN_FILENO, TCSANOW, &newt);\n  ch = getchar();\n  tcsetattr(STDIN_FILENO, TCSANOW, &oldt);\n  return ch;\n}\n\nusing namespace std;\n\n// 自定义流缓冲区类，将输出内容同时写入控制台和日志文件\nclass TeeBuf : public streambuf {\npublic:\n  TeeBuf(streambuf *consoleBuf, streambuf *fileBuf)\n      : consoleBuf(consoleBuf), fileBuf(fileBuf) {}\n\nprotected:\n  virtual int overflow(int c) override {\n    if (c == EOF) {\n      return !EOF;\n    } else {\n      if (consoleBuf->sputc(c) == EOF)\n        return EOF;\n      if (fileBuf->sputc(c) == EOF)\n        return EOF;\n      return c;\n    }\n  }\n\n  virtual int sync() override {\n    if (consoleBuf->pubsync() == -1)\n      return -1;\n    if (fileBuf->pubsync() == -1)\n      return -1;\n    return 0;\n  }\n\nprivate:\n  streambuf *consoleBuf;\n  streambuf *fileBuf;\n};\n\nint main() {\n\n  // 日志目录初始化\n  int result = system(\"mkdir -p /var/log/fio_tool\");\n\n  if (result == 0) {\n    std::cout << \"\\033[32m日志存储目录 /var/log/fio_tool 已成功创建。\\033[0m\"\n              << std::endl;\n  } else {\n    std::cerr << \"\\033[31m创建目录 /var/log/fio_tool \"\n                 \"时出现错误。请检查当前用户的运行权限！\\033[0m\"\n              << std::endl;\n    return 0;\n  }\n\n  // 获取时间并格式化文件名\n  time_t log_time = time(nullptr);\n  tm *localTime = localtime(&log_time);\n  char timeStr[20];\n  strftime(timeStr, sizeof(timeStr), \"%Y-%m-%d-%H-%M-%S\", localTime);\n  string fileName = \"/var/log/fio_tool/\" + string(timeStr) + \".log\";\n\n  // 创建日志文件流\n  ofstream logFile(fileName, ios::app);\n  if (!logFile) {\n    cerr << \"\\033[31m无法创建日志文件！\\033[0m\" << endl;\n    return 1;\n  } else {\n    cout << \"\\033[32m成功创建日志文件：\\033[0m\" << fileName << endl;\n  }\n\n  // 重定向 cout 输出到日志文件和控制台\n  TeeBuf teeBuf(cout.rdbuf(), logFile.rdbuf());\n  streambuf *originalCoutBuf = cout.rdbuf(&teeBuf);\n\n  cout << \"\\033[36m欢迎使用fio测试工具\\n日志和输出的fio.\"\n          \"csv默认保存到/var/log/fio_tool/\"\n          \"\\n日志不会自行清除，运行前请自行清理日志文件和检查是否残留有测试文件\"\n          \"\\n输出的数据统一为KiB/s单位，iops无单位\\n请<按键>\"\n          \"选择你的测试内容：\\n\"\n       << \"1. 顺序写测试\\n\"\n       << \"2. 随机写测试\\n\\n\\n\"\n       << \"\\033[31m-------分割线-------\\n\"\n       << \"进行读测试之前需要先创建预读文件，固定为测试路径下的init_read.[0-15]\"\n       << \".0共16个文件\\n\"\n       << \"请自行根据测试情况判断是否需要重新生成，如需重新生成，请删除后按<r>\"\n       << \"进行预读文件创建\\n\"\n       << \"如无需创建预读文件则直接按键开始测试即可！\\n\\n\"\n       << \"测试完成后记得清理干净测试残留的文件和日志文件\\n\"\n       << \"-------分割线-------\\033[36m\\n\\n\\n\"\n       << \"3. 顺序读测试\\n\"\n       << \"4. 随机读测试\\n\"\n       << \"5. 4k随机50%混合读写测试\\n\"\n       << \"r. 创建预读文件\\n\"\n       << \"f. Fullauto全自动测试\"\n       << \"q. 退出程序\\n\"\n       << \"s. 你想骚一下？\\033[0m\" << endl;\n\n  char choice;\n  while (true) {\n    choice = getch(); // Linux/macOS 下使用自定义 getch()\n\n    cout << choice << endl; // 打印选项\n    switch (choice) {\n    case '1':\n      setConfig();\n      fio_seq_write();\n      return 0;\n    case '2':\n      setConfig();\n      fio_rand_write();\n      return 0;\n    case '3':\n      setConfig();\n      fio_seq_read();\n      return 0;\n    case '4':\n      setConfig();\n      fio_rand_read();\n      return 0;\n    case '5':\n      setConfig();\n      fio_randrw();\n      return 0;\n    case 'r':\n      setConfig();\n      init_read();\n      return 0;\n    case 'f':\n      setConfig();\n      fio_seq_write();\n      fio_rand_write();\n      init_read();\n      fio_seq_read();\n      fio_rand_read();\n      fio_randrw();\n      return 0;\n    case 'q':\n      cout << \"程序已退出。\" << endl;\n      return 0;\n    case 's':\n      while (true) {\n        cout << \"骚个鸡儿啊，正事儿不干？我不懒得写炸机代码？\" << endl;\n      }\n      return 0;\n    default:\n      cout << \"\\033[31m无效选项，请重新输入。\\033[0m\" << endl;\n    }\n  }\n\n  // 恢复 cout 的原始缓冲区\n  cout.rdbuf(originalCoutBuf);\n\n  return 0;\n}\n\n```\n\nfio.cpp代码\n\n```cpp\n#include <array>\n#include <cstdlib>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <regex>\n#include <sstream>\n#include <stdexcept>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\n// 全局参数\nint bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg, bw[] = {0, 0, 0, 0, 0, 0},\n                                                    iops[] = {0, 0, 0, 0, 0, 0};\nstring dir, fsize, ioengine, name, fio_cmd, runtime, direct, line;\nstringstream fio_output;\nvector<vector<string>> run_report;\nvector<string> row;\nvector<int> values, bw_int, iops_int;\n\n// 参数设置\nvoid setConfig() {\n  cout << \"\\033[36m测试路径（完整输入，带/结尾，如/mnt/iotest/）：\";\n  cin >> dir;\n  cout << \"测试文件大小，需要略大于内存大小，仅输入数字单位为G，size=\";\n  cin >> fsize;\n  cout << \"运行时长，至少30秒，仅输入数字单位为秒，runtime=\";\n  cin >> runtime;\n  cout << \"io测试引擎，Linux（NAS）输入libaio，ioengine=\";\n  cin >> ioengine;\n  cout << \"设置是否经过系统缓存，1不缓存，0操作系统缓存，direct=\\033[0m\";\n  cin >> direct;\n}\n\n// 删除测试文件\nvoid rm_file(string name) {\n  string rm_command = \"rm -rf \" + dir + name;\n  system(rm_command.c_str()); // 删除 /iopsTest 目录下的所有文件\n  cout << \"\\033[32m临时文件已删除\\033[0m\" << endl;\n}\n\nvoid run_cmd(const string &cmd) {\n  // 重置变量\n  fio_output.str(\"\");\n  fio_output.clear();\n\n  FILE *fp = popen(cmd.c_str(), \"r\");\n  if (fp == nullptr) {\n    cerr << \"\\033[31mError opening pipe!\\033[0m\" << endl;\n    return;\n  }\n\n  // 从fio输出中获取数据\n  char buffer[128];\n  while (fgets(buffer, sizeof(buffer), fp) != nullptr) {\n    fio_output << buffer;\n  }\n  fclose(fp);\n\n  // DEBUG:显示fio的输出内容\n  // cout << fio_output.str();\n}\n\n// 分析fio输出\nvoid format(const int &i) {\n\n  vector<string> bw_num, iops_num;\n\n  while (getline(fio_output, line)) {\n    if (line.find(\"samples\") != string::npos) {\n      cout << \"\\033[32;1m筛选成功，原始数据：\\033[0m\" << line << endl;\n      if (line.find(\"bw \") != string::npos) {\n        if (line.find(\"MiB/s\") != string::npos) {\n          cout << \"\\033[32;1m检测到单位MiB/s，将转换为KiB/s\\033[0m\" << endl;\n          // 提取带宽数字\n          regex bw_regex(R\"(\\d+\\.\\d+|\\d+)\");\n          smatch match;\n          while (regex_search(line, match, bw_regex)) {\n            // 检测到单位是MiB，则转换为KiB\n            float bw_value_kib = stof(match.str());\n            bw_value_kib *= 1024;\n            int bw_value_bytes = static_cast<int>(bw_value_kib); // 转为整数\n            bw_num.push_back(to_string(bw_value_bytes));\n            line = match.suffix();\n          }\n        } else if (line.find(\"KiB/s\") != string::npos) {\n          cout << \"\\033[32;1m检测到单位KiB/s，直接提取\\033[0m\" << endl;\n          // 提取带宽数字\n          regex bw_regex(R\"(\\d+\\.\\d+|\\d+)\");\n          smatch match;\n          while (regex_search(line, match, bw_regex)) {\n            bw_num.push_back(match.str());\n            line = match.suffix();\n          }\n        }\n      }\n      if (line.find(\"iops\") != string::npos) {\n        // 提取IOPS数字\n        regex iops_regex(R\"(\\d+\\.\\d+|\\d+)\");\n        smatch match;\n        while (regex_search(line, match, iops_regex)) {\n          iops_num.push_back(match.str());\n          line = match.suffix();\n        }\n      }\n    }\n  }\n  // 转换为整数\n  for (const string &s : bw_num) {\n    bw_int.push_back(static_cast<int>(stof(s)));\n  }\n  for (const string &s : iops_num) {\n    iops_int.push_back(static_cast<int>(stof(s)));\n  }\n\n  // DEBUG: 检查原始数据是否正常\n  // for (int a : bw_int) {\n  //   cout << \"bw:\" << a << endl;\n  // }\n  // for (int a : iops_int) {\n  //   cout << \"iops:\" << a << endl;\n  // }\n\n  if (bw_int.size() > 7) {\n    // 混合读写\n    cout << \"\\033[32;1m\" << name << \" | 第\" << i << \"次带宽运行<读>结果:\"\n         << \"min:\" << bw_int[0] << \"KiB/s max:\" << bw_int[1]\n         << \"KiB/s avg:\" << bw_int[3] << \"KiB/s\\n\"\n         << name << \" | 第\" << i << \"次次IOPS运行<读>结果:\"\n         << \"min:\" << iops_int[0] << \" max:\" << iops_int[1]\n         << \" avg:\" << iops_int[2] << endl;\n    cout << name << \" | 第\" << i << \"次带宽运行<写>结果:\"\n         << \"min:\" << bw_int[6] << \"KiB/s max:\" << bw_int[7]\n         << \"KiB/s avg:\" << bw_int[9] << \"KiB/s\\n\"\n         << name << \" | 第\" << i << \"次次IOPS运行<写>结果:\"\n         << \"min:\" << iops_int[5] << \" max:\" << iops_int[6]\n         << \" avg:\" << iops_int[7] << \"\\033[0m\" << endl;\n    // 整理带宽和IOPS数据\n    bw[0] += bw_int[0];\n    bw[1] += bw_int[1];\n    bw[2] += bw_int[3];\n    bw[3] = bw_int[6];\n    bw[4] += bw_int[7];\n    bw[5] += bw_int[9];\n    iops[0] += iops_int[0];\n    iops[1] += iops_int[1];\n    iops[2] += iops_int[2];\n    iops[3] += iops_int[5];\n    iops[4] += iops_int[6];\n    iops[5] += iops_int[7];\n  } else {\n    cout << \"\\033[32;1m\" << name << \" | 第\" << i << \"次带宽运行结果:\"\n         << \"min:\" << bw_int[0] << \"KiB/s max:\" << bw_int[1]\n         << \"KiB/s avg:\" << bw_int[3] << \"KiB/s\\n\"\n         << name << \" | 第\" << i << \"次次IOPS运行结果:\"\n         << \"min:\" << iops_int[0] << \" max:\" << iops_int[1]\n         << \" avg:\" << iops_int[2] << \"\\033[0m\" << endl;\n    // 整理带宽和IOPS数据\n    bw[0] += bw_int[0];\n    bw[1] += bw_int[1];\n    bw[2] += bw_int[3];\n    iops[0] += iops_int[0];\n    iops[1] += iops_int[1];\n    iops[2] += iops_int[2];\n  }\n}\n\nvoid fio_sum(const string &name) {\n\n  if (bw[3] != 0) {\n    // 针对混合读写处理\n    //  计算最小、最大和平均值\n    int RbwMin = bw[0] / 3;\n    int RbwMax = bw[1] / 3;\n    int RbwAvg = bw[2] / 3;\n    int RiopsMin = iops[0] / 3;\n    int RiopsMax = iops[1] / 3;\n    int RiopsAvg = iops[2] / 3;\n    int WbwMin = bw[3] / 3;\n    int WbwMax = bw[4] / 3;\n    int WbwAvg = bw[5] / 3;\n    int WiopsMin = iops[3] / 3;\n    int WiopsMax = iops[4] / 3;\n    int WiopsAvg = iops[5] / 3;\n    // 将结果存储到数据表中，第一列是 名称，后面是6个值\n    values = {RbwMin, RbwMax, RbwAvg, RiopsMin, RiopsMax, RiopsAvg,\n              WbwMin, WbwMax, WbwAvg, WiopsMin, WiopsMax, WiopsAvg};\n    row = {name};\n    for (int val : values) {\n      row.push_back(to_string(val)); // 将每个值转换为字符串并添加到行中\n    }\n    run_report.push_back(row); // 将这行添加到数据中\n  } else {\n    // 计算最小、最大和平均值\n    int bwMin = bw[0] / 3;\n    int bwMax = bw[1] / 3;\n    int bwAvg = bw[2] / 3;\n    int iopsMin = iops[0] / 3;\n    int iopsMax = iops[1] / 3;\n    int iopsAvg = iops[2] / 3;\n    // 将结果存储到数据表中，第一列是 名称，后面是6个值\n    values = {bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg};\n    row = {name};\n    for (int val : values) {\n      row.push_back(to_string(val)); // 将每个值转换为字符串并添加到行中\n    }\n    run_report.push_back(row); // 将这行添加到数据中\n    // 重置\n    values.clear();\n    row.clear();\n  }\n\n  // 重置数据\n  fill(begin(bw), end(bw), 0);\n  fill(begin(iops), end(iops), 0);\n}\n\nvoid runReport() {\n\n  // 打开文件用于追加写入\n  ofstream outputFile(\"/var/log/fio_tool/fio.csv\", ios::app);\n\n  if (outputFile.is_open()) {\n    // 如果文件为空，先写入表头（假设表头只在文件为空时写入一次）\n    if (outputFile.tellp() == 0) {\n      outputFile\n          << \"测试类型,带宽最小值,带宽最大值,带宽均值,IOPS最小值,\"\n             \"IOPS最大值,IOPS均值,写带宽最小值,写带宽最大值,写带宽均值,\"\n             \"写IOPS最小值,\"\n             \"写IOPS最大值,写IOPS均值,(前6列数据在混合读写中作为读的数据)\"\n          << endl;\n    }\n\n    for (const auto &row : run_report) {\n      for (const auto &cell : row) {\n        outputFile << cell << \",\";\n      }\n      outputFile << endl;\n    }\n\n    // 关闭文件\n    outputFile.close();\n\n    cout << \"\\033[32;1m数据已成功追加到fio.csv文件。\\033[0m\" << endl;\n  } else {\n    cerr << \"\\033[31;1m无法打开fio.csv文件进行追加写入。\\033[0m\" << endl;\n  }\n  cout << \"\\033[32;1m已重置run_report\\033[0m\" << endl;\n  // 重置run_report\n  run_report.clear();\n}\n\n// ---创建预读文件 start---\nvoid init_read() {\n  cout << \"\\033[32;1m预读文件的大小与测试文件一致，自动从之前的测试中获取\\033[\"\n          \"0m\\n\";\n  cout << \"\\033[31;1m正在为读取测试创建预读文件，请稍后...\"\n          \"\\n创建完毕后会出现提示，创建的文件数量为最大numjobs数量：16个，每个\"\n          \"大小为\" +\n              fsize + \"G\"\n       << \"\\033[0m\" << endl;\n  fio_cmd = \"fio -name=init_read -size=\" + fsize +\n            \"G -bs=1m -direct=1 -rw=write -ioengine=\" + ioengine +\n            \" -numjobs=16 -group_reporting -iodepth=1 -directory=\" + dir;\n  run_cmd(fio_cmd);\n  cout << \"\\033[32;\"\n          \"1m预读文件创建完毕！！！\\n预读文件创建完毕！！！\\n预读文件创建完毕！\"\n          \"！\"\n          \"！\\n\\033[0m\"\n       << endl;\n}\n// ---创建预读文件 end---\n\n// --- 顺序写start ---\nvoid fio_seq_write() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m顺序写测试，共计50项，每项3次，每次 \" << runtime\n       << \" 秒，共计 \" << to_string((stoi(runtime) + 5) * 50 * 3) << \" 秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 50 * 3 / 60 / 60\n       << \" 小时\\n进行中...\\033[0m\" << endl;\n\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n\n      // numjobs=1\n      string numjobs[] = {\"1\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=512/1024\n        string bs_group[] = {\"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"write\";\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            // 重复运行3次\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + to_string(i);\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(to_string(i)); //\"rm -rf \" + dir + ? rm -rf /mnt/?\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"128\", \"256\", \"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            string rw = \"write\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"mkdir -p \" + dir + \"dir_\" + to_string(i) + \"/\" +\n                        \" && fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"dir_\" + to_string(i) + \"/\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(\"dir_\" + to_string(i));\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 顺序写end ---\n\n// --- 顺序读start ---\nvoid fio_seq_read() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m顺序读测试，共计50项，每项3次，每次预热5秒，每次测试\" +\n              runtime + \"秒，共计\" + to_string((stoi(runtime) + 5) * 50 * 3) +\n              \"秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 50 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n\n      // numjobs=1\n      string numjobs[] = {\"1\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=512/1024\n        string bs_group[] = {\"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            string rw = \"read\";\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            // 重复运行3次\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"init_read.0.0\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"128\", \"256\", \"512\", \"1024\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"read\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir;\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 顺序读end ---\n\n// --- 随机读start ---\nvoid fio_rand_read() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m随机读测试，共计15项，每项3次，每次预热5秒，每次测试\" +\n              runtime + \"秒，共计\" + to_string((stoi(runtime) + 5) * 15 * 3) +\n              \"秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 15 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n\n      // numjobs=1\n      string numjobs[] = {\"1\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=512/1024\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            string rw = \"randread\";\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            // 重复运行3次\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd =\n                  \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                  \"-name=init_read -size=\" +\n                  fsize + \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                  \"k -direct=\" + direct + \" -rw=\" + rw +\n                  \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                  \" -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=\" +\n                  iodepth + \" -\" + dorf + \"=\" + dir + \"init_read.0.0\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randread\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd =\n                  \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                  \"-name=init_read -size=\" +\n                  fsize + \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                  \"k -direct=\" + direct + \" -rw=\" + rw +\n                  \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                  \" -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=\" +\n                  iodepth + \" -\" + dorf + \"=\" + dir;\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 随机读end ---\n\n// --- 随机写开始 ---\nvoid fio_rand_write() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  cout << \"\\033[31;1m随机写测试，共计15项，每项3次，每次预热5秒，每次测试\" +\n              runtime + \"秒，共计\" + to_string((stoi(runtime) + 5) * 15 * 3) +\n              \"秒，约 \"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 15 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n                                             // numjobs=8/16\n      string numjobs[] = {\"1\"};              // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randwrite\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + to_string(i);\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(to_string(i));\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randwrite\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"mkdir -p \" + dir + \"dir_\" + to_string(i) + \"/\" +\n                        \" && fio -name=\" + name + \" -size=\" + fsize +\n                        \"G -runtime=\" + runtime + \"s -time_base -bs=\" + bs +\n                        \"k -direct=\" + direct + \" -rw=\" + rw +\n                        \" -ioengine=\" + ioengine + \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"dir_\" + to_string(i) + \"/\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n              rm_file(\"dir_\" + to_string(i));\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 随机写结束 ---\n\n// --- 4k随机读写开始 ---\nvoid fio_randrw() {\n  // 重置数据\n  bw_int.clear();\n  iops_int.clear();\n  // 文件\n  cout << \"\\033[31;1m50%随机读写测试，共计15项，每项3次，每次\" + runtime +\n              \"秒，共计\" + to_string((stoi(runtime) + 5) * 15 * 3) + \"秒，约\"\n       << setprecision(2) << fixed\n       << (double)(stoi(runtime) + 5) * 15 * 3 / 60 / 60\n       << \"小时\\n进行中...\\033[0m\" << endl;\n  // 文件/文件夹\n  string DorF[] = {\"filename\", \"directory\"};\n  for (string dorf : DorF) {\n    if (dorf.find(\"file\") != string::npos) { // 如果是单文件\n                                             // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"};        // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randrw\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir + \"init_read.0.0\";\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    } else if (dorf.find(\"directory\") != string::npos) {\n      // numjobs=8/16\n      string numjobs[] = {\"8\", \"16\"}; // 用数组配置numjobs\n      for (string numjob : numjobs) {\n        // bs=4k\n        string bs_group[] = {\"4\"}; // 用数组配置bs块大小\n        for (string bs : bs_group) {\n          string iodepth_group[] = {\"1\", \"2\", \"8\", \"16\",\n                                    \"32\"}; // 用数组配置iodepth循环\n          // iodepth=1/2/8/16/32\n          for (string iodepth : iodepth_group) {\n            // 先写后读\n            string rw = \"randrw\";\n            // 重复运行3次\n            name = rw + \"_\" + dorf + \"_numjobs=\" + numjob +\n                   \"_iodepth=\" + iodepth + \"_bs=\" + bs + \"k\";\n            for (int i = 1; i <= 3; i++) {\n              // 构建文件夹fio命令\n              fio_cmd = \"echo 3 > /proc/sys/vm/drop_caches && fio \"\n                        \"-name=init_read -size=\" +\n                        fsize + \"G -runtime=\" + runtime +\n                        \"s -time_base -bs=\" + bs + \"k -direct=\" + direct +\n                        \" -rw=\" + rw + \" -ioengine=\" + ioengine +\n                        \" -numjobs=\" + numjob +\n                        \" -group_reporting -ramp_time=5 -iodepth=\" + iodepth +\n                        \" -\" + dorf + \"=\" + dir;\n              // 输出本次运行的命令以便排障\n              cout << \"\\033[36;1m第\" << i << \"次运行的命令是：\" << fio_cmd\n                   << \"\\033[0m\" << endl;\n              run_cmd(fio_cmd);\n              format(i);\n              // 重置数据\n              bw_int.clear();\n              iops_int.clear();\n            }\n            fio_sum(name);\n          }\n          runReport();\n        }\n      }\n    }\n  }\n}\n// --- 4k随机读写结束 ---\n```\n","slug":"cpp编写fio测试工具，我在发疯","published":1,"updated":"2025-09-04T06:44:07.224Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtu000x9szwgqtb9zd4","content":"<h2 id=\"我有病，拿C-写测试工具\"><a href=\"#我有病，拿C-写测试工具\" class=\"headerlink\" title=\"我有病，拿C++写测试工具\"></a>我有病，拿C++写测试工具</h2><p><a href=\"https://github.com/1949hacker/studycplusplus\">仓库地址：https://github.com/1949hacker/studycplusplus</a></p>\n<p>fio.hpp</p>\n<p>main.cpp</p>\n<p>fio.cpp</p>\n<p>长文预警</p>\n<span id=\"more\"></span>\n\n<p>fio.hpp代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// fio.hpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> FIO_HPP</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> FIO_HPP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置测试参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setConfig</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建预读文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">init_read</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 顺序写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_write</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 顺序读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_read</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_write</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_read</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机读写测试</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_randrw</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出结果</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">runReport</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">// FIO_HPP</span></span></span><br></pre></td></tr></table></figure>\n\n<p>main.cpp代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;fio.hpp&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ctime&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;fstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;memory&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;streambuf&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;termios.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Linux/macOS 下的 getch() 实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getch</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">struct</span> <span class=\"title class_\">termios</span> oldt, newt;</span><br><span class=\"line\">  <span class=\"type\">int</span> ch;</span><br><span class=\"line\">  <span class=\"built_in\">tcgetattr</span>(STDIN_FILENO, &amp;oldt);</span><br><span class=\"line\">  newt = oldt;</span><br><span class=\"line\">  newt.c_lflag &amp;= ~(ICANON | ECHO);</span><br><span class=\"line\">  <span class=\"built_in\">tcsetattr</span>(STDIN_FILENO, TCSANOW, &amp;newt);</span><br><span class=\"line\">  ch = <span class=\"built_in\">getchar</span>();</span><br><span class=\"line\">  <span class=\"built_in\">tcsetattr</span>(STDIN_FILENO, TCSANOW, &amp;oldt);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ch;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义流缓冲区类，将输出内容同时写入控制台和日志文件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TeeBuf</span> : <span class=\"keyword\">public</span> streambuf &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">TeeBuf</span>(streambuf *consoleBuf, streambuf *fileBuf)</span><br><span class=\"line\">      : <span class=\"built_in\">consoleBuf</span>(consoleBuf), <span class=\"built_in\">fileBuf</span>(fileBuf) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">int</span> <span class=\"title\">overflow</span><span class=\"params\">(<span class=\"type\">int</span> c)</span> <span class=\"keyword\">override</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (c == EOF) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> !EOF;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (consoleBuf-&gt;<span class=\"built_in\">sputc</span>(c) == EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (fileBuf-&gt;<span class=\"built_in\">sputc</span>(c) == EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">int</span> <span class=\"title\">sync</span><span class=\"params\">()</span> <span class=\"keyword\">override</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (consoleBuf-&gt;<span class=\"built_in\">pubsync</span>() == <span class=\"number\">-1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fileBuf-&gt;<span class=\"built_in\">pubsync</span>() == <span class=\"number\">-1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  streambuf *consoleBuf;</span><br><span class=\"line\">  streambuf *fileBuf;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 日志目录初始化</span></span><br><span class=\"line\">  <span class=\"type\">int</span> result = <span class=\"built_in\">system</span>(<span class=\"string\">&quot;mkdir -p /var/log/fio_tool&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (result == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    std::cout &lt;&lt; <span class=\"string\">&quot;\\033[32m日志存储目录 /var/log/fio_tool 已成功创建。\\033[0m&quot;</span></span><br><span class=\"line\">              &lt;&lt; std::endl;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    std::cerr &lt;&lt; <span class=\"string\">&quot;\\033[31m创建目录 /var/log/fio_tool &quot;</span></span><br><span class=\"line\">                 <span class=\"string\">&quot;时出现错误。请检查当前用户的运行权限！\\033[0m&quot;</span></span><br><span class=\"line\">              &lt;&lt; std::endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取时间并格式化文件名</span></span><br><span class=\"line\">  <span class=\"type\">time_t</span> log_time = <span class=\"built_in\">time</span>(<span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">  tm *localTime = <span class=\"built_in\">localtime</span>(&amp;log_time);</span><br><span class=\"line\">  <span class=\"type\">char</span> timeStr[<span class=\"number\">20</span>];</span><br><span class=\"line\">  <span class=\"built_in\">strftime</span>(timeStr, <span class=\"built_in\">sizeof</span>(timeStr), <span class=\"string\">&quot;%Y-%m-%d-%H-%M-%S&quot;</span>, localTime);</span><br><span class=\"line\">  string fileName = <span class=\"string\">&quot;/var/log/fio_tool/&quot;</span> + <span class=\"built_in\">string</span>(timeStr) + <span class=\"string\">&quot;.log&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 创建日志文件流</span></span><br><span class=\"line\">  <span class=\"function\">ofstream <span class=\"title\">logFile</span><span class=\"params\">(fileName, ios::app)</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!logFile) &#123;</span><br><span class=\"line\">    cerr &lt;&lt; <span class=\"string\">&quot;\\033[31m无法创建日志文件！\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32m成功创建日志文件：\\033[0m&quot;</span> &lt;&lt; fileName &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 重定向 cout 输出到日志文件和控制台</span></span><br><span class=\"line\">  <span class=\"function\">TeeBuf <span class=\"title\">teeBuf</span><span class=\"params\">(cout.rdbuf(), logFile.rdbuf())</span></span>;</span><br><span class=\"line\">  streambuf *originalCoutBuf = cout.<span class=\"built_in\">rdbuf</span>(&amp;teeBuf);</span><br><span class=\"line\"></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[36m欢迎使用fio测试工具\\n日志和输出的fio.&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;csv默认保存到/var/log/fio_tool/&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;\\n日志不会自行清除，运行前请自行清理日志文件和检查是否残留有测试文件&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;\\n输出的数据统一为KiB/s单位，iops无单位\\n请&lt;按键&gt;&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;选择你的测试内容：\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;1. 顺序写测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;2. 随机写测试\\n\\n\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;\\033[31m-------分割线-------\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;进行读测试之前需要先创建预读文件，固定为测试路径下的init_read.[0-15]&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;.0共16个文件\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;请自行根据测试情况判断是否需要重新生成，如需重新生成，请删除后按&lt;r&gt;&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;进行预读文件创建\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;如无需创建预读文件则直接按键开始测试即可！\\n\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;测试完成后记得清理干净测试残留的文件和日志文件\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;-------分割线-------\\033[36m\\n\\n\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;3. 顺序读测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;4. 随机读测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;5. 4k随机50%混合读写测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;r. 创建预读文件\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;f. Fullauto全自动测试&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;q. 退出程序\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;s. 你想骚一下？\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> choice;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    choice = <span class=\"built_in\">getch</span>(); <span class=\"comment\">// Linux/macOS 下使用自定义 getch()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; choice &lt;&lt; endl; <span class=\"comment\">// 打印选项</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (choice) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_write</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_write</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_read</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_read</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_randrw</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;r&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">init_read</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;f&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_write</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_write</span>();</span><br><span class=\"line\">      <span class=\"built_in\">init_read</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_read</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_read</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_randrw</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;q&#x27;</span>:</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;程序已退出。&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;s&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;骚个鸡儿啊，正事儿不干？我不懒得写炸机代码？&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;\\033[31m无效选项，请重新输入。\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 恢复 cout 的原始缓冲区</span></span><br><span class=\"line\">  cout.<span class=\"built_in\">rdbuf</span>(originalCoutBuf);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>fio.cpp代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;array&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;fstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;regex&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdexcept&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 全局参数</span></span><br><span class=\"line\"><span class=\"type\">int</span> bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg, bw[] = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">                                                    iops[] = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">string dir, fsize, ioengine, name, fio_cmd, runtime, direct, line;</span><br><span class=\"line\">stringstream fio_output;</span><br><span class=\"line\">vector&lt;vector&lt;string&gt;&gt; run_report;</span><br><span class=\"line\">vector&lt;string&gt; row;</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; values, bw_int, iops_int;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数设置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[36m测试路径（完整输入，带/结尾，如/mnt/iotest/）：&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; dir;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;测试文件大小，需要略大于内存大小，仅输入数字单位为G，size=&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; fsize;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;运行时长，至少30秒，仅输入数字单位为秒，runtime=&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; runtime;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;io测试引擎，Linux（NAS）输入libaio，ioengine=&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; ioengine;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;设置是否经过系统缓存，1不缓存，0操作系统缓存，direct=\\033[0m&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; direct;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除测试文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">rm_file</span><span class=\"params\">(string name)</span> </span>&#123;</span><br><span class=\"line\">  string rm_command = <span class=\"string\">&quot;rm -rf &quot;</span> + dir + name;</span><br><span class=\"line\">  <span class=\"built_in\">system</span>(rm_command.<span class=\"built_in\">c_str</span>()); <span class=\"comment\">// 删除 /iopsTest 目录下的所有文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32m临时文件已删除\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">run_cmd</span><span class=\"params\">(<span class=\"type\">const</span> string &amp;cmd)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置变量</span></span><br><span class=\"line\">  fio_output.<span class=\"built_in\">str</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">  fio_output.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  FILE *fp = <span class=\"built_in\">popen</span>(cmd.<span class=\"built_in\">c_str</span>(), <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (fp == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">    cerr &lt;&lt; <span class=\"string\">&quot;\\033[31mError opening pipe!\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 从fio输出中获取数据</span></span><br><span class=\"line\">  <span class=\"type\">char</span> buffer[<span class=\"number\">128</span>];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"built_in\">fgets</span>(buffer, <span class=\"built_in\">sizeof</span>(buffer), fp) != <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">    fio_output &lt;&lt; buffer;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">fclose</span>(fp);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// DE<span class=\"doctag\">BUG:</span>显示fio的输出内容</span></span><br><span class=\"line\">  <span class=\"comment\">// cout &lt;&lt; fio_output.str();</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 分析fio输出</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">format</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp;i)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  vector&lt;string&gt; bw_num, iops_num;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"built_in\">getline</span>(fio_output, line)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;samples&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m筛选成功，原始数据：\\033[0m&quot;</span> &lt;&lt; line &lt;&lt; endl;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;bw &quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;MiB/s&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">          cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m检测到单位MiB/s，将转换为KiB/s\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">          <span class=\"comment\">// 提取带宽数字</span></span><br><span class=\"line\">          <span class=\"function\">regex <span class=\"title\">bw_regex</span><span class=\"params\">(<span class=\"string\">R&quot;(\\d+\\.\\d+|\\d+)&quot;</span>)</span></span>;</span><br><span class=\"line\">          smatch match;</span><br><span class=\"line\">          <span class=\"keyword\">while</span> (<span class=\"built_in\">regex_search</span>(line, match, bw_regex)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 检测到单位是MiB，则转换为KiB</span></span><br><span class=\"line\">            <span class=\"type\">float</span> bw_value_kib = <span class=\"built_in\">stof</span>(match.<span class=\"built_in\">str</span>());</span><br><span class=\"line\">            bw_value_kib *= <span class=\"number\">1024</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> bw_value_bytes = <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">int</span>&gt;(bw_value_kib); <span class=\"comment\">// 转为整数</span></span><br><span class=\"line\">            bw_num.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">to_string</span>(bw_value_bytes));</span><br><span class=\"line\">            line = match.<span class=\"built_in\">suffix</span>();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;KiB/s&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">          cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m检测到单位KiB/s，直接提取\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">          <span class=\"comment\">// 提取带宽数字</span></span><br><span class=\"line\">          <span class=\"function\">regex <span class=\"title\">bw_regex</span><span class=\"params\">(<span class=\"string\">R&quot;(\\d+\\.\\d+|\\d+)&quot;</span>)</span></span>;</span><br><span class=\"line\">          smatch match;</span><br><span class=\"line\">          <span class=\"keyword\">while</span> (<span class=\"built_in\">regex_search</span>(line, match, bw_regex)) &#123;</span><br><span class=\"line\">            bw_num.<span class=\"built_in\">push_back</span>(match.<span class=\"built_in\">str</span>());</span><br><span class=\"line\">            line = match.<span class=\"built_in\">suffix</span>();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;iops&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 提取IOPS数字</span></span><br><span class=\"line\">        <span class=\"function\">regex <span class=\"title\">iops_regex</span><span class=\"params\">(<span class=\"string\">R&quot;(\\d+\\.\\d+|\\d+)&quot;</span>)</span></span>;</span><br><span class=\"line\">        smatch match;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">regex_search</span>(line, match, iops_regex)) &#123;</span><br><span class=\"line\">          iops_num.<span class=\"built_in\">push_back</span>(match.<span class=\"built_in\">str</span>());</span><br><span class=\"line\">          line = match.<span class=\"built_in\">suffix</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 转换为整数</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"type\">const</span> string &amp;s : bw_num) &#123;</span><br><span class=\"line\">    bw_int.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"built_in\">stof</span>(s)));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"type\">const</span> string &amp;s : iops_num) &#123;</span><br><span class=\"line\">    iops_int.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"built_in\">stof</span>(s)));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// DE<span class=\"doctag\">BUG:</span> 检查原始数据是否正常</span></span><br><span class=\"line\">  <span class=\"comment\">// for (int a : bw_int) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//   cout &lt;&lt; &quot;bw:&quot; &lt;&lt; a &lt;&lt; endl;</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">// for (int a : iops_int) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//   cout &lt;&lt; &quot;iops:&quot; &lt;&lt; a &lt;&lt; endl;</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bw_int.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">7</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 混合读写</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m&quot;</span> &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次带宽运行&lt;读&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s max:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;KiB/s avg:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">3</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s\\n&quot;</span></span><br><span class=\"line\">         &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次次IOPS运行&lt;读&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot; max:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot; avg:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">2</span>] &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次带宽运行&lt;写&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">6</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s max:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">7</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;KiB/s avg:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">9</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s\\n&quot;</span></span><br><span class=\"line\">         &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次次IOPS运行&lt;写&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">5</span>] &lt;&lt; <span class=\"string\">&quot; max:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">6</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot; avg:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">7</span>] &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"comment\">// 整理带宽和IOPS数据</span></span><br><span class=\"line\">    bw[<span class=\"number\">0</span>] += bw_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">1</span>] += bw_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">2</span>] += bw_int[<span class=\"number\">3</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">3</span>] = bw_int[<span class=\"number\">6</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">4</span>] += bw_int[<span class=\"number\">7</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">5</span>] += bw_int[<span class=\"number\">9</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">0</span>] += iops_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">1</span>] += iops_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">2</span>] += iops_int[<span class=\"number\">2</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">3</span>] += iops_int[<span class=\"number\">5</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">4</span>] += iops_int[<span class=\"number\">6</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">5</span>] += iops_int[<span class=\"number\">7</span>];</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m&quot;</span> &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次带宽运行结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s max:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;KiB/s avg:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">3</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s\\n&quot;</span></span><br><span class=\"line\">         &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次次IOPS运行结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot; max:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot; avg:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">2</span>] &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"comment\">// 整理带宽和IOPS数据</span></span><br><span class=\"line\">    bw[<span class=\"number\">0</span>] += bw_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">1</span>] += bw_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">2</span>] += bw_int[<span class=\"number\">3</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">0</span>] += iops_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">1</span>] += iops_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">2</span>] += iops_int[<span class=\"number\">2</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_sum</span><span class=\"params\">(<span class=\"type\">const</span> string &amp;name)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bw[<span class=\"number\">3</span>] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 针对混合读写处理</span></span><br><span class=\"line\">    <span class=\"comment\">//  计算最小、最大和平均值</span></span><br><span class=\"line\">    <span class=\"type\">int</span> RbwMin = bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RbwMax = bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RbwAvg = bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RiopsMin = iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RiopsMax = iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RiopsAvg = iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WbwMin = bw[<span class=\"number\">3</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WbwMax = bw[<span class=\"number\">4</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WbwAvg = bw[<span class=\"number\">5</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WiopsMin = iops[<span class=\"number\">3</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WiopsMax = iops[<span class=\"number\">4</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WiopsAvg = iops[<span class=\"number\">5</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 将结果存储到数据表中，第一列是 名称，后面是6个值</span></span><br><span class=\"line\">    values = &#123;RbwMin, RbwMax, RbwAvg, RiopsMin, RiopsMax, RiopsAvg,</span><br><span class=\"line\">              WbwMin, WbwMax, WbwAvg, WiopsMin, WiopsMax, WiopsAvg&#125;;</span><br><span class=\"line\">    row = &#123;name&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> val : values) &#123;</span><br><span class=\"line\">      row.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">to_string</span>(val)); <span class=\"comment\">// 将每个值转换为字符串并添加到行中</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    run_report.<span class=\"built_in\">push_back</span>(row); <span class=\"comment\">// 将这行添加到数据中</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 计算最小、最大和平均值</span></span><br><span class=\"line\">    <span class=\"type\">int</span> bwMin = bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> bwMax = bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> bwAvg = bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> iopsMin = iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> iopsMax = iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> iopsAvg = iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 将结果存储到数据表中，第一列是 名称，后面是6个值</span></span><br><span class=\"line\">    values = &#123;bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg&#125;;</span><br><span class=\"line\">    row = &#123;name&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> val : values) &#123;</span><br><span class=\"line\">      row.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">to_string</span>(val)); <span class=\"comment\">// 将每个值转换为字符串并添加到行中</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    run_report.<span class=\"built_in\">push_back</span>(row); <span class=\"comment\">// 将这行添加到数据中</span></span><br><span class=\"line\">    <span class=\"comment\">// 重置</span></span><br><span class=\"line\">    values.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">    row.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  <span class=\"built_in\">fill</span>(<span class=\"built_in\">begin</span>(bw), <span class=\"built_in\">end</span>(bw), <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">fill</span>(<span class=\"built_in\">begin</span>(iops), <span class=\"built_in\">end</span>(iops), <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">runReport</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 打开文件用于追加写入</span></span><br><span class=\"line\">  <span class=\"function\">ofstream <span class=\"title\">outputFile</span><span class=\"params\">(<span class=\"string\">&quot;/var/log/fio_tool/fio.csv&quot;</span>, ios::app)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (outputFile.<span class=\"built_in\">is_open</span>()) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果文件为空，先写入表头（假设表头只在文件为空时写入一次）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (outputFile.<span class=\"built_in\">tellp</span>() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      outputFile</span><br><span class=\"line\">          &lt;&lt; <span class=\"string\">&quot;测试类型,带宽最小值,带宽最大值,带宽均值,IOPS最小值,&quot;</span></span><br><span class=\"line\">             <span class=\"string\">&quot;IOPS最大值,IOPS均值,写带宽最小值,写带宽最大值,写带宽均值,&quot;</span></span><br><span class=\"line\">             <span class=\"string\">&quot;写IOPS最小值,&quot;</span></span><br><span class=\"line\">             <span class=\"string\">&quot;写IOPS最大值,写IOPS均值,(前6列数据在混合读写中作为读的数据)&quot;</span></span><br><span class=\"line\">          &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;row : run_report) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;cell : row) &#123;</span><br><span class=\"line\">        outputFile &lt;&lt; cell &lt;&lt; <span class=\"string\">&quot;,&quot;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      outputFile &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭文件</span></span><br><span class=\"line\">    outputFile.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m数据已成功追加到fio.csv文件。\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    cerr &lt;&lt; <span class=\"string\">&quot;\\033[31;1m无法打开fio.csv文件进行追加写入。\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m已重置run_report\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 重置run_report</span></span><br><span class=\"line\">  run_report.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ---创建预读文件 start---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">init_read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m预读文件的大小与测试文件一致，自动从之前的测试中获取\\033[&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;0m\\n&quot;</span>;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m正在为读取测试创建预读文件，请稍后...&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;\\n创建完毕后会出现提示，创建的文件数量为最大numjobs数量：16个，每个&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;大小为&quot;</span> +</span><br><span class=\"line\">              fsize + <span class=\"string\">&quot;G&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  fio_cmd = <span class=\"string\">&quot;fio -name=init_read -size=&quot;</span> + fsize +</span><br><span class=\"line\">            <span class=\"string\">&quot;G -bs=1m -direct=1 -rw=write -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">            <span class=\"string\">&quot; -numjobs=16 -group_reporting -iodepth=1 -directory=&quot;</span> + dir;</span><br><span class=\"line\">  <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32;&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;1m预读文件创建完毕！！！\\n预读文件创建完毕！！！\\n预读文件创建完毕！&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;！&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;！\\n\\033[0m&quot;</span></span><br><span class=\"line\">       &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ---创建预读文件 end---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 顺序写start ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_write</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m顺序写测试，共计50项，每项3次，每次 &quot;</span> &lt;&lt; runtime</span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot; 秒，共计 &quot;</span> &lt;&lt; <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span>) &lt;&lt; <span class=\"string\">&quot; 秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot; 小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// numjobs=1</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=512/1024</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;write&quot;</span>;</span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"built_in\">to_string</span>(i);</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"built_in\">to_string</span>(i)); <span class=\"comment\">//&quot;rm -rf &quot; + dir + ? rm -rf /mnt/?</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;128&quot;</span>, <span class=\"string\">&quot;256&quot;</span>, <span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;write&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;mkdir -p &quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot; &amp;&amp; fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 顺序写end ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 顺序读start ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m顺序读测试，共计50项，每项3次，每次预热5秒，每次测试&quot;</span> +</span><br><span class=\"line\">              runtime + <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span>) +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// numjobs=1</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=512/1024</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;read&quot;</span>;</span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;init_read.0.0&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;128&quot;</span>, <span class=\"string\">&quot;256&quot;</span>, <span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;read&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 顺序读end ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 随机读start ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m随机读测试，共计15项，每项3次，每次预热5秒，每次测试&quot;</span> +</span><br><span class=\"line\">              runtime + <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span>) +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// numjobs=1</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=512/1024</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randread&quot;</span>;</span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd =</span><br><span class=\"line\">                  <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                  <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                  fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                  <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=&quot;</span> +</span><br><span class=\"line\">                  iodepth + <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;init_read.0.0&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randread&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd =</span><br><span class=\"line\">                  <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                  <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                  fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                  <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=&quot;</span> +</span><br><span class=\"line\">                  iodepth + <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 随机读end ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 随机写开始 ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_write</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m随机写测试，共计15项，每项3次，每次预热5秒，每次测试&quot;</span> +</span><br><span class=\"line\">              runtime + <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span>) +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\">                                             <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;;              <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randwrite&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"built_in\">to_string</span>(i);</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"built_in\">to_string</span>(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randwrite&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;mkdir -p &quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot; &amp;&amp; fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 随机写结束 ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 4k随机读写开始 ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_randrw</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m50%随机读写测试，共计15项，每项3次，每次&quot;</span> + runtime +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span>) + <span class=\"string\">&quot;秒，约&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\">                                             <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;;        <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randrw&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;init_read.0.0&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randrw&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 4k随机读写结束 ---</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":4583,"excerpt":"<h2 id=\"我有病，拿C-写测试工具\"><a href=\"#我有病，拿C-写测试工具\" class=\"headerlink\" title=\"我有病，拿C++写测试工具\"></a>我有病，拿C++写测试工具</h2><p><a href=\"https://github.com/1949hacker/studycplusplus\">仓库地址：https://github.com/1949hacker/studycplusplus</a></p>\n<p>fio.hpp</p>\n<p>main.cpp</p>\n<p>fio.cpp</p>\n<p>长文预警</p>","more":"<p>fio.hpp代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// fio.hpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> FIO_HPP</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> FIO_HPP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置测试参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setConfig</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建预读文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">init_read</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 顺序写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_write</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 顺序读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_read</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_write</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_read</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机读写测试</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_randrw</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出结果</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">runReport</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">// FIO_HPP</span></span></span><br></pre></td></tr></table></figure>\n\n<p>main.cpp代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;fio.hpp&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ctime&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;fstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;memory&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;streambuf&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;termios.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Linux/macOS 下的 getch() 实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getch</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">struct</span> <span class=\"title class_\">termios</span> oldt, newt;</span><br><span class=\"line\">  <span class=\"type\">int</span> ch;</span><br><span class=\"line\">  <span class=\"built_in\">tcgetattr</span>(STDIN_FILENO, &amp;oldt);</span><br><span class=\"line\">  newt = oldt;</span><br><span class=\"line\">  newt.c_lflag &amp;= ~(ICANON | ECHO);</span><br><span class=\"line\">  <span class=\"built_in\">tcsetattr</span>(STDIN_FILENO, TCSANOW, &amp;newt);</span><br><span class=\"line\">  ch = <span class=\"built_in\">getchar</span>();</span><br><span class=\"line\">  <span class=\"built_in\">tcsetattr</span>(STDIN_FILENO, TCSANOW, &amp;oldt);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ch;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义流缓冲区类，将输出内容同时写入控制台和日志文件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TeeBuf</span> : <span class=\"keyword\">public</span> streambuf &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"built_in\">TeeBuf</span>(streambuf *consoleBuf, streambuf *fileBuf)</span><br><span class=\"line\">      : <span class=\"built_in\">consoleBuf</span>(consoleBuf), <span class=\"built_in\">fileBuf</span>(fileBuf) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">int</span> <span class=\"title\">overflow</span><span class=\"params\">(<span class=\"type\">int</span> c)</span> <span class=\"keyword\">override</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (c == EOF) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> !EOF;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (consoleBuf-&gt;<span class=\"built_in\">sputc</span>(c) == EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (fileBuf-&gt;<span class=\"built_in\">sputc</span>(c) == EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">int</span> <span class=\"title\">sync</span><span class=\"params\">()</span> <span class=\"keyword\">override</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (consoleBuf-&gt;<span class=\"built_in\">pubsync</span>() == <span class=\"number\">-1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fileBuf-&gt;<span class=\"built_in\">pubsync</span>() == <span class=\"number\">-1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  streambuf *consoleBuf;</span><br><span class=\"line\">  streambuf *fileBuf;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 日志目录初始化</span></span><br><span class=\"line\">  <span class=\"type\">int</span> result = <span class=\"built_in\">system</span>(<span class=\"string\">&quot;mkdir -p /var/log/fio_tool&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (result == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    std::cout &lt;&lt; <span class=\"string\">&quot;\\033[32m日志存储目录 /var/log/fio_tool 已成功创建。\\033[0m&quot;</span></span><br><span class=\"line\">              &lt;&lt; std::endl;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    std::cerr &lt;&lt; <span class=\"string\">&quot;\\033[31m创建目录 /var/log/fio_tool &quot;</span></span><br><span class=\"line\">                 <span class=\"string\">&quot;时出现错误。请检查当前用户的运行权限！\\033[0m&quot;</span></span><br><span class=\"line\">              &lt;&lt; std::endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取时间并格式化文件名</span></span><br><span class=\"line\">  <span class=\"type\">time_t</span> log_time = <span class=\"built_in\">time</span>(<span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">  tm *localTime = <span class=\"built_in\">localtime</span>(&amp;log_time);</span><br><span class=\"line\">  <span class=\"type\">char</span> timeStr[<span class=\"number\">20</span>];</span><br><span class=\"line\">  <span class=\"built_in\">strftime</span>(timeStr, <span class=\"built_in\">sizeof</span>(timeStr), <span class=\"string\">&quot;%Y-%m-%d-%H-%M-%S&quot;</span>, localTime);</span><br><span class=\"line\">  string fileName = <span class=\"string\">&quot;/var/log/fio_tool/&quot;</span> + <span class=\"built_in\">string</span>(timeStr) + <span class=\"string\">&quot;.log&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 创建日志文件流</span></span><br><span class=\"line\">  <span class=\"function\">ofstream <span class=\"title\">logFile</span><span class=\"params\">(fileName, ios::app)</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!logFile) &#123;</span><br><span class=\"line\">    cerr &lt;&lt; <span class=\"string\">&quot;\\033[31m无法创建日志文件！\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32m成功创建日志文件：\\033[0m&quot;</span> &lt;&lt; fileName &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 重定向 cout 输出到日志文件和控制台</span></span><br><span class=\"line\">  <span class=\"function\">TeeBuf <span class=\"title\">teeBuf</span><span class=\"params\">(cout.rdbuf(), logFile.rdbuf())</span></span>;</span><br><span class=\"line\">  streambuf *originalCoutBuf = cout.<span class=\"built_in\">rdbuf</span>(&amp;teeBuf);</span><br><span class=\"line\"></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[36m欢迎使用fio测试工具\\n日志和输出的fio.&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;csv默认保存到/var/log/fio_tool/&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;\\n日志不会自行清除，运行前请自行清理日志文件和检查是否残留有测试文件&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;\\n输出的数据统一为KiB/s单位，iops无单位\\n请&lt;按键&gt;&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;选择你的测试内容：\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;1. 顺序写测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;2. 随机写测试\\n\\n\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;\\033[31m-------分割线-------\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;进行读测试之前需要先创建预读文件，固定为测试路径下的init_read.[0-15]&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;.0共16个文件\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;请自行根据测试情况判断是否需要重新生成，如需重新生成，请删除后按&lt;r&gt;&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;进行预读文件创建\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;如无需创建预读文件则直接按键开始测试即可！\\n\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;测试完成后记得清理干净测试残留的文件和日志文件\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;-------分割线-------\\033[36m\\n\\n\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;3. 顺序读测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;4. 随机读测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;5. 4k随机50%混合读写测试\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;r. 创建预读文件\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;f. Fullauto全自动测试&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;q. 退出程序\\n&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;s. 你想骚一下？\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> choice;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    choice = <span class=\"built_in\">getch</span>(); <span class=\"comment\">// Linux/macOS 下使用自定义 getch()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; choice &lt;&lt; endl; <span class=\"comment\">// 打印选项</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (choice) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_write</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_write</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_read</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_read</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_randrw</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;r&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">init_read</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;f&#x27;</span>:</span><br><span class=\"line\">      <span class=\"built_in\">setConfig</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_write</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_write</span>();</span><br><span class=\"line\">      <span class=\"built_in\">init_read</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_seq_read</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_rand_read</span>();</span><br><span class=\"line\">      <span class=\"built_in\">fio_randrw</span>();</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;q&#x27;</span>:</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;程序已退出。&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;s&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;骚个鸡儿啊，正事儿不干？我不懒得写炸机代码？&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;\\033[31m无效选项，请重新输入。\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 恢复 cout 的原始缓冲区</span></span><br><span class=\"line\">  cout.<span class=\"built_in\">rdbuf</span>(originalCoutBuf);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>fio.cpp代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;array&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;fstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;regex&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdexcept&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 全局参数</span></span><br><span class=\"line\"><span class=\"type\">int</span> bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg, bw[] = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">                                                    iops[] = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">string dir, fsize, ioengine, name, fio_cmd, runtime, direct, line;</span><br><span class=\"line\">stringstream fio_output;</span><br><span class=\"line\">vector&lt;vector&lt;string&gt;&gt; run_report;</span><br><span class=\"line\">vector&lt;string&gt; row;</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; values, bw_int, iops_int;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数设置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[36m测试路径（完整输入，带/结尾，如/mnt/iotest/）：&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; dir;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;测试文件大小，需要略大于内存大小，仅输入数字单位为G，size=&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; fsize;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;运行时长，至少30秒，仅输入数字单位为秒，runtime=&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; runtime;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;io测试引擎，Linux（NAS）输入libaio，ioengine=&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; ioengine;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;设置是否经过系统缓存，1不缓存，0操作系统缓存，direct=\\033[0m&quot;</span>;</span><br><span class=\"line\">  cin &gt;&gt; direct;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除测试文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">rm_file</span><span class=\"params\">(string name)</span> </span>&#123;</span><br><span class=\"line\">  string rm_command = <span class=\"string\">&quot;rm -rf &quot;</span> + dir + name;</span><br><span class=\"line\">  <span class=\"built_in\">system</span>(rm_command.<span class=\"built_in\">c_str</span>()); <span class=\"comment\">// 删除 /iopsTest 目录下的所有文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32m临时文件已删除\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">run_cmd</span><span class=\"params\">(<span class=\"type\">const</span> string &amp;cmd)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置变量</span></span><br><span class=\"line\">  fio_output.<span class=\"built_in\">str</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">  fio_output.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  FILE *fp = <span class=\"built_in\">popen</span>(cmd.<span class=\"built_in\">c_str</span>(), <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (fp == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">    cerr &lt;&lt; <span class=\"string\">&quot;\\033[31mError opening pipe!\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 从fio输出中获取数据</span></span><br><span class=\"line\">  <span class=\"type\">char</span> buffer[<span class=\"number\">128</span>];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"built_in\">fgets</span>(buffer, <span class=\"built_in\">sizeof</span>(buffer), fp) != <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">    fio_output &lt;&lt; buffer;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">fclose</span>(fp);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// DE<span class=\"doctag\">BUG:</span>显示fio的输出内容</span></span><br><span class=\"line\">  <span class=\"comment\">// cout &lt;&lt; fio_output.str();</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 分析fio输出</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">format</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp;i)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  vector&lt;string&gt; bw_num, iops_num;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"built_in\">getline</span>(fio_output, line)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;samples&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m筛选成功，原始数据：\\033[0m&quot;</span> &lt;&lt; line &lt;&lt; endl;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;bw &quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;MiB/s&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">          cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m检测到单位MiB/s，将转换为KiB/s\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">          <span class=\"comment\">// 提取带宽数字</span></span><br><span class=\"line\">          <span class=\"function\">regex <span class=\"title\">bw_regex</span><span class=\"params\">(<span class=\"string\">R&quot;(\\d+\\.\\d+|\\d+)&quot;</span>)</span></span>;</span><br><span class=\"line\">          smatch match;</span><br><span class=\"line\">          <span class=\"keyword\">while</span> (<span class=\"built_in\">regex_search</span>(line, match, bw_regex)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 检测到单位是MiB，则转换为KiB</span></span><br><span class=\"line\">            <span class=\"type\">float</span> bw_value_kib = <span class=\"built_in\">stof</span>(match.<span class=\"built_in\">str</span>());</span><br><span class=\"line\">            bw_value_kib *= <span class=\"number\">1024</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> bw_value_bytes = <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">int</span>&gt;(bw_value_kib); <span class=\"comment\">// 转为整数</span></span><br><span class=\"line\">            bw_num.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">to_string</span>(bw_value_bytes));</span><br><span class=\"line\">            line = match.<span class=\"built_in\">suffix</span>();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;KiB/s&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">          cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m检测到单位KiB/s，直接提取\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">          <span class=\"comment\">// 提取带宽数字</span></span><br><span class=\"line\">          <span class=\"function\">regex <span class=\"title\">bw_regex</span><span class=\"params\">(<span class=\"string\">R&quot;(\\d+\\.\\d+|\\d+)&quot;</span>)</span></span>;</span><br><span class=\"line\">          smatch match;</span><br><span class=\"line\">          <span class=\"keyword\">while</span> (<span class=\"built_in\">regex_search</span>(line, match, bw_regex)) &#123;</span><br><span class=\"line\">            bw_num.<span class=\"built_in\">push_back</span>(match.<span class=\"built_in\">str</span>());</span><br><span class=\"line\">            line = match.<span class=\"built_in\">suffix</span>();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (line.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;iops&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 提取IOPS数字</span></span><br><span class=\"line\">        <span class=\"function\">regex <span class=\"title\">iops_regex</span><span class=\"params\">(<span class=\"string\">R&quot;(\\d+\\.\\d+|\\d+)&quot;</span>)</span></span>;</span><br><span class=\"line\">        smatch match;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">regex_search</span>(line, match, iops_regex)) &#123;</span><br><span class=\"line\">          iops_num.<span class=\"built_in\">push_back</span>(match.<span class=\"built_in\">str</span>());</span><br><span class=\"line\">          line = match.<span class=\"built_in\">suffix</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 转换为整数</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"type\">const</span> string &amp;s : bw_num) &#123;</span><br><span class=\"line\">    bw_int.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"built_in\">stof</span>(s)));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"type\">const</span> string &amp;s : iops_num) &#123;</span><br><span class=\"line\">    iops_int.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"built_in\">stof</span>(s)));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// DE<span class=\"doctag\">BUG:</span> 检查原始数据是否正常</span></span><br><span class=\"line\">  <span class=\"comment\">// for (int a : bw_int) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//   cout &lt;&lt; &quot;bw:&quot; &lt;&lt; a &lt;&lt; endl;</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">// for (int a : iops_int) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//   cout &lt;&lt; &quot;iops:&quot; &lt;&lt; a &lt;&lt; endl;</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bw_int.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">7</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 混合读写</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m&quot;</span> &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次带宽运行&lt;读&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s max:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;KiB/s avg:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">3</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s\\n&quot;</span></span><br><span class=\"line\">         &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次次IOPS运行&lt;读&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot; max:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot; avg:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">2</span>] &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次带宽运行&lt;写&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">6</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s max:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">7</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;KiB/s avg:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">9</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s\\n&quot;</span></span><br><span class=\"line\">         &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次次IOPS运行&lt;写&gt;结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">5</span>] &lt;&lt; <span class=\"string\">&quot; max:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">6</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot; avg:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">7</span>] &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"comment\">// 整理带宽和IOPS数据</span></span><br><span class=\"line\">    bw[<span class=\"number\">0</span>] += bw_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">1</span>] += bw_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">2</span>] += bw_int[<span class=\"number\">3</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">3</span>] = bw_int[<span class=\"number\">6</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">4</span>] += bw_int[<span class=\"number\">7</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">5</span>] += bw_int[<span class=\"number\">9</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">0</span>] += iops_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">1</span>] += iops_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">2</span>] += iops_int[<span class=\"number\">2</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">3</span>] += iops_int[<span class=\"number\">5</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">4</span>] += iops_int[<span class=\"number\">6</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">5</span>] += iops_int[<span class=\"number\">7</span>];</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m&quot;</span> &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次带宽运行结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s max:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;KiB/s avg:&quot;</span> &lt;&lt; bw_int[<span class=\"number\">3</span>] &lt;&lt; <span class=\"string\">&quot;KiB/s\\n&quot;</span></span><br><span class=\"line\">         &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; | 第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次次IOPS运行结果:&quot;</span></span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot;min:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">&quot; max:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">1</span>]</span><br><span class=\"line\">         &lt;&lt; <span class=\"string\">&quot; avg:&quot;</span> &lt;&lt; iops_int[<span class=\"number\">2</span>] &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"comment\">// 整理带宽和IOPS数据</span></span><br><span class=\"line\">    bw[<span class=\"number\">0</span>] += bw_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">1</span>] += bw_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    bw[<span class=\"number\">2</span>] += bw_int[<span class=\"number\">3</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">0</span>] += iops_int[<span class=\"number\">0</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">1</span>] += iops_int[<span class=\"number\">1</span>];</span><br><span class=\"line\">    iops[<span class=\"number\">2</span>] += iops_int[<span class=\"number\">2</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_sum</span><span class=\"params\">(<span class=\"type\">const</span> string &amp;name)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bw[<span class=\"number\">3</span>] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 针对混合读写处理</span></span><br><span class=\"line\">    <span class=\"comment\">//  计算最小、最大和平均值</span></span><br><span class=\"line\">    <span class=\"type\">int</span> RbwMin = bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RbwMax = bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RbwAvg = bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RiopsMin = iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RiopsMax = iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> RiopsAvg = iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WbwMin = bw[<span class=\"number\">3</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WbwMax = bw[<span class=\"number\">4</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WbwAvg = bw[<span class=\"number\">5</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WiopsMin = iops[<span class=\"number\">3</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WiopsMax = iops[<span class=\"number\">4</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> WiopsAvg = iops[<span class=\"number\">5</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 将结果存储到数据表中，第一列是 名称，后面是6个值</span></span><br><span class=\"line\">    values = &#123;RbwMin, RbwMax, RbwAvg, RiopsMin, RiopsMax, RiopsAvg,</span><br><span class=\"line\">              WbwMin, WbwMax, WbwAvg, WiopsMin, WiopsMax, WiopsAvg&#125;;</span><br><span class=\"line\">    row = &#123;name&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> val : values) &#123;</span><br><span class=\"line\">      row.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">to_string</span>(val)); <span class=\"comment\">// 将每个值转换为字符串并添加到行中</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    run_report.<span class=\"built_in\">push_back</span>(row); <span class=\"comment\">// 将这行添加到数据中</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 计算最小、最大和平均值</span></span><br><span class=\"line\">    <span class=\"type\">int</span> bwMin = bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> bwMax = bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> bwAvg = bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> iopsMin = iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> iopsMax = iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> iopsAvg = iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 将结果存储到数据表中，第一列是 名称，后面是6个值</span></span><br><span class=\"line\">    values = &#123;bwMin, bwMax, bwAvg, iopsMin, iopsMax, iopsAvg&#125;;</span><br><span class=\"line\">    row = &#123;name&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> val : values) &#123;</span><br><span class=\"line\">      row.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">to_string</span>(val)); <span class=\"comment\">// 将每个值转换为字符串并添加到行中</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    run_report.<span class=\"built_in\">push_back</span>(row); <span class=\"comment\">// 将这行添加到数据中</span></span><br><span class=\"line\">    <span class=\"comment\">// 重置</span></span><br><span class=\"line\">    values.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">    row.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  <span class=\"built_in\">fill</span>(<span class=\"built_in\">begin</span>(bw), <span class=\"built_in\">end</span>(bw), <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">fill</span>(<span class=\"built_in\">begin</span>(iops), <span class=\"built_in\">end</span>(iops), <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">runReport</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 打开文件用于追加写入</span></span><br><span class=\"line\">  <span class=\"function\">ofstream <span class=\"title\">outputFile</span><span class=\"params\">(<span class=\"string\">&quot;/var/log/fio_tool/fio.csv&quot;</span>, ios::app)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (outputFile.<span class=\"built_in\">is_open</span>()) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果文件为空，先写入表头（假设表头只在文件为空时写入一次）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (outputFile.<span class=\"built_in\">tellp</span>() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      outputFile</span><br><span class=\"line\">          &lt;&lt; <span class=\"string\">&quot;测试类型,带宽最小值,带宽最大值,带宽均值,IOPS最小值,&quot;</span></span><br><span class=\"line\">             <span class=\"string\">&quot;IOPS最大值,IOPS均值,写带宽最小值,写带宽最大值,写带宽均值,&quot;</span></span><br><span class=\"line\">             <span class=\"string\">&quot;写IOPS最小值,&quot;</span></span><br><span class=\"line\">             <span class=\"string\">&quot;写IOPS最大值,写IOPS均值,(前6列数据在混合读写中作为读的数据)&quot;</span></span><br><span class=\"line\">          &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;row : run_report) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;cell : row) &#123;</span><br><span class=\"line\">        outputFile &lt;&lt; cell &lt;&lt; <span class=\"string\">&quot;,&quot;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      outputFile &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭文件</span></span><br><span class=\"line\">    outputFile.<span class=\"built_in\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m数据已成功追加到fio.csv文件。\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    cerr &lt;&lt; <span class=\"string\">&quot;\\033[31;1m无法打开fio.csv文件进行追加写入。\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m已重置run_report\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 重置run_report</span></span><br><span class=\"line\">  run_report.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ---创建预读文件 start---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">init_read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32;1m预读文件的大小与测试文件一致，自动从之前的测试中获取\\033[&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;0m\\n&quot;</span>;</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m正在为读取测试创建预读文件，请稍后...&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;\\n创建完毕后会出现提示，创建的文件数量为最大numjobs数量：16个，每个&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;大小为&quot;</span> +</span><br><span class=\"line\">              fsize + <span class=\"string\">&quot;G&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  fio_cmd = <span class=\"string\">&quot;fio -name=init_read -size=&quot;</span> + fsize +</span><br><span class=\"line\">            <span class=\"string\">&quot;G -bs=1m -direct=1 -rw=write -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">            <span class=\"string\">&quot; -numjobs=16 -group_reporting -iodepth=1 -directory=&quot;</span> + dir;</span><br><span class=\"line\">  <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[32;&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;1m预读文件创建完毕！！！\\n预读文件创建完毕！！！\\n预读文件创建完毕！&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;！&quot;</span></span><br><span class=\"line\">          <span class=\"string\">&quot;！\\n\\033[0m&quot;</span></span><br><span class=\"line\">       &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ---创建预读文件 end---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 顺序写start ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_write</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m顺序写测试，共计50项，每项3次，每次 &quot;</span> &lt;&lt; runtime</span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot; 秒，共计 &quot;</span> &lt;&lt; <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span>) &lt;&lt; <span class=\"string\">&quot; 秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot; 小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// numjobs=1</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=512/1024</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;write&quot;</span>;</span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"built_in\">to_string</span>(i);</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"built_in\">to_string</span>(i)); <span class=\"comment\">//&quot;rm -rf &quot; + dir + ? rm -rf /mnt/?</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;128&quot;</span>, <span class=\"string\">&quot;256&quot;</span>, <span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;write&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;mkdir -p &quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot; &amp;&amp; fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 顺序写end ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 顺序读start ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_seq_read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m顺序读测试，共计50项，每项3次，每次预热5秒，每次测试&quot;</span> +</span><br><span class=\"line\">              runtime + <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span>) +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">50</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// numjobs=1</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=512/1024</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;read&quot;</span>;</span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;init_read.0.0&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;128&quot;</span>, <span class=\"string\">&quot;256&quot;</span>, <span class=\"string\">&quot;512&quot;</span>, <span class=\"string\">&quot;1024&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;read&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 顺序读end ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 随机读start ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m随机读测试，共计15项，每项3次，每次预热5秒，每次测试&quot;</span> +</span><br><span class=\"line\">              runtime + <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span>) +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// numjobs=1</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=512/1024</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randread&quot;</span>;</span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd =</span><br><span class=\"line\">                  <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                  <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                  fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                  <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=&quot;</span> +</span><br><span class=\"line\">                  iodepth + <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;init_read.0.0&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randread&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd =</span><br><span class=\"line\">                  <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                  <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                  fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                  <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                  <span class=\"string\">&quot; -group_reporting -ramp_time=5 -readrepeat=0 -iodepth=&quot;</span> +</span><br><span class=\"line\">                  iodepth + <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 随机读end ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 随机写开始 ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_rand_write</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m随机写测试，共计15项，每项3次，每次预热5秒，每次测试&quot;</span> +</span><br><span class=\"line\">              runtime + <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span>) +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，约 &quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\">                                             <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;1&quot;</span>&#125;;              <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randwrite&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"built_in\">to_string</span>(i);</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"built_in\">to_string</span>(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randwrite&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;mkdir -p &quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot; &amp;&amp; fio -name=&quot;</span> + name + <span class=\"string\">&quot; -size=&quot;</span> + fsize +</span><br><span class=\"line\">                        <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime + <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs +</span><br><span class=\"line\">                        <span class=\"string\">&quot;k -direct=&quot;</span> + direct + <span class=\"string\">&quot; -rw=&quot;</span> + rw +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine + <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i) + <span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              <span class=\"built_in\">rm_file</span>(<span class=\"string\">&quot;dir_&quot;</span> + <span class=\"built_in\">to_string</span>(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 随机写结束 ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --- 4k随机读写开始 ---</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fio_randrw</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">  bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 文件</span></span><br><span class=\"line\">  cout &lt;&lt; <span class=\"string\">&quot;\\033[31;1m50%随机读写测试，共计15项，每项3次，每次&quot;</span> + runtime +</span><br><span class=\"line\">              <span class=\"string\">&quot;秒，共计&quot;</span> + <span class=\"built_in\">to_string</span>((<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span>) + <span class=\"string\">&quot;秒，约&quot;</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; fixed</span><br><span class=\"line\">       &lt;&lt; (<span class=\"type\">double</span>)(<span class=\"built_in\">stoi</span>(runtime) + <span class=\"number\">5</span>) * <span class=\"number\">15</span> * <span class=\"number\">3</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span></span><br><span class=\"line\">       &lt;&lt; <span class=\"string\">&quot;小时\\n进行中...\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">  <span class=\"comment\">// 文件/文件夹</span></span><br><span class=\"line\">  string DorF[] = &#123;<span class=\"string\">&quot;filename&quot;</span>, <span class=\"string\">&quot;directory&quot;</span>&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (string dorf : DorF) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;file&quot;</span>) != string::npos) &#123; <span class=\"comment\">// 如果是单文件</span></span><br><span class=\"line\">                                             <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;;        <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randrw&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir + <span class=\"string\">&quot;init_read.0.0&quot;</span>;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dorf.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;directory&quot;</span>) != string::npos) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// numjobs=8/16</span></span><br><span class=\"line\">      string numjobs[] = &#123;<span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>&#125;; <span class=\"comment\">// 用数组配置numjobs</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (string numjob : numjobs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// bs=4k</span></span><br><span class=\"line\">        string bs_group[] = &#123;<span class=\"string\">&quot;4&quot;</span>&#125;; <span class=\"comment\">// 用数组配置bs块大小</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string bs : bs_group) &#123;</span><br><span class=\"line\">          string iodepth_group[] = &#123;<span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;16&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;32&quot;</span>&#125;; <span class=\"comment\">// 用数组配置iodepth循环</span></span><br><span class=\"line\">          <span class=\"comment\">// iodepth=1/2/8/16/32</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span> (string iodepth : iodepth_group) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 先写后读</span></span><br><span class=\"line\">            string rw = <span class=\"string\">&quot;randrw&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重复运行3次</span></span><br><span class=\"line\">            name = rw + <span class=\"string\">&quot;_&quot;</span> + dorf + <span class=\"string\">&quot;_numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                   <span class=\"string\">&quot;_iodepth=&quot;</span> + iodepth + <span class=\"string\">&quot;_bs=&quot;</span> + bs + <span class=\"string\">&quot;k&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 构建文件夹fio命令</span></span><br><span class=\"line\">              fio_cmd = <span class=\"string\">&quot;echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; fio &quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;-name=init_read -size=&quot;</span> +</span><br><span class=\"line\">                        fsize + <span class=\"string\">&quot;G -runtime=&quot;</span> + runtime +</span><br><span class=\"line\">                        <span class=\"string\">&quot;s -time_base -bs=&quot;</span> + bs + <span class=\"string\">&quot;k -direct=&quot;</span> + direct +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -rw=&quot;</span> + rw + <span class=\"string\">&quot; -ioengine=&quot;</span> + ioengine +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -numjobs=&quot;</span> + numjob +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -group_reporting -ramp_time=5 -iodepth=&quot;</span> + iodepth +</span><br><span class=\"line\">                        <span class=\"string\">&quot; -&quot;</span> + dorf + <span class=\"string\">&quot;=&quot;</span> + dir;</span><br><span class=\"line\">              <span class=\"comment\">// 输出本次运行的命令以便排障</span></span><br><span class=\"line\">              cout &lt;&lt; <span class=\"string\">&quot;\\033[36;1m第&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;次运行的命令是：&quot;</span> &lt;&lt; fio_cmd</span><br><span class=\"line\">                   &lt;&lt; <span class=\"string\">&quot;\\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">              <span class=\"built_in\">run_cmd</span>(fio_cmd);</span><br><span class=\"line\">              format(i);</span><br><span class=\"line\">              <span class=\"comment\">// 重置数据</span></span><br><span class=\"line\">              bw_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">              iops_int.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">fio_sum</span>(name);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"built_in\">runReport</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// --- 4k随机读写结束 ---</span></span><br></pre></td></tr></table></figure>"},{"title":"vscode编写markdown的插件推荐","comments":1,"date":"2022-10-26T03:09:08.000Z","keywords":"vscode,markdown","_content":"\n# 使用 VScode 编写 Markdown 的插件推荐及其技巧\n\n<!--more-->\n\n## Markdown 插件推荐\n\n- Markdown Preview Enhanced\n- Markdown PDF\n- LaTeX Workshop\n- Paste Image\n- Markdown All in One\n\n## Markdown 插件详细介绍\n\n### Markdown Preview Enhanced\n\n该插件可以对 Markdown 源码进行实时渲染预览，通过配置插件的\n\n> Markdown-preview-enhanced: Automatically Show Preview Of Markdown Being Edited\n> - [x] Automatically show preview of markdown being edited.\n\n可以实现点击 md 文件编辑的同时自动打开实时渲染界面\n\n![2022-10-14-16-18-21](https://img.hackerbs.com//2022-10-14-16-18-21.png)\n\n### Markdown PDF\n\n该插件可以将 md 文件转换为**pdf、html、png、jpeg**四种格式，配合 vscode 快捷键`Ctrl+Shift+P`并输入`>export (pdf)`后回车即可将当前打开的 md 文件转换为 PDF 格式，替换`(pdf)`中的`pdf`为`html、png、jpeg`其中任意一种，即可导出对应的格式\n使用`>export (all: pdf,html,png,jpeg)`可以一次性导出为 4 种格式\n\n### LaTeX Workshop\n\n该插件可以使 vscode 支持 latex 数学公式代码\n示例如下：\n\n```LaTex\n$$\nM =\n\\begin{pmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{pmatrix}\n$$\n```\n\nLaTeX 语法可以自行搜索，此处给出一条参考链接：[LaTeX 语法](http://www.uinio.com/Math/LaTex/)\n\n### Paste Image\n\n使用 Paste Image 可以快速将粘贴板中的图片粘贴到 Markdown 源码中，快捷键是`Ctrl+Shift+V`\n示例：\n\n![2022-10-14-16-37-29](https://img.hackerbs.com//2022-10-14-16-37-29.png)\n\nPaste Image 默认会将图片复制到当前 md 文件所在目录，并根据**年月日时分秒**自动命名，可以在 vscode 设置中找到 paste image 的配置参数进行修改\n图片自动复制的目录参数为：\n\n![2022-10-14-16-42-28](https://img.hackerbs.com//2022-10-14-16-42-28.png)\n\n其中`${currentFileDir}`为当前 md 文件所在目录，可以修改为项目根目录`${projectRoot}`，还可在二者后面跟上`\\`，如`${currentFileDir}/md_img`，则会将图片复制到当前 md 文件所在目录下的**md_img**目录，若没有**md_img**目录则自动创建\n\n**修改图片保存路径后需要修改`Paste Image: Prefix`，以便路径可以正常匹配**\n\n```shell\nPaste Image: Prefix\nThe string prepend to the resolved image path before paste.\n```\n\n如上文示例，将图片目录自定义为当前目录中`/md_img`文件夹，那么此处需修改为：\n\n![20221027132513](https://img.hackerbs.com//20221027132513.png)\n\n当使用`Ctrl+Shift+V`粘贴后，图片路径会自动设定为`md_img/图片名称`\n\n图片自动命名的参数为：\n\n![2022-10-14-16-45-50](https://img.hackerbs.com//2022-10-14-16-45-50.png)\n\n其中`Y-MM-DD-HH-mm-ss`为**年-月-日-时-分-秒**，该参数采用的是**Moment.js**\n[Moment.js 语法教程](https://momentjs.com/#/displaying/format)\n\n### Markdown All in One\n\n该插件可以使vscode自动补全markdown语法，如使用`- 无序列表`时，回车将在下一行自动补全`- `\n示例如图：\n\n![2022-10-14-16-55-11](https://img.hackerbs.com//2022-10-14-16-55-11.png)\n\n基于vscode的特点，按下`Ctrl+Shift+P`调出控制台后，可以使用**maio**的缩写快速筛出本插件的命令，如图：\n\n![2022-10-14-17-00-34](https://img.hackerbs.com//2022-10-14-17-00-34.png)\n\n[Markdown All in One官网详细介绍](https://markdown-all-in-one.github.io/guide/#features)","source":"_posts/vscode编写markdown的插件推荐.md","raw":"---\ntitle: vscode编写markdown的插件推荐\ncomments: true\ndate: 2022-10-26 11:09:08\nkeywords: vscode,markdown\ncategories: [知识库]\ntags:\n    - markdown\n---\n\n# 使用 VScode 编写 Markdown 的插件推荐及其技巧\n\n<!--more-->\n\n## Markdown 插件推荐\n\n- Markdown Preview Enhanced\n- Markdown PDF\n- LaTeX Workshop\n- Paste Image\n- Markdown All in One\n\n## Markdown 插件详细介绍\n\n### Markdown Preview Enhanced\n\n该插件可以对 Markdown 源码进行实时渲染预览，通过配置插件的\n\n> Markdown-preview-enhanced: Automatically Show Preview Of Markdown Being Edited\n> - [x] Automatically show preview of markdown being edited.\n\n可以实现点击 md 文件编辑的同时自动打开实时渲染界面\n\n![2022-10-14-16-18-21](https://img.hackerbs.com//2022-10-14-16-18-21.png)\n\n### Markdown PDF\n\n该插件可以将 md 文件转换为**pdf、html、png、jpeg**四种格式，配合 vscode 快捷键`Ctrl+Shift+P`并输入`>export (pdf)`后回车即可将当前打开的 md 文件转换为 PDF 格式，替换`(pdf)`中的`pdf`为`html、png、jpeg`其中任意一种，即可导出对应的格式\n使用`>export (all: pdf,html,png,jpeg)`可以一次性导出为 4 种格式\n\n### LaTeX Workshop\n\n该插件可以使 vscode 支持 latex 数学公式代码\n示例如下：\n\n```LaTex\n$$\nM =\n\\begin{pmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{pmatrix}\n$$\n```\n\nLaTeX 语法可以自行搜索，此处给出一条参考链接：[LaTeX 语法](http://www.uinio.com/Math/LaTex/)\n\n### Paste Image\n\n使用 Paste Image 可以快速将粘贴板中的图片粘贴到 Markdown 源码中，快捷键是`Ctrl+Shift+V`\n示例：\n\n![2022-10-14-16-37-29](https://img.hackerbs.com//2022-10-14-16-37-29.png)\n\nPaste Image 默认会将图片复制到当前 md 文件所在目录，并根据**年月日时分秒**自动命名，可以在 vscode 设置中找到 paste image 的配置参数进行修改\n图片自动复制的目录参数为：\n\n![2022-10-14-16-42-28](https://img.hackerbs.com//2022-10-14-16-42-28.png)\n\n其中`${currentFileDir}`为当前 md 文件所在目录，可以修改为项目根目录`${projectRoot}`，还可在二者后面跟上`\\`，如`${currentFileDir}/md_img`，则会将图片复制到当前 md 文件所在目录下的**md_img**目录，若没有**md_img**目录则自动创建\n\n**修改图片保存路径后需要修改`Paste Image: Prefix`，以便路径可以正常匹配**\n\n```shell\nPaste Image: Prefix\nThe string prepend to the resolved image path before paste.\n```\n\n如上文示例，将图片目录自定义为当前目录中`/md_img`文件夹，那么此处需修改为：\n\n![20221027132513](https://img.hackerbs.com//20221027132513.png)\n\n当使用`Ctrl+Shift+V`粘贴后，图片路径会自动设定为`md_img/图片名称`\n\n图片自动命名的参数为：\n\n![2022-10-14-16-45-50](https://img.hackerbs.com//2022-10-14-16-45-50.png)\n\n其中`Y-MM-DD-HH-mm-ss`为**年-月-日-时-分-秒**，该参数采用的是**Moment.js**\n[Moment.js 语法教程](https://momentjs.com/#/displaying/format)\n\n### Markdown All in One\n\n该插件可以使vscode自动补全markdown语法，如使用`- 无序列表`时，回车将在下一行自动补全`- `\n示例如图：\n\n![2022-10-14-16-55-11](https://img.hackerbs.com//2022-10-14-16-55-11.png)\n\n基于vscode的特点，按下`Ctrl+Shift+P`调出控制台后，可以使用**maio**的缩写快速筛出本插件的命令，如图：\n\n![2022-10-14-17-00-34](https://img.hackerbs.com//2022-10-14-17-00-34.png)\n\n[Markdown All in One官网详细介绍](https://markdown-all-in-one.github.io/guide/#features)","slug":"vscode编写markdown的插件推荐","published":1,"updated":"2025-09-04T06:44:07.224Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtv00109szw0sc2em38","content":"<h1 id=\"使用-VScode-编写-Markdown-的插件推荐及其技巧\"><a href=\"#使用-VScode-编写-Markdown-的插件推荐及其技巧\" class=\"headerlink\" title=\"使用 VScode 编写 Markdown 的插件推荐及其技巧\"></a>使用 VScode 编写 Markdown 的插件推荐及其技巧</h1><span id=\"more\"></span>\n\n<h2 id=\"Markdown-插件推荐\"><a href=\"#Markdown-插件推荐\" class=\"headerlink\" title=\"Markdown 插件推荐\"></a>Markdown 插件推荐</h2><ul>\n<li>Markdown Preview Enhanced</li>\n<li>Markdown PDF</li>\n<li>LaTeX Workshop</li>\n<li>Paste Image</li>\n<li>Markdown All in One</li>\n</ul>\n<h2 id=\"Markdown-插件详细介绍\"><a href=\"#Markdown-插件详细介绍\" class=\"headerlink\" title=\"Markdown 插件详细介绍\"></a>Markdown 插件详细介绍</h2><h3 id=\"Markdown-Preview-Enhanced\"><a href=\"#Markdown-Preview-Enhanced\" class=\"headerlink\" title=\"Markdown Preview Enhanced\"></a>Markdown Preview Enhanced</h3><p>该插件可以对 Markdown 源码进行实时渲染预览，通过配置插件的</p>\n<blockquote>\n<p>Markdown-preview-enhanced: Automatically Show Preview Of Markdown Being Edited</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Automatically show preview of markdown being edited.</li>\n</ul>\n</blockquote>\n<p>可以实现点击 md 文件编辑的同时自动打开实时渲染界面</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-18-21.png\" alt=\"2022-10-14-16-18-21\"></p>\n<h3 id=\"Markdown-PDF\"><a href=\"#Markdown-PDF\" class=\"headerlink\" title=\"Markdown PDF\"></a>Markdown PDF</h3><p>该插件可以将 md 文件转换为<strong>pdf、html、png、jpeg</strong>四种格式，配合 vscode 快捷键<code>Ctrl+Shift+P</code>并输入<code>&gt;export (pdf)</code>后回车即可将当前打开的 md 文件转换为 PDF 格式，替换<code>(pdf)</code>中的<code>pdf</code>为<code>html、png、jpeg</code>其中任意一种，即可导出对应的格式<br>使用<code>&gt;export (all: pdf,html,png,jpeg)</code>可以一次性导出为 4 种格式</p>\n<h3 id=\"LaTeX-Workshop\"><a href=\"#LaTeX-Workshop\" class=\"headerlink\" title=\"LaTeX Workshop\"></a>LaTeX Workshop</h3><p>该插件可以使 vscode 支持 latex 数学公式代码<br>示例如下：</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\">M =</span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;pmatrix&#125;</span><br><span class=\"line\">1 <span class=\"built_in\">&amp;</span> 0 <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">0 <span class=\"built_in\">&amp;</span> 1</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;pmatrix&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;pmatrix&#125;</span><br><span class=\"line\">1 <span class=\"built_in\">&amp;</span> 0 <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">0 <span class=\"built_in\">&amp;</span> 1</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;pmatrix&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>LaTeX 语法可以自行搜索，此处给出一条参考链接：<a href=\"http://www.uinio.com/Math/LaTex/\">LaTeX 语法</a></p>\n<h3 id=\"Paste-Image\"><a href=\"#Paste-Image\" class=\"headerlink\" title=\"Paste Image\"></a>Paste Image</h3><p>使用 Paste Image 可以快速将粘贴板中的图片粘贴到 Markdown 源码中，快捷键是<code>Ctrl+Shift+V</code><br>示例：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-37-29.png\" alt=\"2022-10-14-16-37-29\"></p>\n<p>Paste Image 默认会将图片复制到当前 md 文件所在目录，并根据<strong>年月日时分秒</strong>自动命名，可以在 vscode 设置中找到 paste image 的配置参数进行修改<br>图片自动复制的目录参数为：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-42-28.png\" alt=\"2022-10-14-16-42-28\"></p>\n<p>其中<code>$&#123;currentFileDir&#125;</code>为当前 md 文件所在目录，可以修改为项目根目录<code>$&#123;projectRoot&#125;</code>，还可在二者后面跟上<code>\\</code>，如<code>$&#123;currentFileDir&#125;/md_img</code>，则会将图片复制到当前 md 文件所在目录下的<strong>md_img</strong>目录，若没有<strong>md_img</strong>目录则自动创建</p>\n<p><strong>修改图片保存路径后需要修改<code>Paste Image: Prefix</code>，以便路径可以正常匹配</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Paste Image: Prefix</span><br><span class=\"line\">The string prepend to the resolved image path before paste.</span><br></pre></td></tr></table></figure>\n\n<p>如上文示例，将图片目录自定义为当前目录中<code>/md_img</code>文件夹，那么此处需修改为：</p>\n<p><img src=\"https://img.hackerbs.com//20221027132513.png\" alt=\"20221027132513\"></p>\n<p>当使用<code>Ctrl+Shift+V</code>粘贴后，图片路径会自动设定为<code>md_img/图片名称</code></p>\n<p>图片自动命名的参数为：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-45-50.png\" alt=\"2022-10-14-16-45-50\"></p>\n<p>其中<code>Y-MM-DD-HH-mm-ss</code>为<strong>年-月-日-时-分-秒</strong>，该参数采用的是<strong>Moment.js</strong><br><a href=\"https://momentjs.com/#/displaying/format\">Moment.js 语法教程</a></p>\n<h3 id=\"Markdown-All-in-One\"><a href=\"#Markdown-All-in-One\" class=\"headerlink\" title=\"Markdown All in One\"></a>Markdown All in One</h3><p>该插件可以使vscode自动补全markdown语法，如使用<code>- 无序列表</code>时，回车将在下一行自动补全<code>- </code><br>示例如图：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-55-11.png\" alt=\"2022-10-14-16-55-11\"></p>\n<p>基于vscode的特点，按下<code>Ctrl+Shift+P</code>调出控制台后，可以使用<strong>maio</strong>的缩写快速筛出本插件的命令，如图：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-17-00-34.png\" alt=\"2022-10-14-17-00-34\"></p>\n<p><a href=\"https://markdown-all-in-one.github.io/guide/#features\">Markdown All in One官网详细介绍</a></p>\n","site":{"data":{}},"length":699,"excerpt":"<h1 id=\"使用-VScode-编写-Markdown-的插件推荐及其技巧\"><a href=\"#使用-VScode-编写-Markdown-的插件推荐及其技巧\" class=\"headerlink\" title=\"使用 VScode 编写 Markdown 的插件推荐及其技巧\"></a>使用 VScode 编写 Markdown 的插件推荐及其技巧</h1>","more":"<h2 id=\"Markdown-插件推荐\"><a href=\"#Markdown-插件推荐\" class=\"headerlink\" title=\"Markdown 插件推荐\"></a>Markdown 插件推荐</h2><ul>\n<li>Markdown Preview Enhanced</li>\n<li>Markdown PDF</li>\n<li>LaTeX Workshop</li>\n<li>Paste Image</li>\n<li>Markdown All in One</li>\n</ul>\n<h2 id=\"Markdown-插件详细介绍\"><a href=\"#Markdown-插件详细介绍\" class=\"headerlink\" title=\"Markdown 插件详细介绍\"></a>Markdown 插件详细介绍</h2><h3 id=\"Markdown-Preview-Enhanced\"><a href=\"#Markdown-Preview-Enhanced\" class=\"headerlink\" title=\"Markdown Preview Enhanced\"></a>Markdown Preview Enhanced</h3><p>该插件可以对 Markdown 源码进行实时渲染预览，通过配置插件的</p>\n<blockquote>\n<p>Markdown-preview-enhanced: Automatically Show Preview Of Markdown Being Edited</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Automatically show preview of markdown being edited.</li>\n</ul>\n</blockquote>\n<p>可以实现点击 md 文件编辑的同时自动打开实时渲染界面</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-18-21.png\" alt=\"2022-10-14-16-18-21\"></p>\n<h3 id=\"Markdown-PDF\"><a href=\"#Markdown-PDF\" class=\"headerlink\" title=\"Markdown PDF\"></a>Markdown PDF</h3><p>该插件可以将 md 文件转换为<strong>pdf、html、png、jpeg</strong>四种格式，配合 vscode 快捷键<code>Ctrl+Shift+P</code>并输入<code>&gt;export (pdf)</code>后回车即可将当前打开的 md 文件转换为 PDF 格式，替换<code>(pdf)</code>中的<code>pdf</code>为<code>html、png、jpeg</code>其中任意一种，即可导出对应的格式<br>使用<code>&gt;export (all: pdf,html,png,jpeg)</code>可以一次性导出为 4 种格式</p>\n<h3 id=\"LaTeX-Workshop\"><a href=\"#LaTeX-Workshop\" class=\"headerlink\" title=\"LaTeX Workshop\"></a>LaTeX Workshop</h3><p>该插件可以使 vscode 支持 latex 数学公式代码<br>示例如下：</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\">M =</span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;pmatrix&#125;</span><br><span class=\"line\">1 <span class=\"built_in\">&amp;</span> 0 <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">0 <span class=\"built_in\">&amp;</span> 1</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;pmatrix&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;pmatrix&#125;</span><br><span class=\"line\">1 <span class=\"built_in\">&amp;</span> 0 <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">0 <span class=\"built_in\">&amp;</span> 1</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;pmatrix&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>LaTeX 语法可以自行搜索，此处给出一条参考链接：<a href=\"http://www.uinio.com/Math/LaTex/\">LaTeX 语法</a></p>\n<h3 id=\"Paste-Image\"><a href=\"#Paste-Image\" class=\"headerlink\" title=\"Paste Image\"></a>Paste Image</h3><p>使用 Paste Image 可以快速将粘贴板中的图片粘贴到 Markdown 源码中，快捷键是<code>Ctrl+Shift+V</code><br>示例：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-37-29.png\" alt=\"2022-10-14-16-37-29\"></p>\n<p>Paste Image 默认会将图片复制到当前 md 文件所在目录，并根据<strong>年月日时分秒</strong>自动命名，可以在 vscode 设置中找到 paste image 的配置参数进行修改<br>图片自动复制的目录参数为：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-42-28.png\" alt=\"2022-10-14-16-42-28\"></p>\n<p>其中<code>$&#123;currentFileDir&#125;</code>为当前 md 文件所在目录，可以修改为项目根目录<code>$&#123;projectRoot&#125;</code>，还可在二者后面跟上<code>\\</code>，如<code>$&#123;currentFileDir&#125;/md_img</code>，则会将图片复制到当前 md 文件所在目录下的<strong>md_img</strong>目录，若没有<strong>md_img</strong>目录则自动创建</p>\n<p><strong>修改图片保存路径后需要修改<code>Paste Image: Prefix</code>，以便路径可以正常匹配</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Paste Image: Prefix</span><br><span class=\"line\">The string prepend to the resolved image path before paste.</span><br></pre></td></tr></table></figure>\n\n<p>如上文示例，将图片目录自定义为当前目录中<code>/md_img</code>文件夹，那么此处需修改为：</p>\n<p><img src=\"https://img.hackerbs.com//20221027132513.png\" alt=\"20221027132513\"></p>\n<p>当使用<code>Ctrl+Shift+V</code>粘贴后，图片路径会自动设定为<code>md_img/图片名称</code></p>\n<p>图片自动命名的参数为：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-45-50.png\" alt=\"2022-10-14-16-45-50\"></p>\n<p>其中<code>Y-MM-DD-HH-mm-ss</code>为<strong>年-月-日-时-分-秒</strong>，该参数采用的是<strong>Moment.js</strong><br><a href=\"https://momentjs.com/#/displaying/format\">Moment.js 语法教程</a></p>\n<h3 id=\"Markdown-All-in-One\"><a href=\"#Markdown-All-in-One\" class=\"headerlink\" title=\"Markdown All in One\"></a>Markdown All in One</h3><p>该插件可以使vscode自动补全markdown语法，如使用<code>- 无序列表</code>时，回车将在下一行自动补全<code>- </code><br>示例如图：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-16-55-11.png\" alt=\"2022-10-14-16-55-11\"></p>\n<p>基于vscode的特点，按下<code>Ctrl+Shift+P</code>调出控制台后，可以使用<strong>maio</strong>的缩写快速筛出本插件的命令，如图：</p>\n<p><img src=\"https://img.hackerbs.com//2022-10-14-17-00-34.png\" alt=\"2022-10-14-17-00-34\"></p>\n<p><a href=\"https://markdown-all-in-one.github.io/guide/#features\">Markdown All in One官网详细介绍</a></p>"},{"title":"关于磁盘残留lvm的解决办法","comments":1,"date":"2024-11-28T02:28:48.000Z","keywords":["Linux","lvm","磁盘","解决办法","dmsetup"],"_content":"\n很多时候从其他机器拿过来的盘通常是没有经过格式化的，这样就会出现一些残留的lvm信息，导致无法正常使用。\n\n出现该残留lvm的原因是因为设备映射器device mapper正在管理该磁盘，所以wipefs -a -f和dd if=/dev/zero of=/dev/disk命令无法清除该lvm\n\n```shell\n# lsblk显示如下\nnvme0n1\t\t\t\t\tdisk\n└storage-data\t\t\tlvm\n\n# ls -l /dev/mapper查询device mapper管理的磁盘信息\nlrwxrwxrwx 1 root root \t\t7 Nov 28 18:04 storage-data ->../dm-0\n\n#dmsetup remove删除\ndmsetup remove /dev/mapper/storage-data\n```\n","source":"_posts/关于磁盘残留lvm的解决办法.md","raw":"---\ntitle: 关于磁盘残留lvm的解决办法\ncomments: true\ncategories: [知识库]\ndate: 2024-11-28 10:28:48\nkeywords:\n\t- Linux\n\t- lvm\n\t- 磁盘\n\t- 解决办法\n\t- dmsetup\ntags:\n\t- Linux\n\t- lvm\n\t- 磁盘\n\t- 解决办法\n\t- dmsetup\n---\n\n很多时候从其他机器拿过来的盘通常是没有经过格式化的，这样就会出现一些残留的lvm信息，导致无法正常使用。\n\n出现该残留lvm的原因是因为设备映射器device mapper正在管理该磁盘，所以wipefs -a -f和dd if=/dev/zero of=/dev/disk命令无法清除该lvm\n\n```shell\n# lsblk显示如下\nnvme0n1\t\t\t\t\tdisk\n└storage-data\t\t\tlvm\n\n# ls -l /dev/mapper查询device mapper管理的磁盘信息\nlrwxrwxrwx 1 root root \t\t7 Nov 28 18:04 storage-data ->../dm-0\n\n#dmsetup remove删除\ndmsetup remove /dev/mapper/storage-data\n```\n","slug":"关于磁盘残留lvm的解决办法","published":1,"updated":"2025-09-04T06:44:07.225Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtv00139szw6fhybuy0","content":"<p>很多时候从其他机器拿过来的盘通常是没有经过格式化的，这样就会出现一些残留的lvm信息，导致无法正常使用。</p>\n<p>出现该残留lvm的原因是因为设备映射器device mapper正在管理该磁盘，所以wipefs -a -f和dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;dev&#x2F;disk命令无法清除该lvm</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">lsblk显示如下</span></span><br><span class=\"line\">nvme0n1\t\t\t\t\tdisk</span><br><span class=\"line\">└storage-data\t\t\tlvm</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">ls</span> -l /dev/mapper查询device mapper管理的磁盘信息</span></span><br><span class=\"line\">lrwxrwxrwx 1 root root \t\t7 Nov 28 18:04 storage-data -&gt;../dm-0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">dmsetup remove删除</span></span><br><span class=\"line\">dmsetup remove /dev/mapper/storage-data</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":143,"excerpt":"","more":"<p>很多时候从其他机器拿过来的盘通常是没有经过格式化的，这样就会出现一些残留的lvm信息，导致无法正常使用。</p>\n<p>出现该残留lvm的原因是因为设备映射器device mapper正在管理该磁盘，所以wipefs -a -f和dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;dev&#x2F;disk命令无法清除该lvm</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">lsblk显示如下</span></span><br><span class=\"line\">nvme0n1\t\t\t\t\tdisk</span><br><span class=\"line\">└storage-data\t\t\tlvm</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">ls</span> -l /dev/mapper查询device mapper管理的磁盘信息</span></span><br><span class=\"line\">lrwxrwxrwx 1 root root \t\t7 Nov 28 18:04 storage-data -&gt;../dm-0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">dmsetup remove删除</span></span><br><span class=\"line\">dmsetup remove /dev/mapper/storage-data</span><br></pre></td></tr></table></figure>\n"},{"title":"关于Proxmox-VE系统创建UEFI虚拟机需要单独添加EFI磁盘的问题","keywords":"Promox-VE,UEFI,虚拟机","comments":1,"date":"2023-01-03T04:00:25.000Z","_content":"\n>在传统物理机上，如需使用UEFI引导，仅仅需要在硬盘上创建EFI分区即可，无论是Windows还是Linux均是如此，但在使用Proxmox-VE创建虚拟机时，却需要额外添加EFI磁盘，对此提出疑问并进行探讨。\n\n<!-- more -->\n\n直接在网络上搜寻并无相关信息，查询[官方wiki](https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines)得到如下解释：\n\nBIOS 和 UEFI\n\n为了正确模拟计算机，QEMU 需要使用固件。在通常称为 BIOS 或 (U)EFI 的普通 PC 上，它作为启动 VM 时的第一步执行。它负责进行基本的硬件初始化，并为操作系统提供固件和硬件接口。默认情况下，QEMU 为此使用SeaBIOS，这是一个开源的 x86 BIOS 实现。SeaBIOS 是大多数标准设置的不错选择。\n\n某些操作系统（例如 Windows 11）可能需要使用 UEFI 兼容实现。在这种情况下，您必须使用OVMF，它是一种开源 UEFI 实现。\n\n在其他情况下，SeaBIOS 可能不是理想的启动固件，例如，如果您想进行 VGA 直通。\n\n如果要使用 OVMF，需要考虑以下几点：\n\n为了保存引导顺序之类的东西，需要有一个 EFI 磁盘。该磁盘将包含在备份和快照中，并且只能有一个。\n\n您可以使用以下命令创建这样的磁盘：\n\n```shell\nqm set <vmid> -efidisk0 <storage>:1,format=<format>,efitype=4m,pre-enrolled-keys=1\n```\n\n其中**storage**是您希望拥有磁盘的存储，而**format**是存储支持的格式。或者，您可以通过VM 硬件部分中的添加 EFI 磁盘的 Web 界面创建这样的磁盘。\n\nefitype选项指定应使用哪个版本的 OVMF 固件。对于新的 VM，这应该始终是4m，因为它支持安全启动并且分配了更多空间来支持未来的开发（这是 GUI 中的默认值）。\n\npre-enroll-keys指定 efidisk 是否应预加载特定于发行版和 Microsoft 标准安全启动密钥。它还默认启用安全启动（尽管它仍然可以在 VM 的 OVMF 菜单中禁用）。\n\n笔记\t如果要在现有 VM（仍使用2m efidisk）中开始使用安全启动，则需要重新创建 efidisk。为此，删除旧的 ( `qm set <vmid> -delete efidisk0` ) 并添加一个新的，如上所述。这将重置您在 OVMF 菜单中所做的任何自定义配置！\n当使用带有虚拟显示器的 OVMF（没有 VGA 直通）时，您需要在 OVMF 菜单中设置客户端分辨率（您可以在启动期间按 ESC 按钮到达），或者您必须选择 SPICE 作为显示类型.\n\n---\n\n为了保存引导顺序？或许是类似于物理机上，启动菜单中除了UEFI的硬盘启动项外，还有一个额外的操作系统名称的启动项？如`Windows Boot Manager`或是`Debian`\n\nEFI磁盘 = 操作系统引导项？\n","source":"_posts/关于Proxmox-VE系统创建UEFI虚拟机需要单独添加EFI磁盘的问题.md","raw":"---\ntitle: 关于Proxmox-VE系统创建UEFI虚拟机需要单独添加EFI磁盘的问题\nkeywords: Promox-VE,UEFI,虚拟机\ncategories: [知识库]\ntags:\n  - Proxmox-VE\n  - 虚拟机\ncomments: true\ndate: 2023-01-03 12:00:25\n---\n\n>在传统物理机上，如需使用UEFI引导，仅仅需要在硬盘上创建EFI分区即可，无论是Windows还是Linux均是如此，但在使用Proxmox-VE创建虚拟机时，却需要额外添加EFI磁盘，对此提出疑问并进行探讨。\n\n<!-- more -->\n\n直接在网络上搜寻并无相关信息，查询[官方wiki](https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines)得到如下解释：\n\nBIOS 和 UEFI\n\n为了正确模拟计算机，QEMU 需要使用固件。在通常称为 BIOS 或 (U)EFI 的普通 PC 上，它作为启动 VM 时的第一步执行。它负责进行基本的硬件初始化，并为操作系统提供固件和硬件接口。默认情况下，QEMU 为此使用SeaBIOS，这是一个开源的 x86 BIOS 实现。SeaBIOS 是大多数标准设置的不错选择。\n\n某些操作系统（例如 Windows 11）可能需要使用 UEFI 兼容实现。在这种情况下，您必须使用OVMF，它是一种开源 UEFI 实现。\n\n在其他情况下，SeaBIOS 可能不是理想的启动固件，例如，如果您想进行 VGA 直通。\n\n如果要使用 OVMF，需要考虑以下几点：\n\n为了保存引导顺序之类的东西，需要有一个 EFI 磁盘。该磁盘将包含在备份和快照中，并且只能有一个。\n\n您可以使用以下命令创建这样的磁盘：\n\n```shell\nqm set <vmid> -efidisk0 <storage>:1,format=<format>,efitype=4m,pre-enrolled-keys=1\n```\n\n其中**storage**是您希望拥有磁盘的存储，而**format**是存储支持的格式。或者，您可以通过VM 硬件部分中的添加 EFI 磁盘的 Web 界面创建这样的磁盘。\n\nefitype选项指定应使用哪个版本的 OVMF 固件。对于新的 VM，这应该始终是4m，因为它支持安全启动并且分配了更多空间来支持未来的开发（这是 GUI 中的默认值）。\n\npre-enroll-keys指定 efidisk 是否应预加载特定于发行版和 Microsoft 标准安全启动密钥。它还默认启用安全启动（尽管它仍然可以在 VM 的 OVMF 菜单中禁用）。\n\n笔记\t如果要在现有 VM（仍使用2m efidisk）中开始使用安全启动，则需要重新创建 efidisk。为此，删除旧的 ( `qm set <vmid> -delete efidisk0` ) 并添加一个新的，如上所述。这将重置您在 OVMF 菜单中所做的任何自定义配置！\n当使用带有虚拟显示器的 OVMF（没有 VGA 直通）时，您需要在 OVMF 菜单中设置客户端分辨率（您可以在启动期间按 ESC 按钮到达），或者您必须选择 SPICE 作为显示类型.\n\n---\n\n为了保存引导顺序？或许是类似于物理机上，启动菜单中除了UEFI的硬盘启动项外，还有一个额外的操作系统名称的启动项？如`Windows Boot Manager`或是`Debian`\n\nEFI磁盘 = 操作系统引导项？\n","slug":"关于Proxmox-VE系统创建UEFI虚拟机需要单独添加EFI磁盘的问题","published":1,"updated":"2025-09-04T06:44:07.224Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtw00159szw1zxzgg1b","content":"<blockquote>\n<p>在传统物理机上，如需使用UEFI引导，仅仅需要在硬盘上创建EFI分区即可，无论是Windows还是Linux均是如此，但在使用Proxmox-VE创建虚拟机时，却需要额外添加EFI磁盘，对此提出疑问并进行探讨。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>直接在网络上搜寻并无相关信息，查询<a href=\"https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines\">官方wiki</a>得到如下解释：</p>\n<p>BIOS 和 UEFI</p>\n<p>为了正确模拟计算机，QEMU 需要使用固件。在通常称为 BIOS 或 (U)EFI 的普通 PC 上，它作为启动 VM 时的第一步执行。它负责进行基本的硬件初始化，并为操作系统提供固件和硬件接口。默认情况下，QEMU 为此使用SeaBIOS，这是一个开源的 x86 BIOS 实现。SeaBIOS 是大多数标准设置的不错选择。</p>\n<p>某些操作系统（例如 Windows 11）可能需要使用 UEFI 兼容实现。在这种情况下，您必须使用OVMF，它是一种开源 UEFI 实现。</p>\n<p>在其他情况下，SeaBIOS 可能不是理想的启动固件，例如，如果您想进行 VGA 直通。</p>\n<p>如果要使用 OVMF，需要考虑以下几点：</p>\n<p>为了保存引导顺序之类的东西，需要有一个 EFI 磁盘。该磁盘将包含在备份和快照中，并且只能有一个。</p>\n<p>您可以使用以下命令创建这样的磁盘：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qm set &lt;vmid&gt; -efidisk0 &lt;storage&gt;:1,format=&lt;format&gt;,efitype=4m,pre-enrolled-keys=1</span><br></pre></td></tr></table></figure>\n\n<p>其中<strong>storage</strong>是您希望拥有磁盘的存储，而<strong>format</strong>是存储支持的格式。或者，您可以通过VM 硬件部分中的添加 EFI 磁盘的 Web 界面创建这样的磁盘。</p>\n<p>efitype选项指定应使用哪个版本的 OVMF 固件。对于新的 VM，这应该始终是4m，因为它支持安全启动并且分配了更多空间来支持未来的开发（这是 GUI 中的默认值）。</p>\n<p>pre-enroll-keys指定 efidisk 是否应预加载特定于发行版和 Microsoft 标准安全启动密钥。它还默认启用安全启动（尽管它仍然可以在 VM 的 OVMF 菜单中禁用）。</p>\n<p>笔记\t如果要在现有 VM（仍使用2m efidisk）中开始使用安全启动，则需要重新创建 efidisk。为此，删除旧的 ( <code>qm set &lt;vmid&gt; -delete efidisk0</code> ) 并添加一个新的，如上所述。这将重置您在 OVMF 菜单中所做的任何自定义配置！<br>当使用带有虚拟显示器的 OVMF（没有 VGA 直通）时，您需要在 OVMF 菜单中设置客户端分辨率（您可以在启动期间按 ESC 按钮到达），或者您必须选择 SPICE 作为显示类型.</p>\n<hr>\n<p>为了保存引导顺序？或许是类似于物理机上，启动菜单中除了UEFI的硬盘启动项外，还有一个额外的操作系统名称的启动项？如<code>Windows Boot Manager</code>或是<code>Debian</code></p>\n<p>EFI磁盘 &#x3D; 操作系统引导项？</p>\n","site":{"data":{}},"length":738,"excerpt":"<blockquote>\n<p>在传统物理机上，如需使用UEFI引导，仅仅需要在硬盘上创建EFI分区即可，无论是Windows还是Linux均是如此，但在使用Proxmox-VE创建虚拟机时，却需要额外添加EFI磁盘，对此提出疑问并进行探讨。</p>\n</blockquote>","more":"<p>直接在网络上搜寻并无相关信息，查询<a href=\"https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines\">官方wiki</a>得到如下解释：</p>\n<p>BIOS 和 UEFI</p>\n<p>为了正确模拟计算机，QEMU 需要使用固件。在通常称为 BIOS 或 (U)EFI 的普通 PC 上，它作为启动 VM 时的第一步执行。它负责进行基本的硬件初始化，并为操作系统提供固件和硬件接口。默认情况下，QEMU 为此使用SeaBIOS，这是一个开源的 x86 BIOS 实现。SeaBIOS 是大多数标准设置的不错选择。</p>\n<p>某些操作系统（例如 Windows 11）可能需要使用 UEFI 兼容实现。在这种情况下，您必须使用OVMF，它是一种开源 UEFI 实现。</p>\n<p>在其他情况下，SeaBIOS 可能不是理想的启动固件，例如，如果您想进行 VGA 直通。</p>\n<p>如果要使用 OVMF，需要考虑以下几点：</p>\n<p>为了保存引导顺序之类的东西，需要有一个 EFI 磁盘。该磁盘将包含在备份和快照中，并且只能有一个。</p>\n<p>您可以使用以下命令创建这样的磁盘：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qm set &lt;vmid&gt; -efidisk0 &lt;storage&gt;:1,format=&lt;format&gt;,efitype=4m,pre-enrolled-keys=1</span><br></pre></td></tr></table></figure>\n\n<p>其中<strong>storage</strong>是您希望拥有磁盘的存储，而<strong>format</strong>是存储支持的格式。或者，您可以通过VM 硬件部分中的添加 EFI 磁盘的 Web 界面创建这样的磁盘。</p>\n<p>efitype选项指定应使用哪个版本的 OVMF 固件。对于新的 VM，这应该始终是4m，因为它支持安全启动并且分配了更多空间来支持未来的开发（这是 GUI 中的默认值）。</p>\n<p>pre-enroll-keys指定 efidisk 是否应预加载特定于发行版和 Microsoft 标准安全启动密钥。它还默认启用安全启动（尽管它仍然可以在 VM 的 OVMF 菜单中禁用）。</p>\n<p>笔记\t如果要在现有 VM（仍使用2m efidisk）中开始使用安全启动，则需要重新创建 efidisk。为此，删除旧的 ( <code>qm set &lt;vmid&gt; -delete efidisk0</code> ) 并添加一个新的，如上所述。这将重置您在 OVMF 菜单中所做的任何自定义配置！<br>当使用带有虚拟显示器的 OVMF（没有 VGA 直通）时，您需要在 OVMF 菜单中设置客户端分辨率（您可以在启动期间按 ESC 按钮到达），或者您必须选择 SPICE 作为显示类型.</p>\n<hr>\n<p>为了保存引导顺序？或许是类似于物理机上，启动菜单中除了UEFI的硬盘启动项外，还有一个额外的操作系统名称的启动项？如<code>Windows Boot Manager</code>或是<code>Debian</code></p>\n<p>EFI磁盘 &#x3D; 操作系统引导项？</p>"},{"title":"如何搭建具有GPGkey验证的可信任apt源","comments":1,"date":"2024-06-21T09:13:04.000Z","keywords":["apt","GPG key","可信任apt源","apt源"],"_content":"\n# 本文将介绍如何搭建一个像docker-ce一样具有GPG key验证的源\n\n普通的用`deb [trusted=yes] http://url/ bookworm main`添加的源在内网环境用还行，但若是在公网，就会存在没有验证，被篡改的风险，且具有GPG key验证的源也更专业\n\n搭建自己的apt源后便可将自己的deb包上传到服务器，然后添加自己的apt源并导入GPG密钥\n\n<!-- more -->\n\n## 使用aptly管理apt仓库\n\n```shell\n# 创建一个aptly的工作地址\nmkdir -p /mypath/apt\n# 使用aptly创建仓库\n# bookworm是debian 12的代号\n# comment则是填仓库的描述\n# hackerbs是我的仓库名，修改为你的即可\naptly repo create -distribution=\"bookworm\" -comment=\"hackerbs.com's repository\" hackerbs\n\n# 运行该命令后会在用户目录下生成一个.aptly.conf配置文件，和.aptly的目录\n# 建议编辑.aptly.conf配置文件，修改原\n\"rootDir\": \"/root/.aptly\",\n# 改为指定的，如我的/mypath/apt目录\n\"rootDir\": \"/mypath/apt\",\n# 重新运行\naptly repo create -distribution=\"bookworm\" -comment=\"hackerbs.com's repository\" hackerbs\n# 现在指定的/mypath/apt下便会出现一个db文件夹\n# 继续往仓库添加deb包\n# add后面的hackerbs是上一步创建的仓库名，仓库名后面则是包的路径，跟部署无关，这里只是添加到仓库\naptly repo add hackerbs /deb/package/aptdownloader/aptdownloader_1.0.0-1_amd64.deb\n# 添加完成后创建一个快照\n# create后面的aptdownloader只是我的快照名称，repo后面接你的仓库名\naptly snapshot create aptdownloader from repo hackerbs\n# 使用快照发布apt存储库\n# snapshot后面跟快照名\naptly publish snapshot aptdownloader\n```\n\n至此，aptly发布存储库完成，/mypath/apt/public文件夹就是网站的文件夹，所以下文中nginx指向的便是该路径\n\n以下是aptly命令的补充\n\n```shell\naptly publish drop buster # 取消已发布的存储库，这里指定的名字不是存储库的名字而是distribution\naptly snapshot drop imlala_snapshot # 删除快照（如果当前快照正在对外服务，需要先取消快照对应的存储库发布后才能删除）\naptly snapshot show -with-packages imlala_snapshot # 显示某个快照内有多少个包\naptly snapshot list # 列出所有快照\naptly repo show -with-packages imlala # 显示某个存储库内有多少包\naptly repo list # 列出所有存储库\naptly repo remove imlala qbittorrent-nox_4.1.7.1_amd64 # 从存储库删除包\naptly serve # 启动自带的http服务器\n```\n\n## 使用docker创建一个nginx，以下是我的docker-compose.yaml文件\n\n```yaml\nservices:\n    apt:\n        image: nginx:latest\n        container_name: apt\n        restart: always\n        ports:\n        - 443:443\n        volumes:\n        - /mypath/html:/usr/share/nginx/html\n        - /mypath/conf:/etc/nginx/conf.d\n```\n\n然后使用`docker compose up -d`启动这个nginx容器\n\n进入到我的目录的conf中，新建一个apt.conf配置文件\n\n```\nserver {\n    listen 443;\n    listen [::]:443;\n    server_name mydomain;\n\n    root /mypath/public;\n    autoindex on;\n    index index.html\n    allow all;\n}\n```\n\n然后使用`docker exec apt nginx -t`测试配置文件\n\n继续使用`docker exec apt nginx -s reload`重载配置文件\n\n此时nginx已经上线\n\n## 配置GPG key\n\n首先使用`gpg --full-generate-key`命令并按图所示创建gpg密钥\n\n![20240621183309](https://img.hackerbs.com//20240621183309.png)\n\n![20240621183514](https://img.hackerbs.com//20240621183514.png)\n\n然后建议导出密钥用于备份\n\n**私钥绝对不要泄露**\n\n```shell\n# 导出私钥，邮箱替换成你的，private.gpg也可以按你的习惯命名\ngpg --export-secret-keys --armor 0@hackerbs.com > private.gpg\n\n# 导出公钥，邮箱替换成你的，public.gpg也可以按你的习惯命名\ngpg --export --armor 0@hackerbs.com > public.gpg\n\n# 查看所有gpg key信息\n gpg --list-keys\n# 我的输出如下\n/root/.gnupg/pubring.kbx\n------------------------\npub   rsa4096 2024-06-21 [SC]\n      0380F37B181615738D90FF46C1763CF4CC699C74\nuid           [ultimate] hackerbs (hackerbs.com) <0@hackerbs.com>\nsub   rsa4096 2024-06-21 [E]\n# 其中0380F37B181615738D90FF46C1763CF4CC699C74便是我的公钥，使用下面的命令进行导出\ngpg --export --armor 0380F37B181615738D90FF46C1763CF4CC699C74 > hackerbs.asc\n\n# 导出的公钥放到网站根目录以供下载\nmv hackerbs.asc /mypath/public\n```\n\n*因为apt-key被淘汰了，所以没有推荐用apt-key的方式，不过还是补充下*\n\n```shell\n# 将公钥上传到keyserver.ubuntu.com\ngpg --keyserver keyserver.ubuntu.com --send-key 630D583FFE07EDA9B9531E029CA58840D67352EE\n```\n\n在[https://keyserver.ubuntu.com/](https://keyserver.ubuntu.com/)输入邮箱地址即可查询到公钥\n\n![20240621190029](https://img.hackerbs.com//20240621190029.png)\n\n## 客户端添加gpg密钥和源\n\n```shell\n# 以下是本站源的演示\n# 其中hackerbs.asc名称可以更改，如myname.asc，后缀要保留\n# 后面的连接就是上方为什么需要将asc放到网站根目录\n# &&是表示执行成功后继续执行mv将asc密钥放到/etc/apt/trusted.gpg.d/目录下\n# 后面的添加到sources.list就不用再讲解了\ncurl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc && mv hackerbs.asc /etc/apt/trusted.gpg.d/\necho \"deb https://apt.ygeit.cn bookworm main\" >> /etc/apt/sources.list\napt update\n```\n\n## 补充\n\n如果访问有问题，记得修改public的权限为755\n\n```shell\nchmod -R 755 /mypath/apt/public\n```","source":"_posts/如何搭建具有GPGkey验证的可信任apt源.md","raw":"---\ntitle: 如何搭建具有GPGkey验证的可信任apt源\ncomments: true\ncategories: [知识库]\ndate: 2024-06-21 17:13:04\nkeywords:\n    - apt\n    - GPG key\n    - 可信任apt源\n    - apt源\ntags:\n    - apt\n    - GPG key\n    - 可信任apt源\n    - apt源\n---\n\n# 本文将介绍如何搭建一个像docker-ce一样具有GPG key验证的源\n\n普通的用`deb [trusted=yes] http://url/ bookworm main`添加的源在内网环境用还行，但若是在公网，就会存在没有验证，被篡改的风险，且具有GPG key验证的源也更专业\n\n搭建自己的apt源后便可将自己的deb包上传到服务器，然后添加自己的apt源并导入GPG密钥\n\n<!-- more -->\n\n## 使用aptly管理apt仓库\n\n```shell\n# 创建一个aptly的工作地址\nmkdir -p /mypath/apt\n# 使用aptly创建仓库\n# bookworm是debian 12的代号\n# comment则是填仓库的描述\n# hackerbs是我的仓库名，修改为你的即可\naptly repo create -distribution=\"bookworm\" -comment=\"hackerbs.com's repository\" hackerbs\n\n# 运行该命令后会在用户目录下生成一个.aptly.conf配置文件，和.aptly的目录\n# 建议编辑.aptly.conf配置文件，修改原\n\"rootDir\": \"/root/.aptly\",\n# 改为指定的，如我的/mypath/apt目录\n\"rootDir\": \"/mypath/apt\",\n# 重新运行\naptly repo create -distribution=\"bookworm\" -comment=\"hackerbs.com's repository\" hackerbs\n# 现在指定的/mypath/apt下便会出现一个db文件夹\n# 继续往仓库添加deb包\n# add后面的hackerbs是上一步创建的仓库名，仓库名后面则是包的路径，跟部署无关，这里只是添加到仓库\naptly repo add hackerbs /deb/package/aptdownloader/aptdownloader_1.0.0-1_amd64.deb\n# 添加完成后创建一个快照\n# create后面的aptdownloader只是我的快照名称，repo后面接你的仓库名\naptly snapshot create aptdownloader from repo hackerbs\n# 使用快照发布apt存储库\n# snapshot后面跟快照名\naptly publish snapshot aptdownloader\n```\n\n至此，aptly发布存储库完成，/mypath/apt/public文件夹就是网站的文件夹，所以下文中nginx指向的便是该路径\n\n以下是aptly命令的补充\n\n```shell\naptly publish drop buster # 取消已发布的存储库，这里指定的名字不是存储库的名字而是distribution\naptly snapshot drop imlala_snapshot # 删除快照（如果当前快照正在对外服务，需要先取消快照对应的存储库发布后才能删除）\naptly snapshot show -with-packages imlala_snapshot # 显示某个快照内有多少个包\naptly snapshot list # 列出所有快照\naptly repo show -with-packages imlala # 显示某个存储库内有多少包\naptly repo list # 列出所有存储库\naptly repo remove imlala qbittorrent-nox_4.1.7.1_amd64 # 从存储库删除包\naptly serve # 启动自带的http服务器\n```\n\n## 使用docker创建一个nginx，以下是我的docker-compose.yaml文件\n\n```yaml\nservices:\n    apt:\n        image: nginx:latest\n        container_name: apt\n        restart: always\n        ports:\n        - 443:443\n        volumes:\n        - /mypath/html:/usr/share/nginx/html\n        - /mypath/conf:/etc/nginx/conf.d\n```\n\n然后使用`docker compose up -d`启动这个nginx容器\n\n进入到我的目录的conf中，新建一个apt.conf配置文件\n\n```\nserver {\n    listen 443;\n    listen [::]:443;\n    server_name mydomain;\n\n    root /mypath/public;\n    autoindex on;\n    index index.html\n    allow all;\n}\n```\n\n然后使用`docker exec apt nginx -t`测试配置文件\n\n继续使用`docker exec apt nginx -s reload`重载配置文件\n\n此时nginx已经上线\n\n## 配置GPG key\n\n首先使用`gpg --full-generate-key`命令并按图所示创建gpg密钥\n\n![20240621183309](https://img.hackerbs.com//20240621183309.png)\n\n![20240621183514](https://img.hackerbs.com//20240621183514.png)\n\n然后建议导出密钥用于备份\n\n**私钥绝对不要泄露**\n\n```shell\n# 导出私钥，邮箱替换成你的，private.gpg也可以按你的习惯命名\ngpg --export-secret-keys --armor 0@hackerbs.com > private.gpg\n\n# 导出公钥，邮箱替换成你的，public.gpg也可以按你的习惯命名\ngpg --export --armor 0@hackerbs.com > public.gpg\n\n# 查看所有gpg key信息\n gpg --list-keys\n# 我的输出如下\n/root/.gnupg/pubring.kbx\n------------------------\npub   rsa4096 2024-06-21 [SC]\n      0380F37B181615738D90FF46C1763CF4CC699C74\nuid           [ultimate] hackerbs (hackerbs.com) <0@hackerbs.com>\nsub   rsa4096 2024-06-21 [E]\n# 其中0380F37B181615738D90FF46C1763CF4CC699C74便是我的公钥，使用下面的命令进行导出\ngpg --export --armor 0380F37B181615738D90FF46C1763CF4CC699C74 > hackerbs.asc\n\n# 导出的公钥放到网站根目录以供下载\nmv hackerbs.asc /mypath/public\n```\n\n*因为apt-key被淘汰了，所以没有推荐用apt-key的方式，不过还是补充下*\n\n```shell\n# 将公钥上传到keyserver.ubuntu.com\ngpg --keyserver keyserver.ubuntu.com --send-key 630D583FFE07EDA9B9531E029CA58840D67352EE\n```\n\n在[https://keyserver.ubuntu.com/](https://keyserver.ubuntu.com/)输入邮箱地址即可查询到公钥\n\n![20240621190029](https://img.hackerbs.com//20240621190029.png)\n\n## 客户端添加gpg密钥和源\n\n```shell\n# 以下是本站源的演示\n# 其中hackerbs.asc名称可以更改，如myname.asc，后缀要保留\n# 后面的连接就是上方为什么需要将asc放到网站根目录\n# &&是表示执行成功后继续执行mv将asc密钥放到/etc/apt/trusted.gpg.d/目录下\n# 后面的添加到sources.list就不用再讲解了\ncurl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc && mv hackerbs.asc /etc/apt/trusted.gpg.d/\necho \"deb https://apt.ygeit.cn bookworm main\" >> /etc/apt/sources.list\napt update\n```\n\n## 补充\n\n如果访问有问题，记得修改public的权限为755\n\n```shell\nchmod -R 755 /mypath/apt/public\n```","slug":"如何搭建具有GPGkey验证的可信任apt源","published":1,"updated":"2025-09-04T06:44:07.225Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtw00189szw7isafqrj","content":"<h1 id=\"本文将介绍如何搭建一个像docker-ce一样具有GPG-key验证的源\"><a href=\"#本文将介绍如何搭建一个像docker-ce一样具有GPG-key验证的源\" class=\"headerlink\" title=\"本文将介绍如何搭建一个像docker-ce一样具有GPG key验证的源\"></a>本文将介绍如何搭建一个像docker-ce一样具有GPG key验证的源</h1><p>普通的用<code>deb [trusted=yes] http://url/ bookworm main</code>添加的源在内网环境用还行，但若是在公网，就会存在没有验证，被篡改的风险，且具有GPG key验证的源也更专业</p>\n<p>搭建自己的apt源后便可将自己的deb包上传到服务器，然后添加自己的apt源并导入GPG密钥</p>\n<span id=\"more\"></span>\n\n<h2 id=\"使用aptly管理apt仓库\"><a href=\"#使用aptly管理apt仓库\" class=\"headerlink\" title=\"使用aptly管理apt仓库\"></a>使用aptly管理apt仓库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建一个aptly的工作地址</span></span><br><span class=\"line\">mkdir -p /mypath/apt</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用aptly创建仓库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">bookworm是debian 12的代号</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">comment则是填仓库的描述</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">hackerbs是我的仓库名，修改为你的即可</span></span><br><span class=\"line\">aptly repo create -distribution=&quot;bookworm&quot; -comment=&quot;hackerbs.com&#x27;s repository&quot; hackerbs</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">运行该命令后会在用户目录下生成一个.aptly.conf配置文件，和.aptly的目录</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">建议编辑.aptly.conf配置文件，修改原</span></span><br><span class=\"line\">&quot;rootDir&quot;: &quot;/root/.aptly&quot;,</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">改为指定的，如我的/mypath/apt目录</span></span><br><span class=\"line\">&quot;rootDir&quot;: &quot;/mypath/apt&quot;,</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重新运行</span></span><br><span class=\"line\">aptly repo create -distribution=&quot;bookworm&quot; -comment=&quot;hackerbs.com&#x27;s repository&quot; hackerbs</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">现在指定的/mypath/apt下便会出现一个db文件夹</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">继续往仓库添加deb包</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">add后面的hackerbs是上一步创建的仓库名，仓库名后面则是包的路径，跟部署无关，这里只是添加到仓库</span></span><br><span class=\"line\">aptly repo add hackerbs /deb/package/aptdownloader/aptdownloader_1.0.0-1_amd64.deb</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加完成后创建一个快照</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">create后面的aptdownloader只是我的快照名称，repo后面接你的仓库名</span></span><br><span class=\"line\">aptly snapshot create aptdownloader from repo hackerbs</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用快照发布apt存储库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">snapshot后面跟快照名</span></span><br><span class=\"line\">aptly publish snapshot aptdownloader</span><br></pre></td></tr></table></figure>\n\n<p>至此，aptly发布存储库完成，&#x2F;mypath&#x2F;apt&#x2F;public文件夹就是网站的文件夹，所以下文中nginx指向的便是该路径</p>\n<p>以下是aptly命令的补充</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aptly publish drop buster # 取消已发布的存储库，这里指定的名字不是存储库的名字而是distribution</span><br><span class=\"line\">aptly snapshot drop imlala_snapshot # 删除快照（如果当前快照正在对外服务，需要先取消快照对应的存储库发布后才能删除）</span><br><span class=\"line\">aptly snapshot show -with-packages imlala_snapshot # 显示某个快照内有多少个包</span><br><span class=\"line\">aptly snapshot list # 列出所有快照</span><br><span class=\"line\">aptly repo show -with-packages imlala # 显示某个存储库内有多少包</span><br><span class=\"line\">aptly repo list # 列出所有存储库</span><br><span class=\"line\">aptly repo remove imlala qbittorrent-nox_4.1.7.1_amd64 # 从存储库删除包</span><br><span class=\"line\">aptly serve # 启动自带的http服务器</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用docker创建一个nginx，以下是我的docker-compose-yaml文件\"><a href=\"#使用docker创建一个nginx，以下是我的docker-compose-yaml文件\" class=\"headerlink\" title=\"使用docker创建一个nginx，以下是我的docker-compose.yaml文件\"></a>使用docker创建一个nginx，以下是我的docker-compose.yaml文件</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">apt:</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">nginx:latest</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">apt</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"number\">443</span><span class=\"string\">:443</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">/mypath/html:/usr/share/nginx/html</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">/mypath/conf:/etc/nginx/conf.d</span></span><br></pre></td></tr></table></figure>\n\n<p>然后使用<code>docker compose up -d</code>启动这个nginx容器</p>\n<p>进入到我的目录的conf中，新建一个apt.conf配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 443;</span><br><span class=\"line\">    listen [::]:443;</span><br><span class=\"line\">    server_name mydomain;</span><br><span class=\"line\"></span><br><span class=\"line\">    root /mypath/public;</span><br><span class=\"line\">    autoindex on;</span><br><span class=\"line\">    index index.html</span><br><span class=\"line\">    allow all;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后使用<code>docker exec apt nginx -t</code>测试配置文件</p>\n<p>继续使用<code>docker exec apt nginx -s reload</code>重载配置文件</p>\n<p>此时nginx已经上线</p>\n<h2 id=\"配置GPG-key\"><a href=\"#配置GPG-key\" class=\"headerlink\" title=\"配置GPG key\"></a>配置GPG key</h2><p>首先使用<code>gpg --full-generate-key</code>命令并按图所示创建gpg密钥</p>\n<p><img src=\"https://img.hackerbs.com//20240621183309.png\" alt=\"20240621183309\"></p>\n<p><img src=\"https://img.hackerbs.com//20240621183514.png\" alt=\"20240621183514\"></p>\n<p>然后建议导出密钥用于备份</p>\n<p><strong>私钥绝对不要泄露</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">导出私钥，邮箱替换成你的，private.gpg也可以按你的习惯命名</span></span><br><span class=\"line\">gpg --export-secret-keys --armor 0@hackerbs.com &gt; private.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">导出公钥，邮箱替换成你的，public.gpg也可以按你的习惯命名</span></span><br><span class=\"line\">gpg --export --armor 0@hackerbs.com &gt; public.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看所有gpg key信息</span></span><br><span class=\"line\"> gpg --list-keys</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的输出如下</span></span><br><span class=\"line\">/root/.gnupg/pubring.kbx</span><br><span class=\"line\">------------------------</span><br><span class=\"line\">pub   rsa4096 2024-06-21 [SC]</span><br><span class=\"line\">      0380F37B181615738D90FF46C1763CF4CC699C74</span><br><span class=\"line\">uid           [ultimate] hackerbs (hackerbs.com) &lt;0@hackerbs.com&gt;</span><br><span class=\"line\">sub   rsa4096 2024-06-21 [E]</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中0380F37B181615738D90FF46C1763CF4CC699C74便是我的公钥，使用下面的命令进行导出</span></span><br><span class=\"line\">gpg --export --armor 0380F37B181615738D90FF46C1763CF4CC699C74 &gt; hackerbs.asc</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">导出的公钥放到网站根目录以供下载</span></span><br><span class=\"line\">mv hackerbs.asc /mypath/public</span><br></pre></td></tr></table></figure>\n\n<p><em>因为apt-key被淘汰了，所以没有推荐用apt-key的方式，不过还是补充下</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将公钥上传到keyserver.ubuntu.com</span></span><br><span class=\"line\">gpg --keyserver keyserver.ubuntu.com --send-key 630D583FFE07EDA9B9531E029CA58840D67352EE</span><br></pre></td></tr></table></figure>\n\n<p>在<a href=\"https://keyserver.ubuntu.com/\">https://keyserver.ubuntu.com/</a>输入邮箱地址即可查询到公钥</p>\n<p><img src=\"https://img.hackerbs.com//20240621190029.png\" alt=\"20240621190029\"></p>\n<h2 id=\"客户端添加gpg密钥和源\"><a href=\"#客户端添加gpg密钥和源\" class=\"headerlink\" title=\"客户端添加gpg密钥和源\"></a>客户端添加gpg密钥和源</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下是本站源的演示</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中hackerbs.asc名称可以更改，如myname.asc，后缀要保留</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">后面的连接就是上方为什么需要将asc放到网站根目录</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">&amp;&amp;是表示执行成功后继续执行<span class=\"built_in\">mv</span>将asc密钥放到/etc/apt/trusted.gpg.d/目录下</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">后面的添加到sources.list就不用再讲解了</span></span><br><span class=\"line\">curl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc &amp;&amp; mv hackerbs.asc /etc/apt/trusted.gpg.d/</span><br><span class=\"line\">echo &quot;deb https://apt.ygeit.cn bookworm main&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">apt update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>如果访问有问题，记得修改public的权限为755</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 755 /mypath/apt/public</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1115,"excerpt":"<h1 id=\"本文将介绍如何搭建一个像docker-ce一样具有GPG-key验证的源\"><a href=\"#本文将介绍如何搭建一个像docker-ce一样具有GPG-key验证的源\" class=\"headerlink\" title=\"本文将介绍如何搭建一个像docker-ce一样具有GPG key验证的源\"></a>本文将介绍如何搭建一个像docker-ce一样具有GPG key验证的源</h1><p>普通的用<code>deb [trusted=yes] http://url/ bookworm main</code>添加的源在内网环境用还行，但若是在公网，就会存在没有验证，被篡改的风险，且具有GPG key验证的源也更专业</p>\n<p>搭建自己的apt源后便可将自己的deb包上传到服务器，然后添加自己的apt源并导入GPG密钥</p>","more":"<h2 id=\"使用aptly管理apt仓库\"><a href=\"#使用aptly管理apt仓库\" class=\"headerlink\" title=\"使用aptly管理apt仓库\"></a>使用aptly管理apt仓库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建一个aptly的工作地址</span></span><br><span class=\"line\">mkdir -p /mypath/apt</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用aptly创建仓库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">bookworm是debian 12的代号</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">comment则是填仓库的描述</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">hackerbs是我的仓库名，修改为你的即可</span></span><br><span class=\"line\">aptly repo create -distribution=&quot;bookworm&quot; -comment=&quot;hackerbs.com&#x27;s repository&quot; hackerbs</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">运行该命令后会在用户目录下生成一个.aptly.conf配置文件，和.aptly的目录</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">建议编辑.aptly.conf配置文件，修改原</span></span><br><span class=\"line\">&quot;rootDir&quot;: &quot;/root/.aptly&quot;,</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">改为指定的，如我的/mypath/apt目录</span></span><br><span class=\"line\">&quot;rootDir&quot;: &quot;/mypath/apt&quot;,</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重新运行</span></span><br><span class=\"line\">aptly repo create -distribution=&quot;bookworm&quot; -comment=&quot;hackerbs.com&#x27;s repository&quot; hackerbs</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">现在指定的/mypath/apt下便会出现一个db文件夹</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">继续往仓库添加deb包</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">add后面的hackerbs是上一步创建的仓库名，仓库名后面则是包的路径，跟部署无关，这里只是添加到仓库</span></span><br><span class=\"line\">aptly repo add hackerbs /deb/package/aptdownloader/aptdownloader_1.0.0-1_amd64.deb</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加完成后创建一个快照</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">create后面的aptdownloader只是我的快照名称，repo后面接你的仓库名</span></span><br><span class=\"line\">aptly snapshot create aptdownloader from repo hackerbs</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用快照发布apt存储库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">snapshot后面跟快照名</span></span><br><span class=\"line\">aptly publish snapshot aptdownloader</span><br></pre></td></tr></table></figure>\n\n<p>至此，aptly发布存储库完成，&#x2F;mypath&#x2F;apt&#x2F;public文件夹就是网站的文件夹，所以下文中nginx指向的便是该路径</p>\n<p>以下是aptly命令的补充</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aptly publish drop buster # 取消已发布的存储库，这里指定的名字不是存储库的名字而是distribution</span><br><span class=\"line\">aptly snapshot drop imlala_snapshot # 删除快照（如果当前快照正在对外服务，需要先取消快照对应的存储库发布后才能删除）</span><br><span class=\"line\">aptly snapshot show -with-packages imlala_snapshot # 显示某个快照内有多少个包</span><br><span class=\"line\">aptly snapshot list # 列出所有快照</span><br><span class=\"line\">aptly repo show -with-packages imlala # 显示某个存储库内有多少包</span><br><span class=\"line\">aptly repo list # 列出所有存储库</span><br><span class=\"line\">aptly repo remove imlala qbittorrent-nox_4.1.7.1_amd64 # 从存储库删除包</span><br><span class=\"line\">aptly serve # 启动自带的http服务器</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用docker创建一个nginx，以下是我的docker-compose-yaml文件\"><a href=\"#使用docker创建一个nginx，以下是我的docker-compose-yaml文件\" class=\"headerlink\" title=\"使用docker创建一个nginx，以下是我的docker-compose.yaml文件\"></a>使用docker创建一个nginx，以下是我的docker-compose.yaml文件</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">apt:</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">nginx:latest</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">apt</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"number\">443</span><span class=\"string\">:443</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">/mypath/html:/usr/share/nginx/html</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">/mypath/conf:/etc/nginx/conf.d</span></span><br></pre></td></tr></table></figure>\n\n<p>然后使用<code>docker compose up -d</code>启动这个nginx容器</p>\n<p>进入到我的目录的conf中，新建一个apt.conf配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 443;</span><br><span class=\"line\">    listen [::]:443;</span><br><span class=\"line\">    server_name mydomain;</span><br><span class=\"line\"></span><br><span class=\"line\">    root /mypath/public;</span><br><span class=\"line\">    autoindex on;</span><br><span class=\"line\">    index index.html</span><br><span class=\"line\">    allow all;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后使用<code>docker exec apt nginx -t</code>测试配置文件</p>\n<p>继续使用<code>docker exec apt nginx -s reload</code>重载配置文件</p>\n<p>此时nginx已经上线</p>\n<h2 id=\"配置GPG-key\"><a href=\"#配置GPG-key\" class=\"headerlink\" title=\"配置GPG key\"></a>配置GPG key</h2><p>首先使用<code>gpg --full-generate-key</code>命令并按图所示创建gpg密钥</p>\n<p><img src=\"https://img.hackerbs.com//20240621183309.png\" alt=\"20240621183309\"></p>\n<p><img src=\"https://img.hackerbs.com//20240621183514.png\" alt=\"20240621183514\"></p>\n<p>然后建议导出密钥用于备份</p>\n<p><strong>私钥绝对不要泄露</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">导出私钥，邮箱替换成你的，private.gpg也可以按你的习惯命名</span></span><br><span class=\"line\">gpg --export-secret-keys --armor 0@hackerbs.com &gt; private.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">导出公钥，邮箱替换成你的，public.gpg也可以按你的习惯命名</span></span><br><span class=\"line\">gpg --export --armor 0@hackerbs.com &gt; public.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看所有gpg key信息</span></span><br><span class=\"line\"> gpg --list-keys</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的输出如下</span></span><br><span class=\"line\">/root/.gnupg/pubring.kbx</span><br><span class=\"line\">------------------------</span><br><span class=\"line\">pub   rsa4096 2024-06-21 [SC]</span><br><span class=\"line\">      0380F37B181615738D90FF46C1763CF4CC699C74</span><br><span class=\"line\">uid           [ultimate] hackerbs (hackerbs.com) &lt;0@hackerbs.com&gt;</span><br><span class=\"line\">sub   rsa4096 2024-06-21 [E]</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中0380F37B181615738D90FF46C1763CF4CC699C74便是我的公钥，使用下面的命令进行导出</span></span><br><span class=\"line\">gpg --export --armor 0380F37B181615738D90FF46C1763CF4CC699C74 &gt; hackerbs.asc</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">导出的公钥放到网站根目录以供下载</span></span><br><span class=\"line\">mv hackerbs.asc /mypath/public</span><br></pre></td></tr></table></figure>\n\n<p><em>因为apt-key被淘汰了，所以没有推荐用apt-key的方式，不过还是补充下</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将公钥上传到keyserver.ubuntu.com</span></span><br><span class=\"line\">gpg --keyserver keyserver.ubuntu.com --send-key 630D583FFE07EDA9B9531E029CA58840D67352EE</span><br></pre></td></tr></table></figure>\n\n<p>在<a href=\"https://keyserver.ubuntu.com/\">https://keyserver.ubuntu.com/</a>输入邮箱地址即可查询到公钥</p>\n<p><img src=\"https://img.hackerbs.com//20240621190029.png\" alt=\"20240621190029\"></p>\n<h2 id=\"客户端添加gpg密钥和源\"><a href=\"#客户端添加gpg密钥和源\" class=\"headerlink\" title=\"客户端添加gpg密钥和源\"></a>客户端添加gpg密钥和源</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">以下是本站源的演示</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中hackerbs.asc名称可以更改，如myname.asc，后缀要保留</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">后面的连接就是上方为什么需要将asc放到网站根目录</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">&amp;&amp;是表示执行成功后继续执行<span class=\"built_in\">mv</span>将asc密钥放到/etc/apt/trusted.gpg.d/目录下</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">后面的添加到sources.list就不用再讲解了</span></span><br><span class=\"line\">curl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc &amp;&amp; mv hackerbs.asc /etc/apt/trusted.gpg.d/</span><br><span class=\"line\">echo &quot;deb https://apt.ygeit.cn bookworm main&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">apt update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>如果访问有问题，记得修改public的权限为755</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 755 /mypath/apt/public</span><br></pre></td></tr></table></figure>"},{"title":"国内docker hub无法使用的解决办法","comments":1,"date":"2024-06-12T10:16:26.000Z","keywords":["docker","docker hub","docker pull","docker 代理"],"_content":"\n# 首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\n\n**在QQ`粒子｜服主社区 ①群`的用户，直接群里@hackerbs即可**\n\n因为有些东西不能直接放到网站上讲，所以网站上的教程直接从假设你已经在你的Linux系统里有了v2ray，并在系统中有socks5，如果你不懂，那就按上面说的，联系我或者群里@我\n\n如果你想google，想ChatGPT，但是不知道在哪儿买便宜好用的v2ray服务，一样，联系我\n\n如果你真的很菜很菜，完全不懂Linux，但是又需要在Linux里使用v2ray，可以联系我，如果我空的时候，会友情免费帮你，或者根据你的经济情况有偿协助。\n\n> 怕小白不懂，在此说的明白点：使用代理，也就是fan qiang，违法，不能明目张胆的说，懂嘛？\n\n展开阅读\n\n<!-- more -->\n\n那么，直接从已经配置好socks5和安装好了docker开始\n\n**如果你还没安装docker，那么搜本站的[apt等各种源列表（持续更新）](https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html)**\n\n使用`mkdir /etc/systemd/system/docker.service.d`创建目录，然后使用`vim /etc/systemd/system/docker.service.d/http-proxy.conf`编辑该文件，文件内容如下：\n\n```json\n[Service]\nEnvironment=\"HTTP_PROXY=socks5://IP地址:端口/\"\nEnvironment=\"HTTPS_PROXY=socks5://127.0.0.1:10808/\"\n```\n\n保存退出后使用`systemctl daemon-reload`重载systemd，然后使用`systemctl restart docker`重启docker，接下来你就可以愉快的使用docker pull了\n\n如果你之前配置了国内docker hub，记得删掉，也就是`/etc/docker/daemon.json`中的内容，如下所示：\n\n```json\n{\n  \"registry-mirrors\": [\"https://docker.mirrors.ustc.edu.cn/\"]\n}\n```\n","source":"_posts/国内docker-hub无法使用的解决办法.md","raw":"---\ntitle: 国内docker hub无法使用的解决办法\ncomments: true\ncategories: [知识库]\ndate: 2024-06-12 18:16:26\nkeywords:\n    - docker\n    - docker hub\n    - docker pull\n    - docker 代理\ntags:\n    - docker\n    - docker hub\n    - docker pull\n    - docker 代理\n---\n\n# 首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\n\n**在QQ`粒子｜服主社区 ①群`的用户，直接群里@hackerbs即可**\n\n因为有些东西不能直接放到网站上讲，所以网站上的教程直接从假设你已经在你的Linux系统里有了v2ray，并在系统中有socks5，如果你不懂，那就按上面说的，联系我或者群里@我\n\n如果你想google，想ChatGPT，但是不知道在哪儿买便宜好用的v2ray服务，一样，联系我\n\n如果你真的很菜很菜，完全不懂Linux，但是又需要在Linux里使用v2ray，可以联系我，如果我空的时候，会友情免费帮你，或者根据你的经济情况有偿协助。\n\n> 怕小白不懂，在此说的明白点：使用代理，也就是fan qiang，违法，不能明目张胆的说，懂嘛？\n\n展开阅读\n\n<!-- more -->\n\n那么，直接从已经配置好socks5和安装好了docker开始\n\n**如果你还没安装docker，那么搜本站的[apt等各种源列表（持续更新）](https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html)**\n\n使用`mkdir /etc/systemd/system/docker.service.d`创建目录，然后使用`vim /etc/systemd/system/docker.service.d/http-proxy.conf`编辑该文件，文件内容如下：\n\n```json\n[Service]\nEnvironment=\"HTTP_PROXY=socks5://IP地址:端口/\"\nEnvironment=\"HTTPS_PROXY=socks5://127.0.0.1:10808/\"\n```\n\n保存退出后使用`systemctl daemon-reload`重载systemd，然后使用`systemctl restart docker`重启docker，接下来你就可以愉快的使用docker pull了\n\n如果你之前配置了国内docker hub，记得删掉，也就是`/etc/docker/daemon.json`中的内容，如下所示：\n\n```json\n{\n  \"registry-mirrors\": [\"https://docker.mirrors.ustc.edu.cn/\"]\n}\n```\n","slug":"国内docker-hub无法使用的解决办法","published":1,"updated":"2025-09-04T06:44:07.225Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtx001a9szwakvqg6a8","content":"<h1 id=\"首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\"><a href=\"#首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\" class=\"headerlink\" title=\"首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\"></a>首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我</h1><p><strong>在QQ<code>粒子｜服主社区 ①群</code>的用户，直接群里@hackerbs即可</strong></p>\n<p>因为有些东西不能直接放到网站上讲，所以网站上的教程直接从假设你已经在你的Linux系统里有了v2ray，并在系统中有socks5，如果你不懂，那就按上面说的，联系我或者群里@我</p>\n<p>如果你想google，想ChatGPT，但是不知道在哪儿买便宜好用的v2ray服务，一样，联系我</p>\n<p>如果你真的很菜很菜，完全不懂Linux，但是又需要在Linux里使用v2ray，可以联系我，如果我空的时候，会友情免费帮你，或者根据你的经济情况有偿协助。</p>\n<blockquote>\n<p>怕小白不懂，在此说的明白点：使用代理，也就是fan qiang，违法，不能明目张胆的说，懂嘛？</p>\n</blockquote>\n<p>展开阅读</p>\n<span id=\"more\"></span>\n\n<p>那么，直接从已经配置好socks5和安装好了docker开始</p>\n<p><strong>如果你还没安装docker，那么搜本站的<a href=\"https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html\">apt等各种源列表（持续更新）</a></strong></p>\n<p>使用<code>mkdir /etc/systemd/system/docker.service.d</code>创建目录，然后使用<code>vim /etc/systemd/system/docker.service.d/http-proxy.conf</code>编辑该文件，文件内容如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span>Service<span class=\"punctuation\">]</span></span><br><span class=\"line\">Environment=<span class=\"string\">&quot;HTTP_PROXY=socks5://IP地址:端口/&quot;</span></span><br><span class=\"line\">Environment=<span class=\"string\">&quot;HTTPS_PROXY=socks5://127.0.0.1:10808/&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>保存退出后使用<code>systemctl daemon-reload</code>重载systemd，然后使用<code>systemctl restart docker</code>重启docker，接下来你就可以愉快的使用docker pull了</p>\n<p>如果你之前配置了国内docker hub，记得删掉，也就是<code>/etc/docker/daemon.json</code>中的内容，如下所示：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;registry-mirrors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":427,"excerpt":"<h1 id=\"首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\"><a href=\"#首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\" class=\"headerlink\" title=\"首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我\"></a>首先你得有代理，比如v2ray，然后系统里有socks5，这个就不能放在网站上说明了，懂得都懂，需要技术支持的页面底部，联系我</h1><p><strong>在QQ<code>粒子｜服主社区 ①群</code>的用户，直接群里@hackerbs即可</strong></p>\n<p>因为有些东西不能直接放到网站上讲，所以网站上的教程直接从假设你已经在你的Linux系统里有了v2ray，并在系统中有socks5，如果你不懂，那就按上面说的，联系我或者群里@我</p>\n<p>如果你想google，想ChatGPT，但是不知道在哪儿买便宜好用的v2ray服务，一样，联系我</p>\n<p>如果你真的很菜很菜，完全不懂Linux，但是又需要在Linux里使用v2ray，可以联系我，如果我空的时候，会友情免费帮你，或者根据你的经济情况有偿协助。</p>\n<blockquote>\n<p>怕小白不懂，在此说的明白点：使用代理，也就是fan qiang，违法，不能明目张胆的说，懂嘛？</p>\n</blockquote>\n<p>展开阅读</p>","more":"<p>那么，直接从已经配置好socks5和安装好了docker开始</p>\n<p><strong>如果你还没安装docker，那么搜本站的<a href=\"https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html\">apt等各种源列表（持续更新）</a></strong></p>\n<p>使用<code>mkdir /etc/systemd/system/docker.service.d</code>创建目录，然后使用<code>vim /etc/systemd/system/docker.service.d/http-proxy.conf</code>编辑该文件，文件内容如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span>Service<span class=\"punctuation\">]</span></span><br><span class=\"line\">Environment=<span class=\"string\">&quot;HTTP_PROXY=socks5://IP地址:端口/&quot;</span></span><br><span class=\"line\">Environment=<span class=\"string\">&quot;HTTPS_PROXY=socks5://127.0.0.1:10808/&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>保存退出后使用<code>systemctl daemon-reload</code>重载systemd，然后使用<code>systemctl restart docker</code>重启docker，接下来你就可以愉快的使用docker pull了</p>\n<p>如果你之前配置了国内docker hub，记得删掉，也就是<code>/etc/docker/daemon.json</code>中的内容，如下所示：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;registry-mirrors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>"},{"title":"将二进制可执行程序构建为deb包","comments":1,"date":"2023-10-17T07:42:12.000Z","keywords":"构建deb包","_content":"\n构建deb包所需依赖：\n`apt install dh-make`\n\n本文使用本站aptdownloader包做为演示\n\n<!-- more -->\n\n第一步，创建项目目录，项目目录名称格式应为`包名-版本号`如`aptdownloader-1.0.0`\n\n```shell\n# 我在我的/root/目录下创建了一个deb文件夹，也就是https://github.com/1949hacker/deb的仓库\n# 使用tree列出目录结构并指定只显示3层\ntree -L 3\n# 目录结构如下\ndeb\n├── LICENSE # 这个就不用解释了，git仓库的许可\n├── package # 这个是我用来存构建deb的文件的文件夹\n│   └── aptdownloader # aptdownloader包\n│       ├── aptdownloader-1.0.0 # 按照包名-版本规则创建的文件夹\n│       ├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage -us -uc -nc生成的文件\n│       ├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage -us -uc -nc生成的文件\n│       ├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage -us -uc -nc生成的deb包\n│       └── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage -us -uc -nc生成的文件\n├── python-source # 这个是我用来存放python源码的目录\n│   ├── 64pxlogo.ico # logo的ico\n│   ├── aptdownloader # aptdownloader的源码文件夹\n│   │   └── aptdownloader.py # aptdownloader的源码\n│   ├── dist # pyinstaller生成的可运行的二进制文件\n│   │   └── aptdownloader # 二进制文件\n│   └── pip # python venv的文件夹\n│       ├── bin\n│       ├── include\n│       ├── lib\n│       ├── lib64 -> lib\n│       └── pyvenv.cfg\n├── README_en.md # 自述文件英文版\n└── README.md # 自述文件中文版\n\n# 首先，进入python-source目录，使用以下命令激活python虚拟环境\n# source后面的路径以你的python venv地址为准，your_path/bin/active\nsource pip/bin/activate\n# 使用pyinstaller命令将aptdownloader.py转换为二进制可执行程序\n# -i是指定图标，我linux都是用命令行，没试过图形化里会不会显示图标\n# -F是生成单文件，后面紧跟着的就是源代码\n# --distpath bin表示将生成的可执行程序输出到当前目录的bin文件夹中\n# --workpath temp_build和--specpath temp_spec都是指定一个临时构建目录temp_build和一个临时spec配置文件目录temp_spec\n# 使用&&链接符确保执行成功后分别rm删除两个临时目录\npyinstaller -F aptdownloader/aptdownloader.py -i 64pxlogo.ico --distpath bin --workpath temp_build --specpath temp_spec && rm temp_build -rf && rm temp_spec -rf\n\n# 最终会将生成的程序输出到当前目录的bin文件夹\ndeb/python-source\n├── 64pxlogo.ico # 本就存在的图标文件\n├── aptdownloader # 本就存在的源码文件夹\n│   └── aptdownloader.py # python源码\n├── bin # 存放可执行程序的目录\n│   └── aptdownloader # 生成的可执行程序\n└── pip # 我创建的python venv环境目录\n\n# 返回最外层目录，我的是deb目录且位于用户主目录，然后进入package目录\ncd ~/deb\ncd package\n# 新建aptdownloader目录并进入\nmkdir aptdownloader && cd aptdownloader\n\n# 按照包名+版本的规则创建目录\nmkdir aptdownloader-1.0.0\n# 进入并使用dh_make创建项目文件\ncd aptdownloader-1.0.0\ndh_make --createorig\n# 输入该命令后终端显示内容如下\n(pip) root@vladimir:~/deb/package/aptdownloader/aptdownloader-1.0.0# dh_make --createorig\n/usr/bin/dh_make:10: DeprecationWarning: 'nis' is deprecated and slated for removal in Python 3.13\n  import nis\nType of package: (single, indep, library, python)\n[s/i/l/p]? # 我要生成的是单包，所以这一步我按的是s键，按键就行，不需要Enter\nMaintainer Name     : root\nEmail-Address       : root@localhost.localdomain\nDate                : Fri, 21 Jun 2024 16:47:31 +0800\nPackage Name        : aptdownloader\nVersion             : 1.0.0\nLicense             : blank\nPackage Type        : single\nAre the details correct? [Y/n/q] # 这一步按Y确认\nCurrently there is not top level Makefile. This may require additional tuning\nDone. Please edit the files in the debian/ subdirectory now.\n\n# 现在当前目录便生成了debian文件夹\n# 编辑debian/control文件，以你的为准，我的源内容如下，参照我给的注释修改即可\nSource: aptdownloader # 来源，这个是默认生成的，不管\nSection: unknown # 默认是unknown，我改成了utils（工具）\nPriority: optional # 默认不用改\nMaintainer: root <root@localhost.localdomain> # 这一步改成你的信息，参考下方我的control文件内容\nRules-Requires-Root: no # 默认不用改\nBuild-Depends: # 默认不用改\n debhelper-compat (= 13), # 默认不用改\nStandards-Version: 4.6.2 # 默认不用改\nHomepage: <insert the upstream URL, if relevant> # 改成你的官网，没有就不管\n#Vcs-Browser: https://salsa.debian.org/debian/aptdownloader # 默认不用改\n#Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git # 默认不用改\n\nPackage: aptdownloader # 根据你的文件夹生成，默认不用改\nArchitecture: any # 默认不用改\nDepends: # 默认不用改\n ${shlibs:Depends}, # 默认不用改\n ${misc:Depends}, # 默认不用改，需要前置依赖就换行写你的依赖，参考我的control文件\nDescription: <insert up to 60 chars description> # 60字简短描述\n <Insert long description, indented with spaces.> # 换行后再写详细描述\n\n # 以下是我的deb/control文件内容\nSource: aptdownloader\nSection: utils\nPriority: optional\nMaintainer: Vladimir Yang <0@hackerbs.com>\nRules-Requires-Root: no\nBuild-Depends:\n debhelper-compat (= 13),\nStandards-Version: 4.6.2\nHomepage: https://hackerbs.com\n#Vcs-Browser: https://salsa.debian.org/debian/aptdownloader\n#Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git\n\nPackage: aptdownloader\nArchitecture: any\nDepends:\n ${shlibs:Depends},\n ${misc:Depends},\n apt-rdepends (>= 1.0) # 我的前置需要该包，所以要这样写\nDescription: A tool for downloading apt packages and their dependencies.\n Use 'aptdownloader <package name>' to download the software package and its dependencies to the current directory.\n example:\n    aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n# 编辑debian/install文件（需新建），告诉dpkg我的aptdownloader可执行程序应该放到/usr/bin下\n# 格式为：包名 安装目录\n# 我的install内容：\naptdownloader usr/bin\n\n# 回到aptdownloader-1.0.0目录\ncd /root/deb/package/aptdownloader/aptdownloader-1.\n0.0/\n# 将我的可执行程序aptdownloader放到该目录\ncp ../../../python-source/bin/aptdownloader ./\n# 现在便可执行最后一步，运行dpkg-buildpackage\ndpkg-buildpackage -us -uc -nc\n# 然后退回到上层aptdownloader目录，即可看到\n/root/deb/package/aptdownloader\n├── aptdownloader-1.0.0 # 项目版本目录\n├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage生成的构建信息\n├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage生成的变更信息\n├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage构建好的deb包\n└── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage生成的其他文件的归档\n```\n\n至此，构建deb包的教程结束，请移步[如何搭建具有GPGkey验证的可信任apt源]","source":"_posts/将二进制可执行程序构建为deb包.md","raw":"---\ntitle: 将二进制可执行程序构建为deb包\ncategories: [知识库]\ncomments: true\ndate: 2023-10-17 15:42:12\nkeywords: 构建deb包\ntags:\n    - Debian\n    - Linux\n    - deb\n---\n\n构建deb包所需依赖：\n`apt install dh-make`\n\n本文使用本站aptdownloader包做为演示\n\n<!-- more -->\n\n第一步，创建项目目录，项目目录名称格式应为`包名-版本号`如`aptdownloader-1.0.0`\n\n```shell\n# 我在我的/root/目录下创建了一个deb文件夹，也就是https://github.com/1949hacker/deb的仓库\n# 使用tree列出目录结构并指定只显示3层\ntree -L 3\n# 目录结构如下\ndeb\n├── LICENSE # 这个就不用解释了，git仓库的许可\n├── package # 这个是我用来存构建deb的文件的文件夹\n│   └── aptdownloader # aptdownloader包\n│       ├── aptdownloader-1.0.0 # 按照包名-版本规则创建的文件夹\n│       ├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage -us -uc -nc生成的文件\n│       ├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage -us -uc -nc生成的文件\n│       ├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage -us -uc -nc生成的deb包\n│       └── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage -us -uc -nc生成的文件\n├── python-source # 这个是我用来存放python源码的目录\n│   ├── 64pxlogo.ico # logo的ico\n│   ├── aptdownloader # aptdownloader的源码文件夹\n│   │   └── aptdownloader.py # aptdownloader的源码\n│   ├── dist # pyinstaller生成的可运行的二进制文件\n│   │   └── aptdownloader # 二进制文件\n│   └── pip # python venv的文件夹\n│       ├── bin\n│       ├── include\n│       ├── lib\n│       ├── lib64 -> lib\n│       └── pyvenv.cfg\n├── README_en.md # 自述文件英文版\n└── README.md # 自述文件中文版\n\n# 首先，进入python-source目录，使用以下命令激活python虚拟环境\n# source后面的路径以你的python venv地址为准，your_path/bin/active\nsource pip/bin/activate\n# 使用pyinstaller命令将aptdownloader.py转换为二进制可执行程序\n# -i是指定图标，我linux都是用命令行，没试过图形化里会不会显示图标\n# -F是生成单文件，后面紧跟着的就是源代码\n# --distpath bin表示将生成的可执行程序输出到当前目录的bin文件夹中\n# --workpath temp_build和--specpath temp_spec都是指定一个临时构建目录temp_build和一个临时spec配置文件目录temp_spec\n# 使用&&链接符确保执行成功后分别rm删除两个临时目录\npyinstaller -F aptdownloader/aptdownloader.py -i 64pxlogo.ico --distpath bin --workpath temp_build --specpath temp_spec && rm temp_build -rf && rm temp_spec -rf\n\n# 最终会将生成的程序输出到当前目录的bin文件夹\ndeb/python-source\n├── 64pxlogo.ico # 本就存在的图标文件\n├── aptdownloader # 本就存在的源码文件夹\n│   └── aptdownloader.py # python源码\n├── bin # 存放可执行程序的目录\n│   └── aptdownloader # 生成的可执行程序\n└── pip # 我创建的python venv环境目录\n\n# 返回最外层目录，我的是deb目录且位于用户主目录，然后进入package目录\ncd ~/deb\ncd package\n# 新建aptdownloader目录并进入\nmkdir aptdownloader && cd aptdownloader\n\n# 按照包名+版本的规则创建目录\nmkdir aptdownloader-1.0.0\n# 进入并使用dh_make创建项目文件\ncd aptdownloader-1.0.0\ndh_make --createorig\n# 输入该命令后终端显示内容如下\n(pip) root@vladimir:~/deb/package/aptdownloader/aptdownloader-1.0.0# dh_make --createorig\n/usr/bin/dh_make:10: DeprecationWarning: 'nis' is deprecated and slated for removal in Python 3.13\n  import nis\nType of package: (single, indep, library, python)\n[s/i/l/p]? # 我要生成的是单包，所以这一步我按的是s键，按键就行，不需要Enter\nMaintainer Name     : root\nEmail-Address       : root@localhost.localdomain\nDate                : Fri, 21 Jun 2024 16:47:31 +0800\nPackage Name        : aptdownloader\nVersion             : 1.0.0\nLicense             : blank\nPackage Type        : single\nAre the details correct? [Y/n/q] # 这一步按Y确认\nCurrently there is not top level Makefile. This may require additional tuning\nDone. Please edit the files in the debian/ subdirectory now.\n\n# 现在当前目录便生成了debian文件夹\n# 编辑debian/control文件，以你的为准，我的源内容如下，参照我给的注释修改即可\nSource: aptdownloader # 来源，这个是默认生成的，不管\nSection: unknown # 默认是unknown，我改成了utils（工具）\nPriority: optional # 默认不用改\nMaintainer: root <root@localhost.localdomain> # 这一步改成你的信息，参考下方我的control文件内容\nRules-Requires-Root: no # 默认不用改\nBuild-Depends: # 默认不用改\n debhelper-compat (= 13), # 默认不用改\nStandards-Version: 4.6.2 # 默认不用改\nHomepage: <insert the upstream URL, if relevant> # 改成你的官网，没有就不管\n#Vcs-Browser: https://salsa.debian.org/debian/aptdownloader # 默认不用改\n#Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git # 默认不用改\n\nPackage: aptdownloader # 根据你的文件夹生成，默认不用改\nArchitecture: any # 默认不用改\nDepends: # 默认不用改\n ${shlibs:Depends}, # 默认不用改\n ${misc:Depends}, # 默认不用改，需要前置依赖就换行写你的依赖，参考我的control文件\nDescription: <insert up to 60 chars description> # 60字简短描述\n <Insert long description, indented with spaces.> # 换行后再写详细描述\n\n # 以下是我的deb/control文件内容\nSource: aptdownloader\nSection: utils\nPriority: optional\nMaintainer: Vladimir Yang <0@hackerbs.com>\nRules-Requires-Root: no\nBuild-Depends:\n debhelper-compat (= 13),\nStandards-Version: 4.6.2\nHomepage: https://hackerbs.com\n#Vcs-Browser: https://salsa.debian.org/debian/aptdownloader\n#Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git\n\nPackage: aptdownloader\nArchitecture: any\nDepends:\n ${shlibs:Depends},\n ${misc:Depends},\n apt-rdepends (>= 1.0) # 我的前置需要该包，所以要这样写\nDescription: A tool for downloading apt packages and their dependencies.\n Use 'aptdownloader <package name>' to download the software package and its dependencies to the current directory.\n example:\n    aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n# 编辑debian/install文件（需新建），告诉dpkg我的aptdownloader可执行程序应该放到/usr/bin下\n# 格式为：包名 安装目录\n# 我的install内容：\naptdownloader usr/bin\n\n# 回到aptdownloader-1.0.0目录\ncd /root/deb/package/aptdownloader/aptdownloader-1.\n0.0/\n# 将我的可执行程序aptdownloader放到该目录\ncp ../../../python-source/bin/aptdownloader ./\n# 现在便可执行最后一步，运行dpkg-buildpackage\ndpkg-buildpackage -us -uc -nc\n# 然后退回到上层aptdownloader目录，即可看到\n/root/deb/package/aptdownloader\n├── aptdownloader-1.0.0 # 项目版本目录\n├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage生成的构建信息\n├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage生成的变更信息\n├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage构建好的deb包\n└── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage生成的其他文件的归档\n```\n\n至此，构建deb包的教程结束，请移步[如何搭建具有GPGkey验证的可信任apt源]","slug":"将二进制可执行程序构建为deb包","published":1,"updated":"2025-09-04T06:44:07.226Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwty001d9szw2568bcey","content":"<p>构建deb包所需依赖：<br><code>apt install dh-make</code></p>\n<p>本文使用本站aptdownloader包做为演示</p>\n<span id=\"more\"></span>\n\n<p>第一步，创建项目目录，项目目录名称格式应为<code>包名-版本号</code>如<code>aptdownloader-1.0.0</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我在我的/root/目录下创建了一个deb文件夹，也就是https://github.com/1949hacker/deb的仓库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用tree列出目录结构并指定只显示3层</span></span><br><span class=\"line\">tree -L 3</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">目录结构如下</span></span><br><span class=\"line\">deb</span><br><span class=\"line\">├── LICENSE # 这个就不用解释了，git仓库的许可</span><br><span class=\"line\">├── package # 这个是我用来存构建deb的文件的文件夹</span><br><span class=\"line\">│   └── aptdownloader # aptdownloader包</span><br><span class=\"line\">│       ├── aptdownloader-1.0.0 # 按照包名-版本规则创建的文件夹</span><br><span class=\"line\">│       ├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage -us -uc -nc生成的文件</span><br><span class=\"line\">│       ├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage -us -uc -nc生成的文件</span><br><span class=\"line\">│       ├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage -us -uc -nc生成的deb包</span><br><span class=\"line\">│       └── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage -us -uc -nc生成的文件</span><br><span class=\"line\">├── python-source # 这个是我用来存放python源码的目录</span><br><span class=\"line\">│   ├── 64pxlogo.ico # logo的ico</span><br><span class=\"line\">│   ├── aptdownloader # aptdownloader的源码文件夹</span><br><span class=\"line\">│   │   └── aptdownloader.py # aptdownloader的源码</span><br><span class=\"line\">│   ├── dist # pyinstaller生成的可运行的二进制文件</span><br><span class=\"line\">│   │   └── aptdownloader # 二进制文件</span><br><span class=\"line\">│   └── pip # python venv的文件夹</span><br><span class=\"line\">│       ├── bin</span><br><span class=\"line\">│       ├── include</span><br><span class=\"line\">│       ├── lib</span><br><span class=\"line\">│       ├── lib64 -&gt; lib</span><br><span class=\"line\">│       └── pyvenv.cfg</span><br><span class=\"line\">├── README_en.md # 自述文件英文版</span><br><span class=\"line\">└── README.md # 自述文件中文版</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">首先，进入python-source目录，使用以下命令激活python虚拟环境</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">source</span>后面的路径以你的python venv地址为准，your_path/bin/active</span></span><br><span class=\"line\">source pip/bin/activate</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用pyinstaller命令将aptdownloader.py转换为二进制可执行程序</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-i是指定图标，我linux都是用命令行，没试过图形化里会不会显示图标</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-F是生成单文件，后面紧跟着的就是源代码</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--distpath bin表示将生成的可执行程序输出到当前目录的bin文件夹中</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--workpath temp_build和--specpath temp_spec都是指定一个临时构建目录temp_build和一个临时spec配置文件目录temp_spec</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用&amp;&amp;链接符确保执行成功后分别<span class=\"built_in\">rm</span>删除两个临时目录</span></span><br><span class=\"line\">pyinstaller -F aptdownloader/aptdownloader.py -i 64pxlogo.ico --distpath bin --workpath temp_build --specpath temp_spec &amp;&amp; rm temp_build -rf &amp;&amp; rm temp_spec -rf</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">最终会将生成的程序输出到当前目录的bin文件夹</span></span><br><span class=\"line\">deb/python-source</span><br><span class=\"line\">├── 64pxlogo.ico # 本就存在的图标文件</span><br><span class=\"line\">├── aptdownloader # 本就存在的源码文件夹</span><br><span class=\"line\">│   └── aptdownloader.py # python源码</span><br><span class=\"line\">├── bin # 存放可执行程序的目录</span><br><span class=\"line\">│   └── aptdownloader # 生成的可执行程序</span><br><span class=\"line\">└── pip # 我创建的python venv环境目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">返回最外层目录，我的是deb目录且位于用户主目录，然后进入package目录</span></span><br><span class=\"line\">cd ~/deb</span><br><span class=\"line\">cd package</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">新建aptdownloader目录并进入</span></span><br><span class=\"line\">mkdir aptdownloader &amp;&amp; cd aptdownloader</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">按照包名+版本的规则创建目录</span></span><br><span class=\"line\">mkdir aptdownloader-1.0.0</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入并使用dh_make创建项目文件</span></span><br><span class=\"line\">cd aptdownloader-1.0.0</span><br><span class=\"line\">dh_make --createorig</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输入该命令后终端显示内容如下</span></span><br><span class=\"line\">(pip) root@vladimir:~/deb/package/aptdownloader/aptdownloader-1.0.0# dh_make --createorig</span><br><span class=\"line\">/usr/bin/dh_make:10: DeprecationWarning: &#x27;nis&#x27; is deprecated and slated for removal in Python 3.13</span><br><span class=\"line\">  import nis</span><br><span class=\"line\">Type of package: (single, indep, library, python)</span><br><span class=\"line\">[s/i/l/p]? # 我要生成的是单包，所以这一步我按的是s键，按键就行，不需要Enter</span><br><span class=\"line\">Maintainer Name     : root</span><br><span class=\"line\">Email-Address       : root@localhost.localdomain</span><br><span class=\"line\">Date                : Fri, 21 Jun 2024 16:47:31 +0800</span><br><span class=\"line\">Package Name        : aptdownloader</span><br><span class=\"line\">Version             : 1.0.0</span><br><span class=\"line\">License             : blank</span><br><span class=\"line\">Package Type        : single</span><br><span class=\"line\">Are the details correct? [Y/n/q] # 这一步按Y确认</span><br><span class=\"line\">Currently there is not top level Makefile. This may require additional tuning</span><br><span class=\"line\">Done. Please edit the files in the debian/ subdirectory now.</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">现在当前目录便生成了debian文件夹</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑debian/control文件，以你的为准，我的源内容如下，参照我给的注释修改即可</span></span><br><span class=\"line\">Source: aptdownloader # 来源，这个是默认生成的，不管</span><br><span class=\"line\">Section: unknown # 默认是unknown，我改成了utils（工具）</span><br><span class=\"line\">Priority: optional # 默认不用改</span><br><span class=\"line\">Maintainer: root &lt;root@localhost.localdomain&gt; # 这一步改成你的信息，参考下方我的control文件内容</span><br><span class=\"line\">Rules-Requires-Root: no # 默认不用改</span><br><span class=\"line\">Build-Depends: # 默认不用改</span><br><span class=\"line\"> debhelper-compat (= 13), # 默认不用改</span><br><span class=\"line\">Standards-Version: 4.6.2 # 默认不用改</span><br><span class=\"line\">Homepage: &lt;insert the upstream URL, if relevant&gt; # 改成你的官网，没有就不管</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Browser: https://salsa.debian.org/debian/aptdownloader <span class=\"comment\"># 默认不用改</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git <span class=\"comment\"># 默认不用改</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Package: aptdownloader # 根据你的文件夹生成，默认不用改</span><br><span class=\"line\">Architecture: any # 默认不用改</span><br><span class=\"line\">Depends: # 默认不用改</span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;shlibs:Depends&#125;, <span class=\"comment\"># 默认不用改</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;misc:Depends&#125;, <span class=\"comment\"># 默认不用改，需要前置依赖就换行写你的依赖，参考我的control文件</span></span></span><br><span class=\"line\">Description: &lt;insert up to 60 chars description&gt; # 60字简短描述</span><br><span class=\"line\"> &lt;Insert long description, indented with spaces.&gt; # 换行后再写详细描述</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> # </span><span class=\"language-bash\">以下是我的deb/control文件内容</span></span><br><span class=\"line\">Source: aptdownloader</span><br><span class=\"line\">Section: utils</span><br><span class=\"line\">Priority: optional</span><br><span class=\"line\">Maintainer: Vladimir Yang &lt;0@hackerbs.com&gt;</span><br><span class=\"line\">Rules-Requires-Root: no</span><br><span class=\"line\">Build-Depends:</span><br><span class=\"line\"> debhelper-compat (= 13),</span><br><span class=\"line\">Standards-Version: 4.6.2</span><br><span class=\"line\">Homepage: https://hackerbs.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Browser: https://salsa.debian.org/debian/aptdownloader</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git</span></span><br><span class=\"line\"></span><br><span class=\"line\">Package: aptdownloader</span><br><span class=\"line\">Architecture: any</span><br><span class=\"line\">Depends:</span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;shlibs:Depends&#125;,</span></span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;misc:Depends&#125;,</span></span><br><span class=\"line\"> apt-rdepends (&gt;= 1.0) # 我的前置需要该包，所以要这样写</span><br><span class=\"line\">Description: A tool for downloading apt packages and their dependencies.</span><br><span class=\"line\"> Use &#x27;aptdownloader &lt;package name&gt;&#x27; to download the software package and its dependencies to the current directory.</span><br><span class=\"line\"> example:</span><br><span class=\"line\">    aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑debian/install文件（需新建），告诉dpkg我的aptdownloader可执行程序应该放到/usr/bin下</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">格式为：包名 安装目录</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的install内容：</span></span><br><span class=\"line\">aptdownloader usr/bin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">回到aptdownloader-1.0.0目录</span></span><br><span class=\"line\">cd /root/deb/package/aptdownloader/aptdownloader-1.</span><br><span class=\"line\">0.0/</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将我的可执行程序aptdownloader放到该目录</span></span><br><span class=\"line\">cp ../../../python-source/bin/aptdownloader ./</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">现在便可执行最后一步，运行dpkg-buildpackage</span></span><br><span class=\"line\">dpkg-buildpackage -us -uc -nc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">然后退回到上层aptdownloader目录，即可看到</span></span><br><span class=\"line\">/root/deb/package/aptdownloader</span><br><span class=\"line\">├── aptdownloader-1.0.0 # 项目版本目录</span><br><span class=\"line\">├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage生成的构建信息</span><br><span class=\"line\">├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage生成的变更信息</span><br><span class=\"line\">├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage构建好的deb包</span><br><span class=\"line\">└── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage生成的其他文件的归档</span><br></pre></td></tr></table></figure>\n\n<p>至此，构建deb包的教程结束，请移步[如何搭建具有GPGkey验证的可信任apt源]</p>\n","site":{"data":{}},"length":1371,"excerpt":"<p>构建deb包所需依赖：<br><code>apt install dh-make</code></p>\n<p>本文使用本站aptdownloader包做为演示</p>","more":"<p>第一步，创建项目目录，项目目录名称格式应为<code>包名-版本号</code>如<code>aptdownloader-1.0.0</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我在我的/root/目录下创建了一个deb文件夹，也就是https://github.com/1949hacker/deb的仓库</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用tree列出目录结构并指定只显示3层</span></span><br><span class=\"line\">tree -L 3</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">目录结构如下</span></span><br><span class=\"line\">deb</span><br><span class=\"line\">├── LICENSE # 这个就不用解释了，git仓库的许可</span><br><span class=\"line\">├── package # 这个是我用来存构建deb的文件的文件夹</span><br><span class=\"line\">│   └── aptdownloader # aptdownloader包</span><br><span class=\"line\">│       ├── aptdownloader-1.0.0 # 按照包名-版本规则创建的文件夹</span><br><span class=\"line\">│       ├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage -us -uc -nc生成的文件</span><br><span class=\"line\">│       ├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage -us -uc -nc生成的文件</span><br><span class=\"line\">│       ├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage -us -uc -nc生成的deb包</span><br><span class=\"line\">│       └── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage -us -uc -nc生成的文件</span><br><span class=\"line\">├── python-source # 这个是我用来存放python源码的目录</span><br><span class=\"line\">│   ├── 64pxlogo.ico # logo的ico</span><br><span class=\"line\">│   ├── aptdownloader # aptdownloader的源码文件夹</span><br><span class=\"line\">│   │   └── aptdownloader.py # aptdownloader的源码</span><br><span class=\"line\">│   ├── dist # pyinstaller生成的可运行的二进制文件</span><br><span class=\"line\">│   │   └── aptdownloader # 二进制文件</span><br><span class=\"line\">│   └── pip # python venv的文件夹</span><br><span class=\"line\">│       ├── bin</span><br><span class=\"line\">│       ├── include</span><br><span class=\"line\">│       ├── lib</span><br><span class=\"line\">│       ├── lib64 -&gt; lib</span><br><span class=\"line\">│       └── pyvenv.cfg</span><br><span class=\"line\">├── README_en.md # 自述文件英文版</span><br><span class=\"line\">└── README.md # 自述文件中文版</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">首先，进入python-source目录，使用以下命令激活python虚拟环境</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">source</span>后面的路径以你的python venv地址为准，your_path/bin/active</span></span><br><span class=\"line\">source pip/bin/activate</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用pyinstaller命令将aptdownloader.py转换为二进制可执行程序</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-i是指定图标，我linux都是用命令行，没试过图形化里会不会显示图标</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">-F是生成单文件，后面紧跟着的就是源代码</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--distpath bin表示将生成的可执行程序输出到当前目录的bin文件夹中</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">--workpath temp_build和--specpath temp_spec都是指定一个临时构建目录temp_build和一个临时spec配置文件目录temp_spec</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用&amp;&amp;链接符确保执行成功后分别<span class=\"built_in\">rm</span>删除两个临时目录</span></span><br><span class=\"line\">pyinstaller -F aptdownloader/aptdownloader.py -i 64pxlogo.ico --distpath bin --workpath temp_build --specpath temp_spec &amp;&amp; rm temp_build -rf &amp;&amp; rm temp_spec -rf</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">最终会将生成的程序输出到当前目录的bin文件夹</span></span><br><span class=\"line\">deb/python-source</span><br><span class=\"line\">├── 64pxlogo.ico # 本就存在的图标文件</span><br><span class=\"line\">├── aptdownloader # 本就存在的源码文件夹</span><br><span class=\"line\">│   └── aptdownloader.py # python源码</span><br><span class=\"line\">├── bin # 存放可执行程序的目录</span><br><span class=\"line\">│   └── aptdownloader # 生成的可执行程序</span><br><span class=\"line\">└── pip # 我创建的python venv环境目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">返回最外层目录，我的是deb目录且位于用户主目录，然后进入package目录</span></span><br><span class=\"line\">cd ~/deb</span><br><span class=\"line\">cd package</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">新建aptdownloader目录并进入</span></span><br><span class=\"line\">mkdir aptdownloader &amp;&amp; cd aptdownloader</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">按照包名+版本的规则创建目录</span></span><br><span class=\"line\">mkdir aptdownloader-1.0.0</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入并使用dh_make创建项目文件</span></span><br><span class=\"line\">cd aptdownloader-1.0.0</span><br><span class=\"line\">dh_make --createorig</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输入该命令后终端显示内容如下</span></span><br><span class=\"line\">(pip) root@vladimir:~/deb/package/aptdownloader/aptdownloader-1.0.0# dh_make --createorig</span><br><span class=\"line\">/usr/bin/dh_make:10: DeprecationWarning: &#x27;nis&#x27; is deprecated and slated for removal in Python 3.13</span><br><span class=\"line\">  import nis</span><br><span class=\"line\">Type of package: (single, indep, library, python)</span><br><span class=\"line\">[s/i/l/p]? # 我要生成的是单包，所以这一步我按的是s键，按键就行，不需要Enter</span><br><span class=\"line\">Maintainer Name     : root</span><br><span class=\"line\">Email-Address       : root@localhost.localdomain</span><br><span class=\"line\">Date                : Fri, 21 Jun 2024 16:47:31 +0800</span><br><span class=\"line\">Package Name        : aptdownloader</span><br><span class=\"line\">Version             : 1.0.0</span><br><span class=\"line\">License             : blank</span><br><span class=\"line\">Package Type        : single</span><br><span class=\"line\">Are the details correct? [Y/n/q] # 这一步按Y确认</span><br><span class=\"line\">Currently there is not top level Makefile. This may require additional tuning</span><br><span class=\"line\">Done. Please edit the files in the debian/ subdirectory now.</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">现在当前目录便生成了debian文件夹</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑debian/control文件，以你的为准，我的源内容如下，参照我给的注释修改即可</span></span><br><span class=\"line\">Source: aptdownloader # 来源，这个是默认生成的，不管</span><br><span class=\"line\">Section: unknown # 默认是unknown，我改成了utils（工具）</span><br><span class=\"line\">Priority: optional # 默认不用改</span><br><span class=\"line\">Maintainer: root &lt;root@localhost.localdomain&gt; # 这一步改成你的信息，参考下方我的control文件内容</span><br><span class=\"line\">Rules-Requires-Root: no # 默认不用改</span><br><span class=\"line\">Build-Depends: # 默认不用改</span><br><span class=\"line\"> debhelper-compat (= 13), # 默认不用改</span><br><span class=\"line\">Standards-Version: 4.6.2 # 默认不用改</span><br><span class=\"line\">Homepage: &lt;insert the upstream URL, if relevant&gt; # 改成你的官网，没有就不管</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Browser: https://salsa.debian.org/debian/aptdownloader <span class=\"comment\"># 默认不用改</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git <span class=\"comment\"># 默认不用改</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Package: aptdownloader # 根据你的文件夹生成，默认不用改</span><br><span class=\"line\">Architecture: any # 默认不用改</span><br><span class=\"line\">Depends: # 默认不用改</span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;shlibs:Depends&#125;, <span class=\"comment\"># 默认不用改</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;misc:Depends&#125;, <span class=\"comment\"># 默认不用改，需要前置依赖就换行写你的依赖，参考我的control文件</span></span></span><br><span class=\"line\">Description: &lt;insert up to 60 chars description&gt; # 60字简短描述</span><br><span class=\"line\"> &lt;Insert long description, indented with spaces.&gt; # 换行后再写详细描述</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> # </span><span class=\"language-bash\">以下是我的deb/control文件内容</span></span><br><span class=\"line\">Source: aptdownloader</span><br><span class=\"line\">Section: utils</span><br><span class=\"line\">Priority: optional</span><br><span class=\"line\">Maintainer: Vladimir Yang &lt;0@hackerbs.com&gt;</span><br><span class=\"line\">Rules-Requires-Root: no</span><br><span class=\"line\">Build-Depends:</span><br><span class=\"line\"> debhelper-compat (= 13),</span><br><span class=\"line\">Standards-Version: 4.6.2</span><br><span class=\"line\">Homepage: https://hackerbs.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Browser: https://salsa.debian.org/debian/aptdownloader</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">Vcs-Git: https://salsa.debian.org/debian/aptdownloader.git</span></span><br><span class=\"line\"></span><br><span class=\"line\">Package: aptdownloader</span><br><span class=\"line\">Architecture: any</span><br><span class=\"line\">Depends:</span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;shlibs:Depends&#125;,</span></span><br><span class=\"line\"><span class=\"meta prompt_\"> $</span><span class=\"language-bash\">&#123;misc:Depends&#125;,</span></span><br><span class=\"line\"> apt-rdepends (&gt;= 1.0) # 我的前置需要该包，所以要这样写</span><br><span class=\"line\">Description: A tool for downloading apt packages and their dependencies.</span><br><span class=\"line\"> Use &#x27;aptdownloader &lt;package name&gt;&#x27; to download the software package and its dependencies to the current directory.</span><br><span class=\"line\"> example:</span><br><span class=\"line\">    aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑debian/install文件（需新建），告诉dpkg我的aptdownloader可执行程序应该放到/usr/bin下</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">格式为：包名 安装目录</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我的install内容：</span></span><br><span class=\"line\">aptdownloader usr/bin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">回到aptdownloader-1.0.0目录</span></span><br><span class=\"line\">cd /root/deb/package/aptdownloader/aptdownloader-1.</span><br><span class=\"line\">0.0/</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将我的可执行程序aptdownloader放到该目录</span></span><br><span class=\"line\">cp ../../../python-source/bin/aptdownloader ./</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">现在便可执行最后一步，运行dpkg-buildpackage</span></span><br><span class=\"line\">dpkg-buildpackage -us -uc -nc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">然后退回到上层aptdownloader目录，即可看到</span></span><br><span class=\"line\">/root/deb/package/aptdownloader</span><br><span class=\"line\">├── aptdownloader-1.0.0 # 项目版本目录</span><br><span class=\"line\">├── aptdownloader_1.0.0-1_amd64.buildinfo # dpkg-buildpackage生成的构建信息</span><br><span class=\"line\">├── aptdownloader_1.0.0-1_amd64.changes # dpkg-buildpackage生成的变更信息</span><br><span class=\"line\">├── aptdownloader_1.0.0-1_amd64.deb # dpkg-buildpackage构建好的deb包</span><br><span class=\"line\">└── aptdownloader_1.0.0.orig.tar.xz # dpkg-buildpackage生成的其他文件的归档</span><br></pre></td></tr></table></figure>\n\n<p>至此，构建deb包的教程结束，请移步[如何搭建具有GPGkey验证的可信任apt源]</p>"},{"title":"异地组网+Nginx反代 | 计算资源本地化","comments":1,"date":"2025-02-17T08:59:52.000Z","keywords":["wireguard","局域网","云计算","计算资源本地化","异地组网","Nginx","反向代理"],"_content":"\n> 本次部署的目的是利用本地高性能的计算资源和云服务器畅通无阻的公网，实现无公网环境也可正常部署业务。\n\n## 本文所用到的技术如下\n\n|名称|作用|软件|\n|---|---|---|\n|单向异地组网|将云服务器和本地服务器组成局域网，因本地服务器没有公网，所以由云服务器建立UDP连接实现组网|WireGuard|\n|反代|将对云服务器发起的访问根据配置的业务转发到本地服务器进行处理|Nginx|\n|网络转发|配合wireguard实现对网络流量的路由和转发，确保组网的通畅|iptables|\n\n<!-- more -->\n\n## 单向异地组网\n\n> 2025.2.18补充：组网成功后大概十几分钟，被运营商墙了，太狗了，因为wireguard走的是UDP协议，被运营商检测到了。目前有两个思路，找运营商加个公网IP或者想其他办法组网\n> 2025.2.18 10:55记录思路：使用udp2raw将UDP流量封装到TCP流量中，并伪装成HTTPS\n> 2025.2.18 10:57补充，尝试udp2raw能打通后先用着，如果再次被封则换为xtls-rprx-vision透明代理UDP流量，实现最强HTTPS伪装\n\n| 特性 | `udp2raw` | `xtls-rprx-vision` |\n|------|----------|----------------|\n| **工作原理** | 把 UDP 伪装成 TCP 或 ICMP，进行 NAT 穿透 | 通过 Xray Vision 协议将流量伪装成 HTTPS/TLS |\n| **支持协议** | 任何 UDP 流量（WireGuard、IPSec、OpenVPN等） | 任何 TCP/UDP 流量（支持 UDP over TCP） |\n| **流量伪装** | 可伪装为 TCP（HTTPS、SSH）或 ICMP | 伪装成合法 HTTPS 流量 |\n| **加密方式** | XOR、AES（轻量级加密，防止 DPI 识别） | XTLS（高级 TLS 伪装，难以被识别） |\n| **端口** | 可伪装成 443（HTTPS）等，但仍是伪 TCP | 直接监听 443 端口，真实 HTTPS 伪装 |\n| **数据包特征** | 模拟 TCP，但仍然是 UDP 数据包封装 | 真实 HTTPS 流量，运营商难以检测 |\n| **防 DPI** | 基本防御，部分 DPI 仍能检测出伪 TCP | 最高级别防御，难以被识别 |\n| **延迟** | 低，基本无影响 | 略高，取决于 TLS 处理开销 |\n| **适用场景** | 适用于 UDP 被封但 TCP 可用的环境 | 适用于 DPI 严格的环境，如中国大陆或企业网络 |\n| **是否需要证书** | 不需要 | 需要 TLS 证书（Let's Encrypt 等） |\n| **稳定性** | 高，几乎无性能损耗 | 高，但 TLS 可能增加 CPU 负担 |\n| **适合长期使用** | 可以，但可能被进一步分析 | 更适合长期使用，难以封锁 |\n\n### 服务器部分\n\n```shell\n# 安装wireguard\napt install wireguard -y\n\n# 生成私钥公钥到/etc/wireguard/目录下\nwg genkey | tee /etc/wireguard/server_private.key | wg pubkey | tee /etc/wireguard/server_public.key\n# 查看私钥公钥，稍后需要写入到配置文件中\ncat /etc/wireguard/server_private.key\ncat /etc/wireguard/server_public.key\n```\n\n在`/etc/wireguard/`下创建一个配置文件，例如`wg0.conf`，按如下所述写入配置：\n\n```conf\n[Interface]\nAddress = 10.0.0.1/24 # 服务器的局域网IP，/24是前缀，对应255.255.255.0\nListenPort = 26666 # 端口协议是UDP，端口可以自定义\nPrivateKey = 云服务器私钥 # 刚刚生成的服务器私钥\nDNS=8.8.8.8\nMTU=1420\n\n# 这部分是配置的iptables的转发，其中eth0替换为云服务器公网的网卡名称\n# 原理：\n# 允许wg0的流量通过iptables转发到eth0\n# iptables -A FORWARD -i wg0 -j ACCEPT\n# 将eth0上的流量进行源地址伪装，让对方以为来自局域网的流量是从公网IP发出的\n# iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n\n# 端口启动时执行，其中-A是添加\nPostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n# 端口关闭时执行，其中-D是删除\nPostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\n\n[Peer]\nPublicKey = 内网服务器公钥 # 稍后在内网服务器生成的公钥\n# 允许内网服务器连接，IP是10.0.0.2，前缀32对应255.255.255.255\n# 作用是仅允许这一个IP连接。可以根据需要自行组合IP段和前缀\nAllowedIPs = 10.0.0.2/32\n```\n\n```shell\n# 编辑完配置文件后启动服务\n# 其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称\nsudo systemctl enable wg-quick@wg0\nsudo systemctl start wg-quick@wg0\n```\n\n### 内网服务器部分\n\n```shell\n# 与服务器一致，生成公钥私钥，只是名称是client开头\nwg genkey | tee /etc/wireguard/client_private.key | wg pubkey | tee /etc/wireguard/client_public.key\n# 查看公钥私钥，准备写入配置文件\ncat /etc/wireguard/client_private.key\ncat /etc/wireguard/client_public.key\n\n```\n\n在`/etc/wireguard/`下创建一个配置文件，例如`wg0.conf`，按如下所述写入配置：\n\n```conf\n[Interface]\nAddress = 10.0.0.2/24 # 10.0.0.2则是内网服务器在组网内的IP地址\nPrivateKey = 内网服务器私钥\n\n[Peer]\nPublicKey = 云服务器公钥\nAllowedIPs = 10.0.0.1/32 # 前缀32限制只允许云服务器IP连入\nEndpoint = 云服务器IP:26666 # 指向云服务器IP和端口\nPersistentKeepalive = 25\n```\n\n```shell\n# 编辑完配置文件后启动服务\n# 其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称\nsudo systemctl enable wg-quick@wg0\nsudo systemctl start wg-quick@wg0\n```\n\n### 共同配置部分\n\n在内网和云服务器均开启转发\n\n```shell\necho \"net.ipv4.ip_forward=1\" | sudo tee -a /etc/sysctl.conf\nsysctl -p\n```\n\n## 反向代理\n","source":"_posts/异地组网加Nginx反代实现计算资源本地化.md","raw":"---\ntitle: 异地组网+Nginx反代 | 计算资源本地化\ncomments: true\ncategories: [知识库]\ndate: 2025-02-17 16:59:52\nkeywords:\n\t- wireguard\n\t- 局域网\n\t- 云计算\n\t- 计算资源本地化\n\t- 异地组网\n\t- Nginx\n\t- 反向代理\ntags:\n\t- wireguard\n\t- 局域网\n\t- 云计算\n\t- 计算资源本地化\n\t- 异地组网\n\t- Nginx\n\t- 反向代理\n---\n\n> 本次部署的目的是利用本地高性能的计算资源和云服务器畅通无阻的公网，实现无公网环境也可正常部署业务。\n\n## 本文所用到的技术如下\n\n|名称|作用|软件|\n|---|---|---|\n|单向异地组网|将云服务器和本地服务器组成局域网，因本地服务器没有公网，所以由云服务器建立UDP连接实现组网|WireGuard|\n|反代|将对云服务器发起的访问根据配置的业务转发到本地服务器进行处理|Nginx|\n|网络转发|配合wireguard实现对网络流量的路由和转发，确保组网的通畅|iptables|\n\n<!-- more -->\n\n## 单向异地组网\n\n> 2025.2.18补充：组网成功后大概十几分钟，被运营商墙了，太狗了，因为wireguard走的是UDP协议，被运营商检测到了。目前有两个思路，找运营商加个公网IP或者想其他办法组网\n> 2025.2.18 10:55记录思路：使用udp2raw将UDP流量封装到TCP流量中，并伪装成HTTPS\n> 2025.2.18 10:57补充，尝试udp2raw能打通后先用着，如果再次被封则换为xtls-rprx-vision透明代理UDP流量，实现最强HTTPS伪装\n\n| 特性 | `udp2raw` | `xtls-rprx-vision` |\n|------|----------|----------------|\n| **工作原理** | 把 UDP 伪装成 TCP 或 ICMP，进行 NAT 穿透 | 通过 Xray Vision 协议将流量伪装成 HTTPS/TLS |\n| **支持协议** | 任何 UDP 流量（WireGuard、IPSec、OpenVPN等） | 任何 TCP/UDP 流量（支持 UDP over TCP） |\n| **流量伪装** | 可伪装为 TCP（HTTPS、SSH）或 ICMP | 伪装成合法 HTTPS 流量 |\n| **加密方式** | XOR、AES（轻量级加密，防止 DPI 识别） | XTLS（高级 TLS 伪装，难以被识别） |\n| **端口** | 可伪装成 443（HTTPS）等，但仍是伪 TCP | 直接监听 443 端口，真实 HTTPS 伪装 |\n| **数据包特征** | 模拟 TCP，但仍然是 UDP 数据包封装 | 真实 HTTPS 流量，运营商难以检测 |\n| **防 DPI** | 基本防御，部分 DPI 仍能检测出伪 TCP | 最高级别防御，难以被识别 |\n| **延迟** | 低，基本无影响 | 略高，取决于 TLS 处理开销 |\n| **适用场景** | 适用于 UDP 被封但 TCP 可用的环境 | 适用于 DPI 严格的环境，如中国大陆或企业网络 |\n| **是否需要证书** | 不需要 | 需要 TLS 证书（Let's Encrypt 等） |\n| **稳定性** | 高，几乎无性能损耗 | 高，但 TLS 可能增加 CPU 负担 |\n| **适合长期使用** | 可以，但可能被进一步分析 | 更适合长期使用，难以封锁 |\n\n### 服务器部分\n\n```shell\n# 安装wireguard\napt install wireguard -y\n\n# 生成私钥公钥到/etc/wireguard/目录下\nwg genkey | tee /etc/wireguard/server_private.key | wg pubkey | tee /etc/wireguard/server_public.key\n# 查看私钥公钥，稍后需要写入到配置文件中\ncat /etc/wireguard/server_private.key\ncat /etc/wireguard/server_public.key\n```\n\n在`/etc/wireguard/`下创建一个配置文件，例如`wg0.conf`，按如下所述写入配置：\n\n```conf\n[Interface]\nAddress = 10.0.0.1/24 # 服务器的局域网IP，/24是前缀，对应255.255.255.0\nListenPort = 26666 # 端口协议是UDP，端口可以自定义\nPrivateKey = 云服务器私钥 # 刚刚生成的服务器私钥\nDNS=8.8.8.8\nMTU=1420\n\n# 这部分是配置的iptables的转发，其中eth0替换为云服务器公网的网卡名称\n# 原理：\n# 允许wg0的流量通过iptables转发到eth0\n# iptables -A FORWARD -i wg0 -j ACCEPT\n# 将eth0上的流量进行源地址伪装，让对方以为来自局域网的流量是从公网IP发出的\n# iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n\n# 端口启动时执行，其中-A是添加\nPostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n# 端口关闭时执行，其中-D是删除\nPostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\n\n[Peer]\nPublicKey = 内网服务器公钥 # 稍后在内网服务器生成的公钥\n# 允许内网服务器连接，IP是10.0.0.2，前缀32对应255.255.255.255\n# 作用是仅允许这一个IP连接。可以根据需要自行组合IP段和前缀\nAllowedIPs = 10.0.0.2/32\n```\n\n```shell\n# 编辑完配置文件后启动服务\n# 其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称\nsudo systemctl enable wg-quick@wg0\nsudo systemctl start wg-quick@wg0\n```\n\n### 内网服务器部分\n\n```shell\n# 与服务器一致，生成公钥私钥，只是名称是client开头\nwg genkey | tee /etc/wireguard/client_private.key | wg pubkey | tee /etc/wireguard/client_public.key\n# 查看公钥私钥，准备写入配置文件\ncat /etc/wireguard/client_private.key\ncat /etc/wireguard/client_public.key\n\n```\n\n在`/etc/wireguard/`下创建一个配置文件，例如`wg0.conf`，按如下所述写入配置：\n\n```conf\n[Interface]\nAddress = 10.0.0.2/24 # 10.0.0.2则是内网服务器在组网内的IP地址\nPrivateKey = 内网服务器私钥\n\n[Peer]\nPublicKey = 云服务器公钥\nAllowedIPs = 10.0.0.1/32 # 前缀32限制只允许云服务器IP连入\nEndpoint = 云服务器IP:26666 # 指向云服务器IP和端口\nPersistentKeepalive = 25\n```\n\n```shell\n# 编辑完配置文件后启动服务\n# 其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称\nsudo systemctl enable wg-quick@wg0\nsudo systemctl start wg-quick@wg0\n```\n\n### 共同配置部分\n\n在内网和云服务器均开启转发\n\n```shell\necho \"net.ipv4.ip_forward=1\" | sudo tee -a /etc/sysctl.conf\nsysctl -p\n```\n\n## 反向代理\n","slug":"异地组网加Nginx反代实现计算资源本地化","published":1,"updated":"2025-09-04T06:44:07.226Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwty001g9szwflutcep2","content":"<blockquote>\n<p>本次部署的目的是利用本地高性能的计算资源和云服务器畅通无阻的公网，实现无公网环境也可正常部署业务。</p>\n</blockquote>\n<h2 id=\"本文所用到的技术如下\"><a href=\"#本文所用到的技术如下\" class=\"headerlink\" title=\"本文所用到的技术如下\"></a>本文所用到的技术如下</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>软件</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单向异地组网</td>\n<td>将云服务器和本地服务器组成局域网，因本地服务器没有公网，所以由云服务器建立UDP连接实现组网</td>\n<td>WireGuard</td>\n</tr>\n<tr>\n<td>反代</td>\n<td>将对云服务器发起的访问根据配置的业务转发到本地服务器进行处理</td>\n<td>Nginx</td>\n</tr>\n<tr>\n<td>网络转发</td>\n<td>配合wireguard实现对网络流量的路由和转发，确保组网的通畅</td>\n<td>iptables</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<h2 id=\"单向异地组网\"><a href=\"#单向异地组网\" class=\"headerlink\" title=\"单向异地组网\"></a>单向异地组网</h2><blockquote>\n<p>2025.2.18补充：组网成功后大概十几分钟，被运营商墙了，太狗了，因为wireguard走的是UDP协议，被运营商检测到了。目前有两个思路，找运营商加个公网IP或者想其他办法组网<br>2025.2.18 10:55记录思路：使用udp2raw将UDP流量封装到TCP流量中，并伪装成HTTPS<br>2025.2.18 10:57补充，尝试udp2raw能打通后先用着，如果再次被封则换为xtls-rprx-vision透明代理UDP流量，实现最强HTTPS伪装</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th><code>udp2raw</code></th>\n<th><code>xtls-rprx-vision</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>工作原理</strong></td>\n<td>把 UDP 伪装成 TCP 或 ICMP，进行 NAT 穿透</td>\n<td>通过 Xray Vision 协议将流量伪装成 HTTPS&#x2F;TLS</td>\n</tr>\n<tr>\n<td><strong>支持协议</strong></td>\n<td>任何 UDP 流量（WireGuard、IPSec、OpenVPN等）</td>\n<td>任何 TCP&#x2F;UDP 流量（支持 UDP over TCP）</td>\n</tr>\n<tr>\n<td><strong>流量伪装</strong></td>\n<td>可伪装为 TCP（HTTPS、SSH）或 ICMP</td>\n<td>伪装成合法 HTTPS 流量</td>\n</tr>\n<tr>\n<td><strong>加密方式</strong></td>\n<td>XOR、AES（轻量级加密，防止 DPI 识别）</td>\n<td>XTLS（高级 TLS 伪装，难以被识别）</td>\n</tr>\n<tr>\n<td><strong>端口</strong></td>\n<td>可伪装成 443（HTTPS）等，但仍是伪 TCP</td>\n<td>直接监听 443 端口，真实 HTTPS 伪装</td>\n</tr>\n<tr>\n<td><strong>数据包特征</strong></td>\n<td>模拟 TCP，但仍然是 UDP 数据包封装</td>\n<td>真实 HTTPS 流量，运营商难以检测</td>\n</tr>\n<tr>\n<td><strong>防 DPI</strong></td>\n<td>基本防御，部分 DPI 仍能检测出伪 TCP</td>\n<td>最高级别防御，难以被识别</td>\n</tr>\n<tr>\n<td><strong>延迟</strong></td>\n<td>低，基本无影响</td>\n<td>略高，取决于 TLS 处理开销</td>\n</tr>\n<tr>\n<td><strong>适用场景</strong></td>\n<td>适用于 UDP 被封但 TCP 可用的环境</td>\n<td>适用于 DPI 严格的环境，如中国大陆或企业网络</td>\n</tr>\n<tr>\n<td><strong>是否需要证书</strong></td>\n<td>不需要</td>\n<td>需要 TLS 证书（Let’s Encrypt 等）</td>\n</tr>\n<tr>\n<td><strong>稳定性</strong></td>\n<td>高，几乎无性能损耗</td>\n<td>高，但 TLS 可能增加 CPU 负担</td>\n</tr>\n<tr>\n<td><strong>适合长期使用</strong></td>\n<td>可以，但可能被进一步分析</td>\n<td>更适合长期使用，难以封锁</td>\n</tr>\n</tbody></table>\n<h3 id=\"服务器部分\"><a href=\"#服务器部分\" class=\"headerlink\" title=\"服务器部分\"></a>服务器部分</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装wireguard</span></span><br><span class=\"line\">apt install wireguard -y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">生成私钥公钥到/etc/wireguard/目录下</span></span><br><span class=\"line\">wg genkey | tee /etc/wireguard/server_private.key | wg pubkey | tee /etc/wireguard/server_public.key</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看私钥公钥，稍后需要写入到配置文件中</span></span><br><span class=\"line\">cat /etc/wireguard/server_private.key</span><br><span class=\"line\">cat /etc/wireguard/server_public.key</span><br></pre></td></tr></table></figure>\n\n<p>在<code>/etc/wireguard/</code>下创建一个配置文件，例如<code>wg0.conf</code>，按如下所述写入配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Interface]</span><br><span class=\"line\">Address = 10.0.0.1/24 # 服务器的局域网IP，/24是前缀，对应255.255.255.0</span><br><span class=\"line\">ListenPort = 26666 # 端口协议是UDP，端口可以自定义</span><br><span class=\"line\">PrivateKey = 云服务器私钥 # 刚刚生成的服务器私钥</span><br><span class=\"line\">DNS=8.8.8.8</span><br><span class=\"line\">MTU=1420</span><br><span class=\"line\"></span><br><span class=\"line\"># 这部分是配置的iptables的转发，其中eth0替换为云服务器公网的网卡名称</span><br><span class=\"line\"># 原理：</span><br><span class=\"line\"># 允许wg0的流量通过iptables转发到eth0</span><br><span class=\"line\"># iptables -A FORWARD -i wg0 -j ACCEPT</span><br><span class=\"line\"># 将eth0上的流量进行源地址伪装，让对方以为来自局域网的流量是从公网IP发出的</span><br><span class=\"line\"># iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class=\"line\"></span><br><span class=\"line\"># 端口启动时执行，其中-A是添加</span><br><span class=\"line\">PostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class=\"line\"># 端口关闭时执行，其中-D是删除</span><br><span class=\"line\">PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE</span><br><span class=\"line\"></span><br><span class=\"line\">[Peer]</span><br><span class=\"line\">PublicKey = 内网服务器公钥 # 稍后在内网服务器生成的公钥</span><br><span class=\"line\"># 允许内网服务器连接，IP是10.0.0.2，前缀32对应255.255.255.255</span><br><span class=\"line\"># 作用是仅允许这一个IP连接。可以根据需要自行组合IP段和前缀</span><br><span class=\"line\">AllowedIPs = 10.0.0.2/32</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑完配置文件后启动服务</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称</span></span><br><span class=\"line\">sudo systemctl enable wg-quick@wg0</span><br><span class=\"line\">sudo systemctl start wg-quick@wg0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"内网服务器部分\"><a href=\"#内网服务器部分\" class=\"headerlink\" title=\"内网服务器部分\"></a>内网服务器部分</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">与服务器一致，生成公钥私钥，只是名称是client开头</span></span><br><span class=\"line\">wg genkey | tee /etc/wireguard/client_private.key | wg pubkey | tee /etc/wireguard/client_public.key</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看公钥私钥，准备写入配置文件</span></span><br><span class=\"line\">cat /etc/wireguard/client_private.key</span><br><span class=\"line\">cat /etc/wireguard/client_public.key</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在<code>/etc/wireguard/</code>下创建一个配置文件，例如<code>wg0.conf</code>，按如下所述写入配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Interface]</span><br><span class=\"line\">Address = 10.0.0.2/24 # 10.0.0.2则是内网服务器在组网内的IP地址</span><br><span class=\"line\">PrivateKey = 内网服务器私钥</span><br><span class=\"line\"></span><br><span class=\"line\">[Peer]</span><br><span class=\"line\">PublicKey = 云服务器公钥</span><br><span class=\"line\">AllowedIPs = 10.0.0.1/32 # 前缀32限制只允许云服务器IP连入</span><br><span class=\"line\">Endpoint = 云服务器IP:26666 # 指向云服务器IP和端口</span><br><span class=\"line\">PersistentKeepalive = 25</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑完配置文件后启动服务</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称</span></span><br><span class=\"line\">sudo systemctl enable wg-quick@wg0</span><br><span class=\"line\">sudo systemctl start wg-quick@wg0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"共同配置部分\"><a href=\"#共同配置部分\" class=\"headerlink\" title=\"共同配置部分\"></a>共同配置部分</h3><p>在内网和云服务器均开启转发</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;net.ipv4.ip_forward=1&quot; | sudo tee -a /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2>","site":{"data":{}},"length":1295,"excerpt":"<blockquote>\n<p>本次部署的目的是利用本地高性能的计算资源和云服务器畅通无阻的公网，实现无公网环境也可正常部署业务。</p>\n</blockquote>\n<h2 id=\"本文所用到的技术如下\"><a href=\"#本文所用到的技术如下\" class=\"headerlink\" title=\"本文所用到的技术如下\"></a>本文所用到的技术如下</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>软件</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单向异地组网</td>\n<td>将云服务器和本地服务器组成局域网，因本地服务器没有公网，所以由云服务器建立UDP连接实现组网</td>\n<td>WireGuard</td>\n</tr>\n<tr>\n<td>反代</td>\n<td>将对云服务器发起的访问根据配置的业务转发到本地服务器进行处理</td>\n<td>Nginx</td>\n</tr>\n<tr>\n<td>网络转发</td>\n<td>配合wireguard实现对网络流量的路由和转发，确保组网的通畅</td>\n<td>iptables</td>\n</tr>\n</tbody></table>","more":"<h2 id=\"单向异地组网\"><a href=\"#单向异地组网\" class=\"headerlink\" title=\"单向异地组网\"></a>单向异地组网</h2><blockquote>\n<p>2025.2.18补充：组网成功后大概十几分钟，被运营商墙了，太狗了，因为wireguard走的是UDP协议，被运营商检测到了。目前有两个思路，找运营商加个公网IP或者想其他办法组网<br>2025.2.18 10:55记录思路：使用udp2raw将UDP流量封装到TCP流量中，并伪装成HTTPS<br>2025.2.18 10:57补充，尝试udp2raw能打通后先用着，如果再次被封则换为xtls-rprx-vision透明代理UDP流量，实现最强HTTPS伪装</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th><code>udp2raw</code></th>\n<th><code>xtls-rprx-vision</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>工作原理</strong></td>\n<td>把 UDP 伪装成 TCP 或 ICMP，进行 NAT 穿透</td>\n<td>通过 Xray Vision 协议将流量伪装成 HTTPS&#x2F;TLS</td>\n</tr>\n<tr>\n<td><strong>支持协议</strong></td>\n<td>任何 UDP 流量（WireGuard、IPSec、OpenVPN等）</td>\n<td>任何 TCP&#x2F;UDP 流量（支持 UDP over TCP）</td>\n</tr>\n<tr>\n<td><strong>流量伪装</strong></td>\n<td>可伪装为 TCP（HTTPS、SSH）或 ICMP</td>\n<td>伪装成合法 HTTPS 流量</td>\n</tr>\n<tr>\n<td><strong>加密方式</strong></td>\n<td>XOR、AES（轻量级加密，防止 DPI 识别）</td>\n<td>XTLS（高级 TLS 伪装，难以被识别）</td>\n</tr>\n<tr>\n<td><strong>端口</strong></td>\n<td>可伪装成 443（HTTPS）等，但仍是伪 TCP</td>\n<td>直接监听 443 端口，真实 HTTPS 伪装</td>\n</tr>\n<tr>\n<td><strong>数据包特征</strong></td>\n<td>模拟 TCP，但仍然是 UDP 数据包封装</td>\n<td>真实 HTTPS 流量，运营商难以检测</td>\n</tr>\n<tr>\n<td><strong>防 DPI</strong></td>\n<td>基本防御，部分 DPI 仍能检测出伪 TCP</td>\n<td>最高级别防御，难以被识别</td>\n</tr>\n<tr>\n<td><strong>延迟</strong></td>\n<td>低，基本无影响</td>\n<td>略高，取决于 TLS 处理开销</td>\n</tr>\n<tr>\n<td><strong>适用场景</strong></td>\n<td>适用于 UDP 被封但 TCP 可用的环境</td>\n<td>适用于 DPI 严格的环境，如中国大陆或企业网络</td>\n</tr>\n<tr>\n<td><strong>是否需要证书</strong></td>\n<td>不需要</td>\n<td>需要 TLS 证书（Let’s Encrypt 等）</td>\n</tr>\n<tr>\n<td><strong>稳定性</strong></td>\n<td>高，几乎无性能损耗</td>\n<td>高，但 TLS 可能增加 CPU 负担</td>\n</tr>\n<tr>\n<td><strong>适合长期使用</strong></td>\n<td>可以，但可能被进一步分析</td>\n<td>更适合长期使用，难以封锁</td>\n</tr>\n</tbody></table>\n<h3 id=\"服务器部分\"><a href=\"#服务器部分\" class=\"headerlink\" title=\"服务器部分\"></a>服务器部分</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装wireguard</span></span><br><span class=\"line\">apt install wireguard -y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">生成私钥公钥到/etc/wireguard/目录下</span></span><br><span class=\"line\">wg genkey | tee /etc/wireguard/server_private.key | wg pubkey | tee /etc/wireguard/server_public.key</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看私钥公钥，稍后需要写入到配置文件中</span></span><br><span class=\"line\">cat /etc/wireguard/server_private.key</span><br><span class=\"line\">cat /etc/wireguard/server_public.key</span><br></pre></td></tr></table></figure>\n\n<p>在<code>/etc/wireguard/</code>下创建一个配置文件，例如<code>wg0.conf</code>，按如下所述写入配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Interface]</span><br><span class=\"line\">Address = 10.0.0.1/24 # 服务器的局域网IP，/24是前缀，对应255.255.255.0</span><br><span class=\"line\">ListenPort = 26666 # 端口协议是UDP，端口可以自定义</span><br><span class=\"line\">PrivateKey = 云服务器私钥 # 刚刚生成的服务器私钥</span><br><span class=\"line\">DNS=8.8.8.8</span><br><span class=\"line\">MTU=1420</span><br><span class=\"line\"></span><br><span class=\"line\"># 这部分是配置的iptables的转发，其中eth0替换为云服务器公网的网卡名称</span><br><span class=\"line\"># 原理：</span><br><span class=\"line\"># 允许wg0的流量通过iptables转发到eth0</span><br><span class=\"line\"># iptables -A FORWARD -i wg0 -j ACCEPT</span><br><span class=\"line\"># 将eth0上的流量进行源地址伪装，让对方以为来自局域网的流量是从公网IP发出的</span><br><span class=\"line\"># iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class=\"line\"></span><br><span class=\"line\"># 端口启动时执行，其中-A是添加</span><br><span class=\"line\">PostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class=\"line\"># 端口关闭时执行，其中-D是删除</span><br><span class=\"line\">PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE</span><br><span class=\"line\"></span><br><span class=\"line\">[Peer]</span><br><span class=\"line\">PublicKey = 内网服务器公钥 # 稍后在内网服务器生成的公钥</span><br><span class=\"line\"># 允许内网服务器连接，IP是10.0.0.2，前缀32对应255.255.255.255</span><br><span class=\"line\"># 作用是仅允许这一个IP连接。可以根据需要自行组合IP段和前缀</span><br><span class=\"line\">AllowedIPs = 10.0.0.2/32</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑完配置文件后启动服务</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称</span></span><br><span class=\"line\">sudo systemctl enable wg-quick@wg0</span><br><span class=\"line\">sudo systemctl start wg-quick@wg0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"内网服务器部分\"><a href=\"#内网服务器部分\" class=\"headerlink\" title=\"内网服务器部分\"></a>内网服务器部分</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">与服务器一致，生成公钥私钥，只是名称是client开头</span></span><br><span class=\"line\">wg genkey | tee /etc/wireguard/client_private.key | wg pubkey | tee /etc/wireguard/client_public.key</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看公钥私钥，准备写入配置文件</span></span><br><span class=\"line\">cat /etc/wireguard/client_private.key</span><br><span class=\"line\">cat /etc/wireguard/client_public.key</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在<code>/etc/wireguard/</code>下创建一个配置文件，例如<code>wg0.conf</code>，按如下所述写入配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Interface]</span><br><span class=\"line\">Address = 10.0.0.2/24 # 10.0.0.2则是内网服务器在组网内的IP地址</span><br><span class=\"line\">PrivateKey = 内网服务器私钥</span><br><span class=\"line\"></span><br><span class=\"line\">[Peer]</span><br><span class=\"line\">PublicKey = 云服务器公钥</span><br><span class=\"line\">AllowedIPs = 10.0.0.1/32 # 前缀32限制只允许云服务器IP连入</span><br><span class=\"line\">Endpoint = 云服务器IP:26666 # 指向云服务器IP和端口</span><br><span class=\"line\">PersistentKeepalive = 25</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编辑完配置文件后启动服务</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">其中wg-quick是wireguard的启动工具，@连接wg0，是配置文件的名称</span></span><br><span class=\"line\">sudo systemctl enable wg-quick@wg0</span><br><span class=\"line\">sudo systemctl start wg-quick@wg0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"共同配置部分\"><a href=\"#共同配置部分\" class=\"headerlink\" title=\"共同配置部分\"></a>共同配置部分</h3><p>在内网和云服务器均开启转发</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;net.ipv4.ip_forward=1&quot; | sudo tee -a /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h2>"},{"title":"未整理的随手技术笔记（实时更新，各种乱七八糟的技术都会记录在这儿）","comments":1,"date":"2024-04-02T08:34:01.000Z","keywords":"知识库","_content":"\n## 以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\n\n点击阅读全文查看\n<!-- more -->\n\n### CentOS 7批量给eth0网卡添加IP\n\n```shell\n# 通过变量d实现改一个128使所有D段地址同步修改\nd=128 && echo -e \"IPADDR2=43.225.58.$d\\nPREFIX2=27\\nIPADDR3=69.165.77.$d\\nPREFIX3=27\\nIPADDR4=103.42.29.$d \\nPREFIX4=27\\nIPADDR5=220.158.194.$d \\nPREFIX5=27\\nIPADDR6=220.158.195.$d \\nPREFIX6=27\\nIPADDR7=107.151.236.$d \\nPREFIX7=27\\nIPADDR8=107.151.237.$d \\nPREFIX8=27\\nIPADDR9=198.44.163.$d \\nPREFIX9=27\\n\" >> /etc/sysconfig/network-scripts/ifcfg-eth0 && systemctl restart network\n```","source":"_posts/未整理的随手技术笔记（实时更新，各种乱七八糟的技术都会记录在这儿）.md","raw":"---\ntitle: 未整理的随手技术笔记（实时更新，各种乱七八糟的技术都会记录在这儿）\ncategories: [知识库]\ncomments: true\ndate: 2024-04-02 16:34:01\nkeywords: 知识库\ntags:\n    - IT技术\n    - 知识库\n    - 随手记\n    - Linux\n    - NAS\n    - 存储\n    - 网络\n    - 虚拟化\n    - Shell\n---\n\n## 以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\n\n点击阅读全文查看\n<!-- more -->\n\n### CentOS 7批量给eth0网卡添加IP\n\n```shell\n# 通过变量d实现改一个128使所有D段地址同步修改\nd=128 && echo -e \"IPADDR2=43.225.58.$d\\nPREFIX2=27\\nIPADDR3=69.165.77.$d\\nPREFIX3=27\\nIPADDR4=103.42.29.$d \\nPREFIX4=27\\nIPADDR5=220.158.194.$d \\nPREFIX5=27\\nIPADDR6=220.158.195.$d \\nPREFIX6=27\\nIPADDR7=107.151.236.$d \\nPREFIX7=27\\nIPADDR8=107.151.237.$d \\nPREFIX8=27\\nIPADDR9=198.44.163.$d \\nPREFIX9=27\\n\" >> /etc/sysconfig/network-scripts/ifcfg-eth0 && systemctl restart network\n```","slug":"未整理的随手技术笔记（实时更新，各种乱七八糟的技术都会记录在这儿）","published":1,"updated":"2025-09-04T06:44:07.226Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtz001k9szw38ngbfkt","content":"<h2 id=\"以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\"><a href=\"#以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\" class=\"headerlink\" title=\"以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\"></a>以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我</h2><p>点击阅读全文查看</p>\n<span id=\"more\"></span>\n\n<h3 id=\"CentOS-7批量给eth0网卡添加IP\"><a href=\"#CentOS-7批量给eth0网卡添加IP\" class=\"headerlink\" title=\"CentOS 7批量给eth0网卡添加IP\"></a>CentOS 7批量给eth0网卡添加IP</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">通过变量d实现改一个128使所有D段地址同步修改</span></span><br><span class=\"line\">d=128 &amp;&amp; echo -e &quot;IPADDR2=43.225.58.$d\\nPREFIX2=27\\nIPADDR3=69.165.77.$d\\nPREFIX3=27\\nIPADDR4=103.42.29.$d \\nPREFIX4=27\\nIPADDR5=220.158.194.$d \\nPREFIX5=27\\nIPADDR6=220.158.195.$d \\nPREFIX6=27\\nIPADDR7=107.151.236.$d \\nPREFIX7=27\\nIPADDR8=107.151.237.$d \\nPREFIX8=27\\nIPADDR9=198.44.163.$d \\nPREFIX9=27\\n&quot; &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-eth0 &amp;&amp; systemctl restart network</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":157,"excerpt":"<h2 id=\"以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\"><a href=\"#以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\" class=\"headerlink\" title=\"以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我\"></a>以下是乱七八糟的各种没时间整理的随手技术笔记，你可以通过页面搜索关键词查询可能是你用得上的东西，也可以通过底部联系方式询问我</h2><p>点击阅读全文查看</p>","more":"<h3 id=\"CentOS-7批量给eth0网卡添加IP\"><a href=\"#CentOS-7批量给eth0网卡添加IP\" class=\"headerlink\" title=\"CentOS 7批量给eth0网卡添加IP\"></a>CentOS 7批量给eth0网卡添加IP</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">通过变量d实现改一个128使所有D段地址同步修改</span></span><br><span class=\"line\">d=128 &amp;&amp; echo -e &quot;IPADDR2=43.225.58.$d\\nPREFIX2=27\\nIPADDR3=69.165.77.$d\\nPREFIX3=27\\nIPADDR4=103.42.29.$d \\nPREFIX4=27\\nIPADDR5=220.158.194.$d \\nPREFIX5=27\\nIPADDR6=220.158.195.$d \\nPREFIX6=27\\nIPADDR7=107.151.236.$d \\nPREFIX7=27\\nIPADDR8=107.151.237.$d \\nPREFIX8=27\\nIPADDR9=198.44.163.$d \\nPREFIX9=27\\n&quot; &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-eth0 &amp;&amp; systemctl restart network</span><br></pre></td></tr></table></figure>"},{"title":"直接编写crontab使用一行命令完成Proxmox-VE所有虚拟机的安全关机和依次开机","comments":1,"date":"2024-09-12T09:14:48.000Z","keywords":["NAS","DDNS","存储","zfs","RAID","磁盘阵列"],"_content":"\n```shell\n# 依次关机\ni=$(qm list)&&vmid=$(echo \"$i\" | awk '{if (NR>1) {print $1}}')&&for i in $vmid;do qm shutdown $i;done\n\n#依次开机，间隔一分钟\ni=$(qm list)&&vmid=$(echo \"$i\" | awk '{if (NR>1) {print $1}}')&&for i in $vmid;do qm start $i&&sleep 60s;done\n```\n","source":"_posts/直接编写crontab使用一行命令完成Proxmox-VE所有虚拟机的安全关机.md","raw":"---\ntitle: 直接编写crontab使用一行命令完成Proxmox-VE所有虚拟机的安全关机和依次开机\ncomments: true\ncategories: [知识库]\ndate: 2024-09-12 17:14:48\nkeywords:\n    - NAS\n    - DDNS\n    - 存储\n    - zfs\n    - RAID\n    - 磁盘阵列\ntags:\n    - NAS\n    - DDNS\n    - 存储\n    - zfs\n    - RAID\n    - 磁盘阵列\n---\n\n```shell\n# 依次关机\ni=$(qm list)&&vmid=$(echo \"$i\" | awk '{if (NR>1) {print $1}}')&&for i in $vmid;do qm shutdown $i;done\n\n#依次开机，间隔一分钟\ni=$(qm list)&&vmid=$(echo \"$i\" | awk '{if (NR>1) {print $1}}')&&for i in $vmid;do qm start $i&&sleep 60s;done\n```\n","slug":"直接编写crontab使用一行命令完成Proxmox-VE所有虚拟机的安全关机","published":1,"updated":"2025-09-04T06:44:07.227Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwtz001n9szwh8gb5ad7","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">依次关机</span></span><br><span class=\"line\">i=$(qm list)&amp;&amp;vmid=$(echo &quot;$i&quot; | awk &#x27;&#123;if (NR&gt;1) &#123;print $1&#125;&#125;&#x27;)&amp;&amp;for i in $vmid;do qm shutdown $i;done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">依次开机，间隔一分钟</span></span><br><span class=\"line\">i=$(qm list)&amp;&amp;vmid=$(echo &quot;$i&quot; | awk &#x27;&#123;if (NR&gt;1) &#123;print $1&#125;&#125;&#x27;)&amp;&amp;for i in $vmid;do qm start $i&amp;&amp;sleep 60s;done</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":58,"excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">依次关机</span></span><br><span class=\"line\">i=$(qm list)&amp;&amp;vmid=$(echo &quot;$i&quot; | awk &#x27;&#123;if (NR&gt;1) &#123;print $1&#125;&#125;&#x27;)&amp;&amp;for i in $vmid;do qm shutdown $i;done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">依次开机，间隔一分钟</span></span><br><span class=\"line\">i=$(qm list)&amp;&amp;vmid=$(echo &quot;$i&quot; | awk &#x27;&#123;if (NR&gt;1) &#123;print $1&#125;&#125;&#x27;)&amp;&amp;for i in $vmid;do qm start $i&amp;&amp;sleep 60s;done</span><br></pre></td></tr></table></figure>\n"},{"title":"本站上线私有apt源仓库及自制实用deb包","comments":1,"date":"2023-10-18T01:50:41.000Z","keywords":["aptdownloader","yumdownloader","apt包下载工具"],"_content":"# 本站apt源添加命令：\n\n```shell\ncurl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc && mv hackerbs.asc /etc/apt/trusted.gpg.d/\necho \"deb https://apt.ygeit.cn bookworm main\" >> /etc/apt/sources.list\napt update\n```\n\n对于支持apt-key的系统，可以使用以下命令添加本站gpg key\n\n```shell\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys 630D583FFE07EDA9B9531E029CA58840D67352EE\n```\n\n以下是工具介绍\n\n<!-- more -->\n\n## aptdownloader\n\n如果你用过yumdownloader从yum源下载rpm包，那么看到名字你应该就知道这是一个什么工具了\n\n[github仓库地址:https://github.com/1949hacker/deb](https://github.com/1949hacker/deb)\n\n### 使用说明\n\n`aptdownloader <package name>`\n\n该命令会下载指定的包及其依赖到当前目录中，多个包名用空格分隔，示例：\n\n`aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin`\n\n**注意事项：该工具下载的包及其依赖是基于当前系统的，所以你要离线导入deb包的目标系统也必须是相同系统才可！**\n\n### 工具原理\n\n原命令`apt download $(apt-rdepends -p <package name> | grep -v \"^ \" | sed \"s/debcconf-2.0/debconf/g\")`\n\n使用python sys传参，subprocess执行命令，简化了原命令的操作方式","source":"_posts/本站上线私有apt源仓库及自制实用deb包.md","raw":"---\ntitle: 本站上线私有apt源仓库及自制实用deb包\ncategories: [资源]\ncomments: true\ndate: 2023-10-18 09:50:41\nkeywords:\n    - aptdownloader\n    - yumdownloader\n    - apt包下载工具\ntags:\n    - apt\n    - deb\n    - aptdownloader\n    - apt源\n---\n# 本站apt源添加命令：\n\n```shell\ncurl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc && mv hackerbs.asc /etc/apt/trusted.gpg.d/\necho \"deb https://apt.ygeit.cn bookworm main\" >> /etc/apt/sources.list\napt update\n```\n\n对于支持apt-key的系统，可以使用以下命令添加本站gpg key\n\n```shell\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys 630D583FFE07EDA9B9531E029CA58840D67352EE\n```\n\n以下是工具介绍\n\n<!-- more -->\n\n## aptdownloader\n\n如果你用过yumdownloader从yum源下载rpm包，那么看到名字你应该就知道这是一个什么工具了\n\n[github仓库地址:https://github.com/1949hacker/deb](https://github.com/1949hacker/deb)\n\n### 使用说明\n\n`aptdownloader <package name>`\n\n该命令会下载指定的包及其依赖到当前目录中，多个包名用空格分隔，示例：\n\n`aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin`\n\n**注意事项：该工具下载的包及其依赖是基于当前系统的，所以你要离线导入deb包的目标系统也必须是相同系统才可！**\n\n### 工具原理\n\n原命令`apt download $(apt-rdepends -p <package name> | grep -v \"^ \" | sed \"s/debcconf-2.0/debconf/g\")`\n\n使用python sys传参，subprocess执行命令，简化了原命令的操作方式","slug":"本站上线私有apt源仓库及自制实用deb包","published":1,"updated":"2025-09-04T06:44:07.227Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu3001q9szw1okcc1ad","content":"<h1 id=\"本站apt源添加命令：\"><a href=\"#本站apt源添加命令：\" class=\"headerlink\" title=\"本站apt源添加命令：\"></a>本站apt源添加命令：</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc &amp;&amp; mv hackerbs.asc /etc/apt/trusted.gpg.d/</span><br><span class=\"line\">echo &quot;deb https://apt.ygeit.cn bookworm main&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">apt update</span><br></pre></td></tr></table></figure>\n\n<p>对于支持apt-key的系统，可以使用以下命令添加本站gpg key</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 630D583FFE07EDA9B9531E029CA58840D67352EE</span><br></pre></td></tr></table></figure>\n\n<p>以下是工具介绍</p>\n<span id=\"more\"></span>\n\n<h2 id=\"aptdownloader\"><a href=\"#aptdownloader\" class=\"headerlink\" title=\"aptdownloader\"></a>aptdownloader</h2><p>如果你用过yumdownloader从yum源下载rpm包，那么看到名字你应该就知道这是一个什么工具了</p>\n<p><a href=\"https://github.com/1949hacker/deb\">github仓库地址:https://github.com/1949hacker/deb</a></p>\n<h3 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h3><p><code>aptdownloader &lt;package name&gt;</code></p>\n<p>该命令会下载指定的包及其依赖到当前目录中，多个包名用空格分隔，示例：</p>\n<p><code>aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</code></p>\n<p><strong>注意事项：该工具下载的包及其依赖是基于当前系统的，所以你要离线导入deb包的目标系统也必须是相同系统才可！</strong></p>\n<h3 id=\"工具原理\"><a href=\"#工具原理\" class=\"headerlink\" title=\"工具原理\"></a>工具原理</h3><p>原命令<code>apt download $(apt-rdepends -p &lt;package name&gt; | grep -v &quot;^ &quot; | sed &quot;s/debcconf-2.0/debconf/g&quot;)</code></p>\n<p>使用python sys传参，subprocess执行命令，简化了原命令的操作方式</p>\n","site":{"data":{}},"length":258,"excerpt":"<h1 id=\"本站apt源添加命令：\"><a href=\"#本站apt源添加命令：\" class=\"headerlink\" title=\"本站apt源添加命令：\"></a>本站apt源添加命令：</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o hackerbs.asc https://apt.ygeit.cn/hackerbs.asc &amp;&amp; mv hackerbs.asc /etc/apt/trusted.gpg.d/</span><br><span class=\"line\">echo &quot;deb https://apt.ygeit.cn bookworm main&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">apt update</span><br></pre></td></tr></table></figure>\n\n<p>对于支持apt-key的系统，可以使用以下命令添加本站gpg key</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 630D583FFE07EDA9B9531E029CA58840D67352EE</span><br></pre></td></tr></table></figure>\n\n<p>以下是工具介绍</p>","more":"<h2 id=\"aptdownloader\"><a href=\"#aptdownloader\" class=\"headerlink\" title=\"aptdownloader\"></a>aptdownloader</h2><p>如果你用过yumdownloader从yum源下载rpm包，那么看到名字你应该就知道这是一个什么工具了</p>\n<p><a href=\"https://github.com/1949hacker/deb\">github仓库地址:https://github.com/1949hacker/deb</a></p>\n<h3 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h3><p><code>aptdownloader &lt;package name&gt;</code></p>\n<p>该命令会下载指定的包及其依赖到当前目录中，多个包名用空格分隔，示例：</p>\n<p><code>aptdownloader docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</code></p>\n<p><strong>注意事项：该工具下载的包及其依赖是基于当前系统的，所以你要离线导入deb包的目标系统也必须是相同系统才可！</strong></p>\n<h3 id=\"工具原理\"><a href=\"#工具原理\" class=\"headerlink\" title=\"工具原理\"></a>工具原理</h3><p>原命令<code>apt download $(apt-rdepends -p &lt;package name&gt; | grep -v &quot;^ &quot; | sed &quot;s/debcconf-2.0/debconf/g&quot;)</code></p>\n<p>使用python sys传参，subprocess执行命令，简化了原命令的操作方式</p>"},{"title":"相片硅脂片知识","comments":1,"date":"2024-04-03T07:23:15.000Z","keywords":["相变","相变硅脂"],"_content":"\n## 相变硅脂（相变）原理\n\n相变（Phase Change）是物质从一种物理状态转变为另一种状态的过程，通常涉及到固态、液态和气态之间的转变。相变过程发生时，物质的温度保持不变，而是在改变物质状态的同时吸收或释放潜热（latent heat）。潜热是单位质量物质在相变过程中吸收或释放的热量，它是相变过程中热量变化的主要来源。\n\n通俗解释：一杯水中放2块冰块，冰块完全融化前水温始终0度，形态未完全转化前，温度不变\n\n## 相变硅脂特点\n\n相变特性使得相变硅脂片拥有更长的寿命，更优的散热稳定性，相变硅脂片高温相变时液化的表面可以排出空气使得硅脂更加贴合散热元件表面\n\n以霍尼韦尔PTM7950相变片为例，150℃的温度下不会完全相变液化，仅表面相变液化，增加贴合度的情况下不整体液化流动，温度稳定导热高效，官方参数导热率8.5W/mk热阻0.04℃cm²/W","source":"_posts/相片硅脂片知识.md","raw":"---\ntitle: 相片硅脂片知识\ncategories: [知识库]\ncomments: true\ndate: 2024-04-03 15:23:15\nkeywords:\n    - 相变\n    - 相变硅脂\ntags:\n    - 相变\n    - 相变硅脂\n---\n\n## 相变硅脂（相变）原理\n\n相变（Phase Change）是物质从一种物理状态转变为另一种状态的过程，通常涉及到固态、液态和气态之间的转变。相变过程发生时，物质的温度保持不变，而是在改变物质状态的同时吸收或释放潜热（latent heat）。潜热是单位质量物质在相变过程中吸收或释放的热量，它是相变过程中热量变化的主要来源。\n\n通俗解释：一杯水中放2块冰块，冰块完全融化前水温始终0度，形态未完全转化前，温度不变\n\n## 相变硅脂特点\n\n相变特性使得相变硅脂片拥有更长的寿命，更优的散热稳定性，相变硅脂片高温相变时液化的表面可以排出空气使得硅脂更加贴合散热元件表面\n\n以霍尼韦尔PTM7950相变片为例，150℃的温度下不会完全相变液化，仅表面相变液化，增加贴合度的情况下不整体液化流动，温度稳定导热高效，官方参数导热率8.5W/mk热阻0.04℃cm²/W","slug":"相片硅脂片知识","published":1,"updated":"2025-09-04T06:44:07.227Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu4001u9szw7btxaocx","content":"<h2 id=\"相变硅脂（相变）原理\"><a href=\"#相变硅脂（相变）原理\" class=\"headerlink\" title=\"相变硅脂（相变）原理\"></a>相变硅脂（相变）原理</h2><p>相变（Phase Change）是物质从一种物理状态转变为另一种状态的过程，通常涉及到固态、液态和气态之间的转变。相变过程发生时，物质的温度保持不变，而是在改变物质状态的同时吸收或释放潜热（latent heat）。潜热是单位质量物质在相变过程中吸收或释放的热量，它是相变过程中热量变化的主要来源。</p>\n<p>通俗解释：一杯水中放2块冰块，冰块完全融化前水温始终0度，形态未完全转化前，温度不变</p>\n<h2 id=\"相变硅脂特点\"><a href=\"#相变硅脂特点\" class=\"headerlink\" title=\"相变硅脂特点\"></a>相变硅脂特点</h2><p>相变特性使得相变硅脂片拥有更长的寿命，更优的散热稳定性，相变硅脂片高温相变时液化的表面可以排出空气使得硅脂更加贴合散热元件表面</p>\n<p>以霍尼韦尔PTM7950相变片为例，150℃的温度下不会完全相变液化，仅表面相变液化，增加贴合度的情况下不整体液化流动，温度稳定导热高效，官方参数导热率8.5W&#x2F;mk热阻0.04℃cm²&#x2F;W</p>\n","site":{"data":{}},"length":301,"excerpt":"","more":"<h2 id=\"相变硅脂（相变）原理\"><a href=\"#相变硅脂（相变）原理\" class=\"headerlink\" title=\"相变硅脂（相变）原理\"></a>相变硅脂（相变）原理</h2><p>相变（Phase Change）是物质从一种物理状态转变为另一种状态的过程，通常涉及到固态、液态和气态之间的转变。相变过程发生时，物质的温度保持不变，而是在改变物质状态的同时吸收或释放潜热（latent heat）。潜热是单位质量物质在相变过程中吸收或释放的热量，它是相变过程中热量变化的主要来源。</p>\n<p>通俗解释：一杯水中放2块冰块，冰块完全融化前水温始终0度，形态未完全转化前，温度不变</p>\n<h2 id=\"相变硅脂特点\"><a href=\"#相变硅脂特点\" class=\"headerlink\" title=\"相变硅脂特点\"></a>相变硅脂特点</h2><p>相变特性使得相变硅脂片拥有更长的寿命，更优的散热稳定性，相变硅脂片高温相变时液化的表面可以排出空气使得硅脂更加贴合散热元件表面</p>\n<p>以霍尼韦尔PTM7950相变片为例，150℃的温度下不会完全相变液化，仅表面相变液化，增加贴合度的情况下不整体液化流动，温度稳定导热高效，官方参数导热率8.5W&#x2F;mk热阻0.04℃cm²&#x2F;W</p>\n"},{"title":"记录qemu虚拟机网卡的一次坑","comments":1,"date":"2024-06-26T11:18:05.000Z","keywords":["Proxmox-VE","qemu","虚拟机","虚拟网卡"],"_content":"\nqemu的虚拟机网卡推荐设置如下\n\n关闭防火墙,使用VirtIO班虚拟化,Multiqueue根据vCPU数量填写,4核则是4,超过8核最大值只能是8\n\n![20240626193051](https://img.hackerbs.com//20240626193051.png)\n\n<!-- more -->\n\n## 此处记录一个大坑\n\nqemu虚拟机网卡的限速功能,会导致传输大量小包是延迟巨大,比如steam下载游戏,会导致延迟巨高,甚至飙升到300ms\n\n本次大坑的发现过程相当曲折,[粒子GO](https://lizigo.cn)的用户在购买服务器后,steamcmd下载游戏时会延迟巨高,很卡,随后针对机房防火墙,交换机性能,线路问题,进行了全面排查后,了解到steam下载会使用小包传输以保障完整性,而虚拟机服务器正好需要进行限速,导致流量在宿主机转发了一遍再传到虚拟机,一旦遇到steam下载这种大量小包传输,便会导致延迟巨高\n\n## 填坑办法\n\n取消在宿主机设置虚拟机网卡限速,直接在虚拟机系统里做限速,以下是在Debian使用`iproute2`的`tc`进行限速的办法\n\n```shell\n# 初始化enp6s18,设置默认的根qdisc,然后删除\ntc qdisc add dev enp6s18 root handle 1: fq_codel\ntc qdisc del dev enp6s18 root\n# 设置根队列规则\ntc qdisc add dev enp6s18 root handle 1: htb default 10\n# 创建一个类来限制上行带宽为30Mbps\ntc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit\n# 创建过滤器将所有上行流量命中该类\ntc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1\n\n# 查询enp6s18网卡规则\ntc qdisc show dev enp6s18\n# 查询enp6s18网卡类规则\ntc class show dev enp6s18\n# 查询enp6s18网卡过滤器\ntc filter show dev enp6s18\n\n# 一条龙梭哈\ntc qdisc add dev enp6s18 root handle 1: fq_codel && tc qdisc del dev enp6s18 root && tc qdisc add dev enp6s18 root handle 1: htb default 10 && tc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit && tc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1\n```","source":"_posts/记录Proxmox-VE虚拟机网卡的一次坑.md","raw":"---\ntitle: 记录qemu虚拟机网卡的一次坑\ncomments: true\ncategories: [知识库]\ndate: 2024-06-26 19:18:05\nkeywords:\n    - Proxmox-VE\n    - qemu\n    - 虚拟机\n    - 虚拟网卡\ntags:\n    - Proxmox-VE\n    - 虚拟机\n    - 虚拟网卡\n    - qemu\n---\n\nqemu的虚拟机网卡推荐设置如下\n\n关闭防火墙,使用VirtIO班虚拟化,Multiqueue根据vCPU数量填写,4核则是4,超过8核最大值只能是8\n\n![20240626193051](https://img.hackerbs.com//20240626193051.png)\n\n<!-- more -->\n\n## 此处记录一个大坑\n\nqemu虚拟机网卡的限速功能,会导致传输大量小包是延迟巨大,比如steam下载游戏,会导致延迟巨高,甚至飙升到300ms\n\n本次大坑的发现过程相当曲折,[粒子GO](https://lizigo.cn)的用户在购买服务器后,steamcmd下载游戏时会延迟巨高,很卡,随后针对机房防火墙,交换机性能,线路问题,进行了全面排查后,了解到steam下载会使用小包传输以保障完整性,而虚拟机服务器正好需要进行限速,导致流量在宿主机转发了一遍再传到虚拟机,一旦遇到steam下载这种大量小包传输,便会导致延迟巨高\n\n## 填坑办法\n\n取消在宿主机设置虚拟机网卡限速,直接在虚拟机系统里做限速,以下是在Debian使用`iproute2`的`tc`进行限速的办法\n\n```shell\n# 初始化enp6s18,设置默认的根qdisc,然后删除\ntc qdisc add dev enp6s18 root handle 1: fq_codel\ntc qdisc del dev enp6s18 root\n# 设置根队列规则\ntc qdisc add dev enp6s18 root handle 1: htb default 10\n# 创建一个类来限制上行带宽为30Mbps\ntc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit\n# 创建过滤器将所有上行流量命中该类\ntc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1\n\n# 查询enp6s18网卡规则\ntc qdisc show dev enp6s18\n# 查询enp6s18网卡类规则\ntc class show dev enp6s18\n# 查询enp6s18网卡过滤器\ntc filter show dev enp6s18\n\n# 一条龙梭哈\ntc qdisc add dev enp6s18 root handle 1: fq_codel && tc qdisc del dev enp6s18 root && tc qdisc add dev enp6s18 root handle 1: htb default 10 && tc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit && tc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1\n```","slug":"记录Proxmox-VE虚拟机网卡的一次坑","published":1,"updated":"2025-09-04T06:44:07.228Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu5001y9szw6h2b0gi4","content":"<p>qemu的虚拟机网卡推荐设置如下</p>\n<p>关闭防火墙,使用VirtIO班虚拟化,Multiqueue根据vCPU数量填写,4核则是4,超过8核最大值只能是8</p>\n<p><img src=\"https://img.hackerbs.com//20240626193051.png\" alt=\"20240626193051\"></p>\n<span id=\"more\"></span>\n\n<h2 id=\"此处记录一个大坑\"><a href=\"#此处记录一个大坑\" class=\"headerlink\" title=\"此处记录一个大坑\"></a>此处记录一个大坑</h2><p>qemu虚拟机网卡的限速功能,会导致传输大量小包是延迟巨大,比如steam下载游戏,会导致延迟巨高,甚至飙升到300ms</p>\n<p>本次大坑的发现过程相当曲折,<a href=\"https://lizigo.cn/\">粒子GO</a>的用户在购买服务器后,steamcmd下载游戏时会延迟巨高,很卡,随后针对机房防火墙,交换机性能,线路问题,进行了全面排查后,了解到steam下载会使用小包传输以保障完整性,而虚拟机服务器正好需要进行限速,导致流量在宿主机转发了一遍再传到虚拟机,一旦遇到steam下载这种大量小包传输,便会导致延迟巨高</p>\n<h2 id=\"填坑办法\"><a href=\"#填坑办法\" class=\"headerlink\" title=\"填坑办法\"></a>填坑办法</h2><p>取消在宿主机设置虚拟机网卡限速,直接在虚拟机系统里做限速,以下是在Debian使用<code>iproute2</code>的<code>tc</code>进行限速的办法</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初始化enp6s18,设置默认的根qdisc,然后删除</span></span><br><span class=\"line\">tc qdisc add dev enp6s18 root handle 1: fq_codel</span><br><span class=\"line\">tc qdisc del dev enp6s18 root</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置根队列规则</span></span><br><span class=\"line\">tc qdisc add dev enp6s18 root handle 1: htb default 10</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建一个类来限制上行带宽为30Mbps</span></span><br><span class=\"line\">tc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建过滤器将所有上行流量命中该类</span></span><br><span class=\"line\">tc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询enp6s18网卡规则</span></span><br><span class=\"line\">tc qdisc show dev enp6s18</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询enp6s18网卡类规则</span></span><br><span class=\"line\">tc class show dev enp6s18</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询enp6s18网卡过滤器</span></span><br><span class=\"line\">tc filter show dev enp6s18</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">一条龙梭哈</span></span><br><span class=\"line\">tc qdisc add dev enp6s18 root handle 1: fq_codel &amp;&amp; tc qdisc del dev enp6s18 root &amp;&amp; tc qdisc add dev enp6s18 root handle 1: htb default 10 &amp;&amp; tc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit &amp;&amp; tc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":507,"excerpt":"<p>qemu的虚拟机网卡推荐设置如下</p>\n<p>关闭防火墙,使用VirtIO班虚拟化,Multiqueue根据vCPU数量填写,4核则是4,超过8核最大值只能是8</p>\n<p><img src=\"https://img.hackerbs.com//20240626193051.png\" alt=\"20240626193051\"></p>","more":"<h2 id=\"此处记录一个大坑\"><a href=\"#此处记录一个大坑\" class=\"headerlink\" title=\"此处记录一个大坑\"></a>此处记录一个大坑</h2><p>qemu虚拟机网卡的限速功能,会导致传输大量小包是延迟巨大,比如steam下载游戏,会导致延迟巨高,甚至飙升到300ms</p>\n<p>本次大坑的发现过程相当曲折,<a href=\"https://lizigo.cn/\">粒子GO</a>的用户在购买服务器后,steamcmd下载游戏时会延迟巨高,很卡,随后针对机房防火墙,交换机性能,线路问题,进行了全面排查后,了解到steam下载会使用小包传输以保障完整性,而虚拟机服务器正好需要进行限速,导致流量在宿主机转发了一遍再传到虚拟机,一旦遇到steam下载这种大量小包传输,便会导致延迟巨高</p>\n<h2 id=\"填坑办法\"><a href=\"#填坑办法\" class=\"headerlink\" title=\"填坑办法\"></a>填坑办法</h2><p>取消在宿主机设置虚拟机网卡限速,直接在虚拟机系统里做限速,以下是在Debian使用<code>iproute2</code>的<code>tc</code>进行限速的办法</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初始化enp6s18,设置默认的根qdisc,然后删除</span></span><br><span class=\"line\">tc qdisc add dev enp6s18 root handle 1: fq_codel</span><br><span class=\"line\">tc qdisc del dev enp6s18 root</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置根队列规则</span></span><br><span class=\"line\">tc qdisc add dev enp6s18 root handle 1: htb default 10</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建一个类来限制上行带宽为30Mbps</span></span><br><span class=\"line\">tc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建过滤器将所有上行流量命中该类</span></span><br><span class=\"line\">tc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询enp6s18网卡规则</span></span><br><span class=\"line\">tc qdisc show dev enp6s18</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询enp6s18网卡类规则</span></span><br><span class=\"line\">tc class show dev enp6s18</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询enp6s18网卡过滤器</span></span><br><span class=\"line\">tc filter show dev enp6s18</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">一条龙梭哈</span></span><br><span class=\"line\">tc qdisc add dev enp6s18 root handle 1: fq_codel &amp;&amp; tc qdisc del dev enp6s18 root &amp;&amp; tc qdisc add dev enp6s18 root handle 1: htb default 10 &amp;&amp; tc class add dev enp6s18 parent 1: classid 1:1 htb rate 30mbit &amp;&amp; tc filter add dev enp6s18 protocol ip parent 1: prio 1 u32 match ip src 0.0.0.0/0 flowid 1:1</span><br></pre></td></tr></table></figure>"},{"title":"关于DELL PowerEdge报错Correctable memory error logging disabled for a memory device的说明","comments":1,"date":"2025-09-04T08:16:54.000Z","keywords":["DELL","ECC","IT知识","百科","内存","iDRAC"],"_content":"\n## 关于DELL PowerEdge R740XD iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\n\n> 巡检发现：iDRAC报错Correctable memory error logging disabled for a memory\n\n致电800-858-0613核实BIOS固件版本低于2.10，固件过旧，属于遗留问题\n\n关于该报错的解释为：BIOS关闭了对于ECC纠错记录的保存，仅仅是没有记录进行了ECC纠错，实际上并不影响使用，可能存在的风险为：无法知晓ECC进行了多少次纠错。\n\n**2025-9-4已致电DELL800-858-0613核实，该信息可信**","source":"_posts/关于DELL-PowerEdge报错Correctable-memory-error-logging-disabled-for-a-memory-device的说明.md","raw":"---\ntitle: >-\n  关于DELL PowerEdge报错Correctable memory error logging disabled for a memory\n  device的说明\ncomments: true\ncategories: [知识库]\ndate: 2025-09-04 16:16:54\nkeywords:\n  - DELL\n  - ECC\n  - IT知识\n  - 百科\n  - 内存\n  - iDRAC\ntags:\n  - DELL\n  - ECC\n  - IT知识\n  - 百科\n  - 内存\n  - iDRAC\n---\n\n## 关于DELL PowerEdge R740XD iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\n\n> 巡检发现：iDRAC报错Correctable memory error logging disabled for a memory\n\n致电800-858-0613核实BIOS固件版本低于2.10，固件过旧，属于遗留问题\n\n关于该报错的解释为：BIOS关闭了对于ECC纠错记录的保存，仅仅是没有记录进行了ECC纠错，实际上并不影响使用，可能存在的风险为：无法知晓ECC进行了多少次纠错。\n\n**2025-9-4已致电DELL800-858-0613核实，该信息可信**","slug":"关于DELL-PowerEdge报错Correctable-memory-error-logging-disabled-for-a-memory-device的说明","published":1,"updated":"2025-09-10T02:51:10.759Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu600229szw18ph6gx6","content":"<h2 id=\"关于DELL-PowerEdge-R740XD-iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\"><a href=\"#关于DELL-PowerEdge-R740XD-iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\" class=\"headerlink\" title=\"关于DELL PowerEdge R740XD iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\"></a>关于DELL PowerEdge R740XD iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答</h2><blockquote>\n<p>巡检发现：iDRAC报错Correctable memory error logging disabled for a memory</p>\n</blockquote>\n<p>致电800-858-0613核实BIOS固件版本低于2.10，固件过旧，属于遗留问题</p>\n<p>关于该报错的解释为：BIOS关闭了对于ECC纠错记录的保存，仅仅是没有记录进行了ECC纠错，实际上并不影响使用，可能存在的风险为：无法知晓ECC进行了多少次纠错。</p>\n<p><strong>2025-9-4已致电DELL800-858-0613核实，该信息可信</strong></p>\n","site":{"data":{}},"length":156,"excerpt":"","more":"<h2 id=\"关于DELL-PowerEdge-R740XD-iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\"><a href=\"#关于DELL-PowerEdge-R740XD-iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\" class=\"headerlink\" title=\"关于DELL PowerEdge R740XD iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答\"></a>关于DELL PowerEdge R740XD iDRAC报内存设备的可纠正内存错误日志记录已禁用问题的说明及解答</h2><blockquote>\n<p>巡检发现：iDRAC报错Correctable memory error logging disabled for a memory</p>\n</blockquote>\n<p>致电800-858-0613核实BIOS固件版本低于2.10，固件过旧，属于遗留问题</p>\n<p>关于该报错的解释为：BIOS关闭了对于ECC纠错记录的保存，仅仅是没有记录进行了ECC纠错，实际上并不影响使用，可能存在的风险为：无法知晓ECC进行了多少次纠错。</p>\n<p><strong>2025-9-4已致电DELL800-858-0613核实，该信息可信</strong></p>\n"},{"title":"记录一下我的Debian配置v2ray config.json","comments":1,"date":"2024-06-13T08:41:09.000Z","keywords":["debian","v2ray","v2ray客户端","config.json"],"_content":"\n# 配置内容如下\n\n`vim /etc/v2ray/config.json`\n\n```json\n{\n  \"log\": {\n    \"access\": \"\",\n    \"error\": \"\",\n    \"loglevel\": \"warning\"\n  },\n  \"inbounds\": [\n    {\n      \"tag\": \"socks\",\n      \"port\": 10808,\n      \"listen\": \"127.0.0.1\",\n      \"protocol\": \"socks\",\n      \"sniffing\": {\n        \"enabled\": true,\n        \"destOverride\": [\n          \"http\",\n          \"tls\"\n        ],\n        \"routeOnly\": false\n      },\n      \"settings\": {\n        \"auth\": \"noauth\",\n        \"udp\": true,\n        \"allowTransparent\": false\n      }\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"tag\": \"proxy\",\n      \"protocol\": \"shadowsocks\",\n      \"settings\": {\n        \"servers\": [\n          {\n            \"address\": \"你的服务器地址\",\n            \"method\": \"加密方式\",\n            \"ota\": false,\n            \"password\": \"你的密码\",\n            \"port\": 服务器端口,\n            \"level\": 1\n          }\n        ]\n      },\n      \"streamSettings\": {\n        \"network\": \"tcp\"\n      },\n      \"mux\": {\n        \"enabled\": false,\n        \"concurrency\": -1\n      }\n    },\n    {\n      \"tag\": \"direct\",\n      \"protocol\": \"freedom\",\n      \"settings\": {}\n    },\n    {\n      \"tag\": \"block\",\n      \"protocol\": \"blackhole\",\n      \"settings\": {\n        \"response\": {\n          \"type\": \"http\"\n        }\n      }\n    }\n  ]\n}\n```\n","source":"_posts/记录一下我的Debian配置v2ray-config-json.md","raw":"---\ntitle: 记录一下我的Debian配置v2ray config.json\ncomments: true\ncategories: [知识库]\ndate: 2024-06-13 16:41:09\nkeywords:\n    - debian\n    - v2ray\n    - v2ray客户端\n    - config.json\ntags:\n    - debian\n    - v2ray\n    - v2ray客户端\n    - config.json\n---\n\n# 配置内容如下\n\n`vim /etc/v2ray/config.json`\n\n```json\n{\n  \"log\": {\n    \"access\": \"\",\n    \"error\": \"\",\n    \"loglevel\": \"warning\"\n  },\n  \"inbounds\": [\n    {\n      \"tag\": \"socks\",\n      \"port\": 10808,\n      \"listen\": \"127.0.0.1\",\n      \"protocol\": \"socks\",\n      \"sniffing\": {\n        \"enabled\": true,\n        \"destOverride\": [\n          \"http\",\n          \"tls\"\n        ],\n        \"routeOnly\": false\n      },\n      \"settings\": {\n        \"auth\": \"noauth\",\n        \"udp\": true,\n        \"allowTransparent\": false\n      }\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"tag\": \"proxy\",\n      \"protocol\": \"shadowsocks\",\n      \"settings\": {\n        \"servers\": [\n          {\n            \"address\": \"你的服务器地址\",\n            \"method\": \"加密方式\",\n            \"ota\": false,\n            \"password\": \"你的密码\",\n            \"port\": 服务器端口,\n            \"level\": 1\n          }\n        ]\n      },\n      \"streamSettings\": {\n        \"network\": \"tcp\"\n      },\n      \"mux\": {\n        \"enabled\": false,\n        \"concurrency\": -1\n      }\n    },\n    {\n      \"tag\": \"direct\",\n      \"protocol\": \"freedom\",\n      \"settings\": {}\n    },\n    {\n      \"tag\": \"block\",\n      \"protocol\": \"blackhole\",\n      \"settings\": {\n        \"response\": {\n          \"type\": \"http\"\n        }\n      }\n    }\n  ]\n}\n```\n","slug":"记录一下我的Debian配置v2ray-config-json","published":1,"updated":"2025-09-04T06:44:07.228Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu600259szwfih81kch","content":"<h1 id=\"配置内容如下\"><a href=\"#配置内容如下\" class=\"headerlink\" title=\"配置内容如下\"></a>配置内容如下</h1><p><code>vim /etc/v2ray/config.json</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;log&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;access&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;error&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;loglevel&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;inbounds&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;socks&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;port&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">10808</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;listen&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;127.0.0.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;socks&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;sniffing&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;destOverride&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">          <span class=\"string\">&quot;http&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"string\">&quot;tls&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;routeOnly&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;auth&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;noauth&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;udp&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;allowTransparent&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;outbounds&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;proxy&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;shadowsocks&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;servers&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;address&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;你的服务器地址&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;method&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;加密方式&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;ota&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;你的密码&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;port&quot;</span><span class=\"punctuation\">:</span> 服务器端口<span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;level&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;streamSettings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;network&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tcp&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;mux&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;concurrency&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">-1</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;direct&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;freedom&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;block&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;blackhole&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;response&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;http&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":96,"excerpt":"","more":"<h1 id=\"配置内容如下\"><a href=\"#配置内容如下\" class=\"headerlink\" title=\"配置内容如下\"></a>配置内容如下</h1><p><code>vim /etc/v2ray/config.json</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;log&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;access&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;error&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;loglevel&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;inbounds&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;socks&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;port&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">10808</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;listen&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;127.0.0.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;socks&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;sniffing&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;destOverride&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">          <span class=\"string\">&quot;http&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"string\">&quot;tls&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;routeOnly&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;auth&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;noauth&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;udp&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;allowTransparent&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;outbounds&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;proxy&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;shadowsocks&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;servers&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;address&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;你的服务器地址&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;method&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;加密方式&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;ota&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;你的密码&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;port&quot;</span><span class=\"punctuation\">:</span> 服务器端口<span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;level&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;streamSettings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;network&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tcp&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;mux&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;concurrency&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">-1</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;direct&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;freedom&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tag&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;block&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;protocol&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;blackhole&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;response&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;http&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"记录一次分析[服务器SSD报故障随后自行恢复正常现象]","comments":1,"date":"2025-09-09T09:36:21.000Z","keywords":["Inspur","浪潮","IT知识","百科","硬盘","带外","BMC"],"_content":"\n日常巡检时发现带外出现INTEL SSD故障告警，随后又自行恢复，间隔约30分钟，无人工介入。\n\n`smartctl -a /dev/sda`\n\n|故障原因推测|排障思路|\n|---|---|\n|硬盘背板接触问题|检查smartctl中`ID 199 UltraDMA CRC Error Count`的值，是否存在CRC校验错误|\n|NAND闪存寿命是否不足|检查smartctl中`ID 233 Media Wearout Indicator`的值|\n|是否存在坏扇区|检查smartctl中`ID 5 Reallocated sector ct`的值|\n|硬盘备用空间是否不足|检查smartctl中`ID 232 Available Reservd space`的值|\n\n<!-- more -->\n\n实例：\n\n```shell\nMedia Wearout Indicator: 当前值0 临界值100 - 健康\nReallocated Sector Count: 当前值0 临界值75 - 健康\nAvailable Reservd Spare: 当前值0 临界值100 - 健康\n```","source":"_posts/记录一次分析-服务器SSD报故障随后自行恢复正常现象.md","raw":"---\ntitle: 记录一次分析[服务器SSD报故障随后自行恢复正常现象]\ncomments: true\ncategories: [知识库]\ndate: 2025-09-09 17:36:21\nkeywords:\n  - Inspur\n  - 浪潮\n  - IT知识\n  - 百科\n  - 硬盘\n  - 带外\n  - BMC\ntags:\n  - Inspur\n  - 浪潮\n  - IT知识\n  - 百科\n  - 硬盘\n  - 带外\n  - BMC\n---\n\n日常巡检时发现带外出现INTEL SSD故障告警，随后又自行恢复，间隔约30分钟，无人工介入。\n\n`smartctl -a /dev/sda`\n\n|故障原因推测|排障思路|\n|---|---|\n|硬盘背板接触问题|检查smartctl中`ID 199 UltraDMA CRC Error Count`的值，是否存在CRC校验错误|\n|NAND闪存寿命是否不足|检查smartctl中`ID 233 Media Wearout Indicator`的值|\n|是否存在坏扇区|检查smartctl中`ID 5 Reallocated sector ct`的值|\n|硬盘备用空间是否不足|检查smartctl中`ID 232 Available Reservd space`的值|\n\n<!-- more -->\n\n实例：\n\n```shell\nMedia Wearout Indicator: 当前值0 临界值100 - 健康\nReallocated Sector Count: 当前值0 临界值75 - 健康\nAvailable Reservd Spare: 当前值0 临界值100 - 健康\n```","slug":"记录一次分析-服务器SSD报故障随后自行恢复正常现象","published":1,"updated":"2025-09-10T05:41:04.548Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu700289szw16ar7lbe","content":"<p>日常巡检时发现带外出现INTEL SSD故障告警，随后又自行恢复，间隔约30分钟，无人工介入。</p>\n<p><code>smartctl -a /dev/sda</code></p>\n<table>\n<thead>\n<tr>\n<th>故障原因推测</th>\n<th>排障思路</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>硬盘背板接触问题</td>\n<td>检查smartctl中<code>ID 199 UltraDMA CRC Error Count</code>的值，是否存在CRC校验错误</td>\n</tr>\n<tr>\n<td>NAND闪存寿命是否不足</td>\n<td>检查smartctl中<code>ID 233 Media Wearout Indicator</code>的值</td>\n</tr>\n<tr>\n<td>是否存在坏扇区</td>\n<td>检查smartctl中<code>ID 5 Reallocated sector ct</code>的值</td>\n</tr>\n<tr>\n<td>硬盘备用空间是否不足</td>\n<td>检查smartctl中<code>ID 232 Available Reservd space</code>的值</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<p>实例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Media Wearout Indicator: 当前值0 临界值100 - 健康</span><br><span class=\"line\">Reallocated Sector Count: 当前值0 临界值75 - 健康</span><br><span class=\"line\">Available Reservd Spare: 当前值0 临界值100 - 健康</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":180,"excerpt":"<p>日常巡检时发现带外出现INTEL SSD故障告警，随后又自行恢复，间隔约30分钟，无人工介入。</p>\n<p><code>smartctl -a /dev/sda</code></p>\n<table>\n<thead>\n<tr>\n<th>故障原因推测</th>\n<th>排障思路</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>硬盘背板接触问题</td>\n<td>检查smartctl中<code>ID 199 UltraDMA CRC Error Count</code>的值，是否存在CRC校验错误</td>\n</tr>\n<tr>\n<td>NAND闪存寿命是否不足</td>\n<td>检查smartctl中<code>ID 233 Media Wearout Indicator</code>的值</td>\n</tr>\n<tr>\n<td>是否存在坏扇区</td>\n<td>检查smartctl中<code>ID 5 Reallocated sector ct</code>的值</td>\n</tr>\n<tr>\n<td>硬盘备用空间是否不足</td>\n<td>检查smartctl中<code>ID 232 Available Reservd space</code>的值</td>\n</tr>\n</tbody></table>","more":"<p>实例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Media Wearout Indicator: 当前值0 临界值100 - 健康</span><br><span class=\"line\">Reallocated Sector Count: 当前值0 临界值75 - 健康</span><br><span class=\"line\">Available Reservd Spare: 当前值0 临界值100 - 健康</span><br></pre></td></tr></table></figure>"},{"title":"记录一次构建armv8平台vsftpd Docker镜像的过程","comments":1,"date":"2023-09-12T12:53:20.000Z","keywords":"armv8","_content":"\n因客户使用飞腾2000平台需要部署vsftpd，但因系统环境不同存在诸多部署问题，且无适配的armv8版本vsftpd容器，特此专门构建vsftpd镜像并记录构建过程\n\n<!-- more -->\n\nDockerfile代码如下\n\n```Dockerfile\nFROM arm64v8/debian\n\nLABEL maintainer=\"0@hackerbs.com\"\n\nRUN rm /etc/apt/sources.list.d/debian.sources -f\n\nRUN echo \"deb http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\\ndeb http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\\ndeb http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\\ndeb http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\" > /etc/apt/sources.list\n\nRUN apt update -y && \\\n\tapt install -y openssl netcat-openbsd vsftpd --no-install-recommends && \\\n\tapt autoremove -y && apt clean -y && \\\n\trm -rf /var/lib/apt/lists/*\n\n# VSFTPD configuration\nCOPY vsftpd.conf /etc/vsftpd.conf\n\n# VSFTPD pre-configurations\nCOPY docker-entrypoint.sh /var/tmp/\n\nRUN chmod +x /var/tmp/docker-entrypoint.sh\n\nENTRYPOINT [\"/var/tmp/docker-entrypoint.sh\"]\n\nEXPOSE 20/tcp 21/tcp\nEXPOSE 4559/tcp 4560/tcp 4561/tcp 4562/tcp 4563/tcp 4564/tcp\n\nHEALTHCHECK --interval=5m --timeout=3s \\\n  CMD nc -z localhost 21 || exit 1\n\nCMD [\"vsftpd\"]\n\n# docker build -t hackerbs/vsftpd:latest .\n```\n\ndocker-entrypoint.sh代码如下\n\n```shell\n#!/bin/bash\nset -x\n\nif [ \"$1\" = \"vsftpd\" ]; then\n\tVSFTPDDIR=\"/etc\"\n\tPIDDIR=\"/var/run/vsftpd\"\n\tLOGDIR=\"/var/log/vsftpd\"\n\tSECURECHROOTDIR=\"/var/run/vsftpd/empty\"\n\tPRIVATEKEY_FILE=\"/etc/ssl/private/vsftpd.key\"\n\tCERTIFICATE_FILE=\"/etc/ssl/certs/vsftpd.crt\"\n\tCSR_FILE=\"/etc/ssl/certs/vsftpd.csr\"\n\n\tif [ -z \"$FTP_SERVER_NAME\" ]; then\n\t\texport FTP_SERVER_NAME=\"Welcome to [hackerbs's vsftpd for armv8] service\"\n\tfi\n\n\tif [ -z \"$FTP_REPOSITORY\" ]; then\n\t\texport FTP_REPOSITORY=\"/srv_volume\"\n\tfi\n\n\tif [ -z \"$FTP_USER\" ]; then\n\t\texport FTP_USER=\"admin\"\n\tfi\n\n\tif [ -z \"$FTP_PASSWORD\" ]; then\n\t\texport FTP_PASSWORD=\"$(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c 18)\"\n\tfi\n\n\tif [ -z \"$PASV_ADDRESS\" ]; then\n\t\texport PASV_ADDRESS=\"$(tail -n 1 /etc/hosts | awk '{print $1}')\"\n\tfi\n\n\tif [ -z \"$PASV_PROMISCUOUS\" ]; then\n\t\texport PASV_PROMISCUOUS=\"false\"\n\tfi\n\n\tif [ -z \"$PASV_MIN_PORT\" ]; then\n\t\texport PASV_MIN_PORT=\"4559\"\n\tfi\n\n\tif [ -z \"$PASV_MAX_PORT\" ]; then\n\t\texport PASV_MAX_PORT=\"4564\"\n\tfi\n\n\tif [ -z \"$USESSL\" ]; then\n\t\texport USESSL=\"false\"\n\tfi\n\n\tif [ -z \"$FORCESSL\" ]; then\n\t\texport FORCESSL=\"false\"\n\tfi\n\n\tEXIST=1\n\tgrep -qw ^\"$FTP_USER\" /etc/passwd || EXIST=0\n\n\tif [ \"$EXIST\" -eq 0 ]; then\n\t\t# Neccesary directories creation\n\t\tmkdir -p \"$LOGDIR\" \"$PIDDIR\" \"$SECURECHROOTDIR\"\n\n\t\t# VSFTPd log file creation\n\t\ttouch \"${LOGDIR}\"/vsftpd.log\n\t\ttouch \"${LOGDIR}\"/xferlog.log\n\n\t\t# User creation / configuration\n\t\tuseradd -c \"User for send files using vSFTPD\" -d \"$FTP_REPOSITORY\" -m \"$FTP_USER\" &> /dev/null && echo \"FTP user creation [ OK ]\" || exit 2\n\t\tchown \"$FTP_USER\". \"$FTP_REPOSITORY\" &> /dev/null && echo \"FTP user directory configuration [ OK ]\" || exit 2\n\t\techo -e \"$FTP_PASSWORD\\\\n$FTP_PASSWORD\" | passwd \"$FTP_USER\" &> /dev/null && echo \"FTP user password configuration [ OK ]\" || exit 2\n\n\t\tsed -i \"s/PASV_ADDRESS_CUSTOM/$PASV_ADDRESS/g\" \"${VSFTPDDIR}/vsftpd.conf\"\n\t\tsed -i \"s/FTP_SERVER_NAME_CUSTOM/$FTP_SERVER_NAME/g\" \"${VSFTPDDIR}/vsftpd.conf\"\n\n\t\tif [ \"$PASV_PROMISCUOUS\" == \"true\" ]; then\n\t\t\techo \"pasv_promiscuous=YES\" >> \"${VSFTPDDIR}/vsftpd.conf\"\n\t\tfi\n\n\t\t{\n\t\t\techo \"pasv_min_port=$PASV_MIN_PORT\"\n\t\t\techo \"pasv_max_port=$PASV_MAX_PORT\"\n\t\t} >> \"${VSFTPDDIR}/vsftpd.conf\"\n\n\t\tif [ \"$USESSL\" == \"true\" ]; then\n\t\t\t{\n\t\t\t\techo \"ssl_enable=YES\"\n\t\t\t\techo \"allow_anon_ssl=NO\"\n\t\t\t\techo \"ssl_tlsv1=NO\"\n\t\t\t\techo \"ssl_sslv2=NO\"\n\t\t\t\techo \"ssl_sslv3=NO\"\n\t\t\t\techo \"rsa_cert_file=$CERTIFICATE_FILE\"\n\t\t\t\techo \"rsa_private_key_file=$PRIVATEKEY_FILE\"\n\t\t\t} >> \"${VSFTPDDIR}/vsftpd.conf\"\n\n\t\t\tif [ -z \"$SSL_CERTIFICATE\" ]; then\n\t\t\t\topenssl genrsa -out \"$PRIVATEKEY_FILE\" 4096 &> /dev/null && echo \"Private key generate [ OK ]\" || exit 2\n\t\t\t\topenssl req -subj \"/CN=$HOSTNAME/C=ES/ST=Catalunya/L=Barcelona/O=Arroyof Solutions/OU=Sistemas/emailAddress=enzo@arroyof.com\" -sha256 -new -key \"$PRIVATEKEY_FILE\" -out \"$CSR_FILE\" &> /dev/null && echo \"CSR generate [ OK ]\" || exit 2\n\t\t\t\topenssl x509 -req -days 365 -in \"$CSR_FILE\" -signkey \"$PRIVATEKEY_FILE\" -sha256 -out \"$CERTIFICATE_FILE\" &> /dev/null && echo \"Self-signed certificate generate [ OK ]\" || exit 2\n\t\t\tfi\n\t\tfi\n\n\t\tif [ \"$FORCESSL\" == \"false\" ]; then\n\t\t\t{\n\t\t\t\techo \"force_local_logins_ssl=NO\"\n\t\t\t\techo \"force_local_data_ssl=NO\"\n\t\t\t} >> \"${VSFTPDDIR}/vsftpd.conf\"\n\t\tfi\n\n\t\ttouch \"${VSFTPDDIR}/vsftpd.user_list\"\n\tfi\n\n\t# VSFTPd standard log container redirection\n\ttail -f \"${LOGDIR}\"/vsftpd.log | tee /dev/stdout &\n\ttail -f \"${LOGDIR}\"/xferlog.log | tee /dev/stdout &\n\ncat << EOB\n\n****************************************************\n*                                                  *\n*    Docker image: oscarenzo/vsftpd                *\n*    https://gitlab.com/docker-files1/vsftpd       *\n*                                                  *\n****************************************************\n\nSERVER SETTINGS\n---------------\n· FTP host: $PASV_ADDRESS\n· FTP user: $FTP_USER\n· FTP password: $FTP_PASSWORD\n· PATH: $FTP_REPOSITORY\n· Promiscuous: $PASV_PROMISCUOUS\n· SSL enabled: $USESSL\n· SSL forced: $FORCESSL\n---------------\n\nEOB\n\n\"$@\" \"${VSFTPDDIR}/vsftpd.conf\" &\npid=\"${!}\"\nwait \"${pid}\"\nfi\n```\n\nvsftpd.conf配置文件如下\n\n```shell\n# Run in the foreground to keep the container running:\nbackground=NO\n\n# Allow anonymous FTP? (Beware - allowed by default if you comment this out).\nanonymous_enable=NO\n\n# Uncomment this to allow local users to log in.\n# When SELinux is enforcing check for SE bool ftp_home_dir\nlocal_enable=YES\n\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd's)\nlocal_umask=022\n\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\n# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access\nanon_upload_enable=NO\n\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=NO\n\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using \"root\" for uploaded files is not\n# recommended!\nchown_uploads=NO\nchown_username=root\n\n# This option is the name of the file to which we write the vsftpd style log file.\n# This log is only written if the option xferlog_enable is set, and xferlog_std_format is NOT set.\n# Alternatively, it is written if you have set the option dual_log_enable.\n# One further complication - if you have set syslog_enable, then this file is not written and output is sent to the system log instead.\nvsftpd_log_file=/var/log/vsftpd/vsftpd.log\n\n# This option is the name of the file to which we write the wu-ftpd style transfer log.\n# The transfer log is only written if the option xferlog_enable is set, along with xferlog_std_format.\n# Alternatively, it is written if you have set the option dual_log_enable.\nxferlog_file=/var/log/vsftpd/xferlog.log\n\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\nxferlog_std_format=YES\n\n# You may change the default value for timing out an idle session.\nidle_session_timeout=600\n\n# You may change the default value for timing out a data connection.\ndata_connection_timeout=300\n\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode. The vsftpd.conf(5) man page explains\n# the behaviour when these options are disabled.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\nascii_upload_enable=NO\nascii_download_enable=NO\n\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd/banned_emails\n\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that\n# the user does not have write access to the top level directory within the\n# chroot)\nchroot_local_user=YES\n#chroot_list_enable=YES\n# (default follows)\n#chroot_list_file=/etc/vsftpd/chroot_list\n\n# Allow chroot writeable\nallow_writeable_chroot=YES\n\n# This option should be the name of a directory which is empty.\n# Also, the directory should not be writable by the ftp user.\n# This directory is used as a secure chroot() jail at times vsftpd does not require filesystem access.\n# Default: /usr/share/empty\nsecure_chroot_dir=/var/run/vsftpd/empty\n\n# You may activate the \"-R\" option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume\n# the presence of the \"-R\" option, so there is a strong case for enabling it.\nls_recurse_enable=NO\n\n# When \"listen\" directive is enabled, vsftpd runs in standalone mode and\n# listens on IPv4 sockets. This directive cannot be used in conjunction\n# with the listen_ipv6 directive.\nlisten=YES\n\n# This directive enables listening on IPv6 sockets. By default, listening\n# on the IPv6 \"any\" address (::) will accept connections from both IPv6\n# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6\n# sockets. If you want that (perhaps because you want to listen on specific\n# addresses) then you must run two copies of vsftpd with two configuration\n# files.\n# Make sure, that one of the listen options is commented !!\nlisten_ipv6=NO\n\npam_service_name=vsftpd\nuserlist_enable=YES\ntcp_wrappers=YES\n\n# Logging\nlog_ftp_protocol=YES\nsyslog_enable=NO\ndual_log_enable=YES\n\n# Variables set at container runtime\nftpd_banner=FTP_SERVER_NAME_CUSTOM\npasv_address=PASV_ADDRESS_CUSTOM\npasv_addr_resolve=NO\npasv_enable=YES\n```\n\n将以上三个文件放到同一目录中，使用`docker build -t hackerbs/vsftpd:latest .`构建即可。\n\ngit仓库地址：[https://github.com/1949hacker/vsftpd](https://github.com/1949hacker/vsftpd)\n","source":"_posts/记录一次构建armv8平台vsftpd-Docker镜像的过程.md","raw":"---\ntitle: 记录一次构建armv8平台vsftpd Docker镜像的过程\ncategories: [知识库]\ncomments: true\ndate: 2023-09-12 20:53:20\nkeywords: armv8\ntags:\n    - Docker\n    - armv8\n    - vsftpd\n---\n\n因客户使用飞腾2000平台需要部署vsftpd，但因系统环境不同存在诸多部署问题，且无适配的armv8版本vsftpd容器，特此专门构建vsftpd镜像并记录构建过程\n\n<!-- more -->\n\nDockerfile代码如下\n\n```Dockerfile\nFROM arm64v8/debian\n\nLABEL maintainer=\"0@hackerbs.com\"\n\nRUN rm /etc/apt/sources.list.d/debian.sources -f\n\nRUN echo \"deb http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\\ndeb http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\\ndeb http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\\ndeb http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\\\ndeb-src http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\" > /etc/apt/sources.list\n\nRUN apt update -y && \\\n\tapt install -y openssl netcat-openbsd vsftpd --no-install-recommends && \\\n\tapt autoremove -y && apt clean -y && \\\n\trm -rf /var/lib/apt/lists/*\n\n# VSFTPD configuration\nCOPY vsftpd.conf /etc/vsftpd.conf\n\n# VSFTPD pre-configurations\nCOPY docker-entrypoint.sh /var/tmp/\n\nRUN chmod +x /var/tmp/docker-entrypoint.sh\n\nENTRYPOINT [\"/var/tmp/docker-entrypoint.sh\"]\n\nEXPOSE 20/tcp 21/tcp\nEXPOSE 4559/tcp 4560/tcp 4561/tcp 4562/tcp 4563/tcp 4564/tcp\n\nHEALTHCHECK --interval=5m --timeout=3s \\\n  CMD nc -z localhost 21 || exit 1\n\nCMD [\"vsftpd\"]\n\n# docker build -t hackerbs/vsftpd:latest .\n```\n\ndocker-entrypoint.sh代码如下\n\n```shell\n#!/bin/bash\nset -x\n\nif [ \"$1\" = \"vsftpd\" ]; then\n\tVSFTPDDIR=\"/etc\"\n\tPIDDIR=\"/var/run/vsftpd\"\n\tLOGDIR=\"/var/log/vsftpd\"\n\tSECURECHROOTDIR=\"/var/run/vsftpd/empty\"\n\tPRIVATEKEY_FILE=\"/etc/ssl/private/vsftpd.key\"\n\tCERTIFICATE_FILE=\"/etc/ssl/certs/vsftpd.crt\"\n\tCSR_FILE=\"/etc/ssl/certs/vsftpd.csr\"\n\n\tif [ -z \"$FTP_SERVER_NAME\" ]; then\n\t\texport FTP_SERVER_NAME=\"Welcome to [hackerbs's vsftpd for armv8] service\"\n\tfi\n\n\tif [ -z \"$FTP_REPOSITORY\" ]; then\n\t\texport FTP_REPOSITORY=\"/srv_volume\"\n\tfi\n\n\tif [ -z \"$FTP_USER\" ]; then\n\t\texport FTP_USER=\"admin\"\n\tfi\n\n\tif [ -z \"$FTP_PASSWORD\" ]; then\n\t\texport FTP_PASSWORD=\"$(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c 18)\"\n\tfi\n\n\tif [ -z \"$PASV_ADDRESS\" ]; then\n\t\texport PASV_ADDRESS=\"$(tail -n 1 /etc/hosts | awk '{print $1}')\"\n\tfi\n\n\tif [ -z \"$PASV_PROMISCUOUS\" ]; then\n\t\texport PASV_PROMISCUOUS=\"false\"\n\tfi\n\n\tif [ -z \"$PASV_MIN_PORT\" ]; then\n\t\texport PASV_MIN_PORT=\"4559\"\n\tfi\n\n\tif [ -z \"$PASV_MAX_PORT\" ]; then\n\t\texport PASV_MAX_PORT=\"4564\"\n\tfi\n\n\tif [ -z \"$USESSL\" ]; then\n\t\texport USESSL=\"false\"\n\tfi\n\n\tif [ -z \"$FORCESSL\" ]; then\n\t\texport FORCESSL=\"false\"\n\tfi\n\n\tEXIST=1\n\tgrep -qw ^\"$FTP_USER\" /etc/passwd || EXIST=0\n\n\tif [ \"$EXIST\" -eq 0 ]; then\n\t\t# Neccesary directories creation\n\t\tmkdir -p \"$LOGDIR\" \"$PIDDIR\" \"$SECURECHROOTDIR\"\n\n\t\t# VSFTPd log file creation\n\t\ttouch \"${LOGDIR}\"/vsftpd.log\n\t\ttouch \"${LOGDIR}\"/xferlog.log\n\n\t\t# User creation / configuration\n\t\tuseradd -c \"User for send files using vSFTPD\" -d \"$FTP_REPOSITORY\" -m \"$FTP_USER\" &> /dev/null && echo \"FTP user creation [ OK ]\" || exit 2\n\t\tchown \"$FTP_USER\". \"$FTP_REPOSITORY\" &> /dev/null && echo \"FTP user directory configuration [ OK ]\" || exit 2\n\t\techo -e \"$FTP_PASSWORD\\\\n$FTP_PASSWORD\" | passwd \"$FTP_USER\" &> /dev/null && echo \"FTP user password configuration [ OK ]\" || exit 2\n\n\t\tsed -i \"s/PASV_ADDRESS_CUSTOM/$PASV_ADDRESS/g\" \"${VSFTPDDIR}/vsftpd.conf\"\n\t\tsed -i \"s/FTP_SERVER_NAME_CUSTOM/$FTP_SERVER_NAME/g\" \"${VSFTPDDIR}/vsftpd.conf\"\n\n\t\tif [ \"$PASV_PROMISCUOUS\" == \"true\" ]; then\n\t\t\techo \"pasv_promiscuous=YES\" >> \"${VSFTPDDIR}/vsftpd.conf\"\n\t\tfi\n\n\t\t{\n\t\t\techo \"pasv_min_port=$PASV_MIN_PORT\"\n\t\t\techo \"pasv_max_port=$PASV_MAX_PORT\"\n\t\t} >> \"${VSFTPDDIR}/vsftpd.conf\"\n\n\t\tif [ \"$USESSL\" == \"true\" ]; then\n\t\t\t{\n\t\t\t\techo \"ssl_enable=YES\"\n\t\t\t\techo \"allow_anon_ssl=NO\"\n\t\t\t\techo \"ssl_tlsv1=NO\"\n\t\t\t\techo \"ssl_sslv2=NO\"\n\t\t\t\techo \"ssl_sslv3=NO\"\n\t\t\t\techo \"rsa_cert_file=$CERTIFICATE_FILE\"\n\t\t\t\techo \"rsa_private_key_file=$PRIVATEKEY_FILE\"\n\t\t\t} >> \"${VSFTPDDIR}/vsftpd.conf\"\n\n\t\t\tif [ -z \"$SSL_CERTIFICATE\" ]; then\n\t\t\t\topenssl genrsa -out \"$PRIVATEKEY_FILE\" 4096 &> /dev/null && echo \"Private key generate [ OK ]\" || exit 2\n\t\t\t\topenssl req -subj \"/CN=$HOSTNAME/C=ES/ST=Catalunya/L=Barcelona/O=Arroyof Solutions/OU=Sistemas/emailAddress=enzo@arroyof.com\" -sha256 -new -key \"$PRIVATEKEY_FILE\" -out \"$CSR_FILE\" &> /dev/null && echo \"CSR generate [ OK ]\" || exit 2\n\t\t\t\topenssl x509 -req -days 365 -in \"$CSR_FILE\" -signkey \"$PRIVATEKEY_FILE\" -sha256 -out \"$CERTIFICATE_FILE\" &> /dev/null && echo \"Self-signed certificate generate [ OK ]\" || exit 2\n\t\t\tfi\n\t\tfi\n\n\t\tif [ \"$FORCESSL\" == \"false\" ]; then\n\t\t\t{\n\t\t\t\techo \"force_local_logins_ssl=NO\"\n\t\t\t\techo \"force_local_data_ssl=NO\"\n\t\t\t} >> \"${VSFTPDDIR}/vsftpd.conf\"\n\t\tfi\n\n\t\ttouch \"${VSFTPDDIR}/vsftpd.user_list\"\n\tfi\n\n\t# VSFTPd standard log container redirection\n\ttail -f \"${LOGDIR}\"/vsftpd.log | tee /dev/stdout &\n\ttail -f \"${LOGDIR}\"/xferlog.log | tee /dev/stdout &\n\ncat << EOB\n\n****************************************************\n*                                                  *\n*    Docker image: oscarenzo/vsftpd                *\n*    https://gitlab.com/docker-files1/vsftpd       *\n*                                                  *\n****************************************************\n\nSERVER SETTINGS\n---------------\n· FTP host: $PASV_ADDRESS\n· FTP user: $FTP_USER\n· FTP password: $FTP_PASSWORD\n· PATH: $FTP_REPOSITORY\n· Promiscuous: $PASV_PROMISCUOUS\n· SSL enabled: $USESSL\n· SSL forced: $FORCESSL\n---------------\n\nEOB\n\n\"$@\" \"${VSFTPDDIR}/vsftpd.conf\" &\npid=\"${!}\"\nwait \"${pid}\"\nfi\n```\n\nvsftpd.conf配置文件如下\n\n```shell\n# Run in the foreground to keep the container running:\nbackground=NO\n\n# Allow anonymous FTP? (Beware - allowed by default if you comment this out).\nanonymous_enable=NO\n\n# Uncomment this to allow local users to log in.\n# When SELinux is enforcing check for SE bool ftp_home_dir\nlocal_enable=YES\n\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd's)\nlocal_umask=022\n\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\n# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access\nanon_upload_enable=NO\n\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=NO\n\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using \"root\" for uploaded files is not\n# recommended!\nchown_uploads=NO\nchown_username=root\n\n# This option is the name of the file to which we write the vsftpd style log file.\n# This log is only written if the option xferlog_enable is set, and xferlog_std_format is NOT set.\n# Alternatively, it is written if you have set the option dual_log_enable.\n# One further complication - if you have set syslog_enable, then this file is not written and output is sent to the system log instead.\nvsftpd_log_file=/var/log/vsftpd/vsftpd.log\n\n# This option is the name of the file to which we write the wu-ftpd style transfer log.\n# The transfer log is only written if the option xferlog_enable is set, along with xferlog_std_format.\n# Alternatively, it is written if you have set the option dual_log_enable.\nxferlog_file=/var/log/vsftpd/xferlog.log\n\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\nxferlog_std_format=YES\n\n# You may change the default value for timing out an idle session.\nidle_session_timeout=600\n\n# You may change the default value for timing out a data connection.\ndata_connection_timeout=300\n\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode. The vsftpd.conf(5) man page explains\n# the behaviour when these options are disabled.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\nascii_upload_enable=NO\nascii_download_enable=NO\n\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd/banned_emails\n\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that\n# the user does not have write access to the top level directory within the\n# chroot)\nchroot_local_user=YES\n#chroot_list_enable=YES\n# (default follows)\n#chroot_list_file=/etc/vsftpd/chroot_list\n\n# Allow chroot writeable\nallow_writeable_chroot=YES\n\n# This option should be the name of a directory which is empty.\n# Also, the directory should not be writable by the ftp user.\n# This directory is used as a secure chroot() jail at times vsftpd does not require filesystem access.\n# Default: /usr/share/empty\nsecure_chroot_dir=/var/run/vsftpd/empty\n\n# You may activate the \"-R\" option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume\n# the presence of the \"-R\" option, so there is a strong case for enabling it.\nls_recurse_enable=NO\n\n# When \"listen\" directive is enabled, vsftpd runs in standalone mode and\n# listens on IPv4 sockets. This directive cannot be used in conjunction\n# with the listen_ipv6 directive.\nlisten=YES\n\n# This directive enables listening on IPv6 sockets. By default, listening\n# on the IPv6 \"any\" address (::) will accept connections from both IPv6\n# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6\n# sockets. If you want that (perhaps because you want to listen on specific\n# addresses) then you must run two copies of vsftpd with two configuration\n# files.\n# Make sure, that one of the listen options is commented !!\nlisten_ipv6=NO\n\npam_service_name=vsftpd\nuserlist_enable=YES\ntcp_wrappers=YES\n\n# Logging\nlog_ftp_protocol=YES\nsyslog_enable=NO\ndual_log_enable=YES\n\n# Variables set at container runtime\nftpd_banner=FTP_SERVER_NAME_CUSTOM\npasv_address=PASV_ADDRESS_CUSTOM\npasv_addr_resolve=NO\npasv_enable=YES\n```\n\n将以上三个文件放到同一目录中，使用`docker build -t hackerbs/vsftpd:latest .`构建即可。\n\ngit仓库地址：[https://github.com/1949hacker/vsftpd](https://github.com/1949hacker/vsftpd)\n","slug":"记录一次构建armv8平台vsftpd-Docker镜像的过程","published":1,"updated":"2025-09-04T06:44:07.229Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu7002a9szwgkkmghy1","content":"<p>因客户使用飞腾2000平台需要部署vsftpd，但因系统环境不同存在诸多部署问题，且无适配的armv8版本vsftpd容器，特此专门构建vsftpd镜像并记录构建过程</p>\n<span id=\"more\"></span>\n\n<p>Dockerfile代码如下</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> arm64v8/debian</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"language-bash\"> maintainer=<span class=\"string\">&quot;0@hackerbs.com&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">rm</span> /etc/apt/sources.list.d/debian.sources -f</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;deb http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware&quot;</span> &gt; /etc/apt/sources.list</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt update -y &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">\tapt install -y openssl netcat-openbsd vsftpd --no-install-recommends &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">\tapt autoremove -y &amp;&amp; apt clean -y &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">\t<span class=\"built_in\">rm</span> -rf /var/lib/apt/lists/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VSFTPD configuration</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> vsftpd.conf /etc/vsftpd.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VSFTPD pre-configurations</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> docker-entrypoint.sh /var/tmp/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">chmod</span> +x /var/tmp/docker-entrypoint.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;/var/tmp/docker-entrypoint.sh&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">20</span>/tcp <span class=\"number\">21</span>/tcp</span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">4559</span>/tcp <span class=\"number\">4560</span>/tcp <span class=\"number\">4561</span>/tcp <span class=\"number\">4562</span>/tcp <span class=\"number\">4563</span>/tcp <span class=\"number\">4564</span>/tcp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">HEALTHCHECK</span><span class=\"language-bash\"> --interval=5m --<span class=\"built_in\">timeout</span>=3s \\</span></span><br><span class=\"line\"><span class=\"language-bash\">  CMD nc -z localhost 21 || <span class=\"built_in\">exit</span> 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;vsftpd&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker build -t hackerbs/vsftpd:latest .</span></span><br></pre></td></tr></table></figure>\n\n<p>docker-entrypoint.sh代码如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">set -x</span><br><span class=\"line\"></span><br><span class=\"line\">if [ &quot;$1&quot; = &quot;vsftpd&quot; ]; then</span><br><span class=\"line\">\tVSFTPDDIR=&quot;/etc&quot;</span><br><span class=\"line\">\tPIDDIR=&quot;/var/run/vsftpd&quot;</span><br><span class=\"line\">\tLOGDIR=&quot;/var/log/vsftpd&quot;</span><br><span class=\"line\">\tSECURECHROOTDIR=&quot;/var/run/vsftpd/empty&quot;</span><br><span class=\"line\">\tPRIVATEKEY_FILE=&quot;/etc/ssl/private/vsftpd.key&quot;</span><br><span class=\"line\">\tCERTIFICATE_FILE=&quot;/etc/ssl/certs/vsftpd.crt&quot;</span><br><span class=\"line\">\tCSR_FILE=&quot;/etc/ssl/certs/vsftpd.csr&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_SERVER_NAME&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_SERVER_NAME=&quot;Welcome to [hackerbs&#x27;s vsftpd for armv8] service&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_REPOSITORY&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_REPOSITORY=&quot;/srv_volume&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_USER&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_USER=&quot;admin&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_PASSWORD&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_PASSWORD=&quot;$(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c 18)&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_ADDRESS&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_ADDRESS=&quot;$(tail -n 1 /etc/hosts | awk &#x27;&#123;print $1&#125;&#x27;)&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_PROMISCUOUS&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_PROMISCUOUS=&quot;false&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_MIN_PORT&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_MIN_PORT=&quot;4559&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_MAX_PORT&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_MAX_PORT=&quot;4564&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$USESSL&quot; ]; then</span><br><span class=\"line\">\t\texport USESSL=&quot;false&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FORCESSL&quot; ]; then</span><br><span class=\"line\">\t\texport FORCESSL=&quot;false&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tEXIST=1</span><br><span class=\"line\">\tgrep -qw ^&quot;$FTP_USER&quot; /etc/passwd || EXIST=0</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ &quot;$EXIST&quot; -eq 0 ]; then</span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">Neccesary directories creation</span></span><br><span class=\"line\">\t\tmkdir -p &quot;$LOGDIR&quot; &quot;$PIDDIR&quot; &quot;$SECURECHROOTDIR&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">VSFTPd <span class=\"built_in\">log</span> file creation</span></span><br><span class=\"line\">\t\ttouch &quot;$&#123;LOGDIR&#125;&quot;/vsftpd.log</span><br><span class=\"line\">\t\ttouch &quot;$&#123;LOGDIR&#125;&quot;/xferlog.log</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">User creation / configuration</span></span><br><span class=\"line\">\t\tuseradd -c &quot;User for send files using vSFTPD&quot; -d &quot;$FTP_REPOSITORY&quot; -m &quot;$FTP_USER&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;FTP user creation [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\tchown &quot;$FTP_USER&quot;. &quot;$FTP_REPOSITORY&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;FTP user directory configuration [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\techo -e &quot;$FTP_PASSWORD\\\\n$FTP_PASSWORD&quot; | passwd &quot;$FTP_USER&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;FTP user password configuration [ OK ]&quot; || exit 2</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tsed -i &quot;s/PASV_ADDRESS_CUSTOM/$PASV_ADDRESS/g&quot; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\">\t\tsed -i &quot;s/FTP_SERVER_NAME_CUSTOM/$FTP_SERVER_NAME/g&quot; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif [ &quot;$PASV_PROMISCUOUS&quot; == &quot;true&quot; ]; then</span><br><span class=\"line\">\t\t\techo &quot;pasv_promiscuous=YES&quot; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\">\t\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\techo &quot;pasv_min_port=$PASV_MIN_PORT&quot;</span><br><span class=\"line\">\t\t\techo &quot;pasv_max_port=$PASV_MAX_PORT&quot;</span><br><span class=\"line\">\t\t&#125; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif [ &quot;$USESSL&quot; == &quot;true&quot; ]; then</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_enable=YES&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;allow_anon_ssl=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_tlsv1=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_sslv2=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_sslv3=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;rsa_cert_file=$CERTIFICATE_FILE&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;rsa_private_key_file=$PRIVATEKEY_FILE&quot;</span><br><span class=\"line\">\t\t\t&#125; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif [ -z &quot;$SSL_CERTIFICATE&quot; ]; then</span><br><span class=\"line\">\t\t\t\topenssl genrsa -out &quot;$PRIVATEKEY_FILE&quot; 4096 &amp;&gt; /dev/null &amp;&amp; echo &quot;Private key generate [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\t\t\topenssl req -subj &quot;/CN=$HOSTNAME/C=ES/ST=Catalunya/L=Barcelona/O=Arroyof Solutions/OU=Sistemas/emailAddress=enzo@arroyof.com&quot; -sha256 -new -key &quot;$PRIVATEKEY_FILE&quot; -out &quot;$CSR_FILE&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;CSR generate [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\t\t\topenssl x509 -req -days 365 -in &quot;$CSR_FILE&quot; -signkey &quot;$PRIVATEKEY_FILE&quot; -sha256 -out &quot;$CERTIFICATE_FILE&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;Self-signed certificate generate [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\t\tfi</span><br><span class=\"line\">\t\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif [ &quot;$FORCESSL&quot; == &quot;false&quot; ]; then</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\techo &quot;force_local_logins_ssl=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;force_local_data_ssl=NO&quot;</span><br><span class=\"line\">\t\t\t&#125; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\">\t\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttouch &quot;$&#123;VSFTPDDIR&#125;/vsftpd.user_list&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">VSFTPd standard <span class=\"built_in\">log</span> container redirection</span></span><br><span class=\"line\">\ttail -f &quot;$&#123;LOGDIR&#125;&quot;/vsftpd.log | tee /dev/stdout &amp;</span><br><span class=\"line\">\ttail -f &quot;$&#123;LOGDIR&#125;&quot;/xferlog.log | tee /dev/stdout &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt; EOB</span><br><span class=\"line\"></span><br><span class=\"line\">****************************************************</span><br><span class=\"line\">*                                                  *</span><br><span class=\"line\">*    Docker image: oscarenzo/vsftpd                *</span><br><span class=\"line\">*    https://gitlab.com/docker-files1/vsftpd       *</span><br><span class=\"line\">*                                                  *</span><br><span class=\"line\">****************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">SERVER SETTINGS</span><br><span class=\"line\">---------------</span><br><span class=\"line\">· FTP host: $PASV_ADDRESS</span><br><span class=\"line\">· FTP user: $FTP_USER</span><br><span class=\"line\">· FTP password: $FTP_PASSWORD</span><br><span class=\"line\">· PATH: $FTP_REPOSITORY</span><br><span class=\"line\">· Promiscuous: $PASV_PROMISCUOUS</span><br><span class=\"line\">· SSL enabled: $USESSL</span><br><span class=\"line\">· SSL forced: $FORCESSL</span><br><span class=\"line\">---------------</span><br><span class=\"line\"></span><br><span class=\"line\">EOB</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;$@&quot; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot; &amp;</span><br><span class=\"line\">pid=&quot;$&#123;!&#125;&quot;</span><br><span class=\"line\">wait &quot;$&#123;pid&#125;&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<p>vsftpd.conf配置文件如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Run <span class=\"keyword\">in</span> the foreground to keep the container running:</span></span><br><span class=\"line\">background=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Allow anonymous FTP? (Beware - allowed by default <span class=\"keyword\">if</span> you comment this out).</span></span><br><span class=\"line\">anonymous_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Uncomment this to allow <span class=\"built_in\">local</span> <span class=\"built_in\">users</span> to <span class=\"built_in\">log</span> <span class=\"keyword\">in</span>.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">When SELinux is enforcing check <span class=\"keyword\">for</span> SE bool ftp_home_dir</span></span><br><span class=\"line\">local_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Uncomment this to <span class=\"built_in\">enable</span> any form of FTP write <span class=\"built_in\">command</span>.</span></span><br><span class=\"line\">write_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Default <span class=\"built_in\">umask</span> <span class=\"keyword\">for</span> <span class=\"built_in\">local</span> <span class=\"built_in\">users</span> is 077. You may wish to change this to 022,</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">if</span> your <span class=\"built_in\">users</span> expect that (022 is used by most other ftpd<span class=\"string\">&#x27;s)</span></span></span><br><span class=\"line\">local_umask=022</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Uncomment this to allow the anonymous FTP user to upload files. This only</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">has an effect if the above global write enable is activated. Also, you will</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">obviously need to create a directory writable by the FTP user.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</span></span></span><br><span class=\"line\">anon_upload_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Uncomment this if you want the anonymous FTP user to be able to create</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">new directories.</span></span></span><br><span class=\"line\">anon_mkdir_write_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Activate directory messages - messages given to remote users when they</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">go into a certain directory.</span></span></span><br><span class=\"line\">dirmessage_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Activate logging of uploads/downloads.</span></span></span><br><span class=\"line\">xferlog_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Make sure PORT transfer connections originate from port 20 (ftp-data).</span></span></span><br><span class=\"line\">connect_from_port_20=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">If you want, you can arrange for uploaded anonymous files to be owned by</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">a different user. Note! Using &quot;root&quot; for uploaded files is not</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">recommended!</span></span></span><br><span class=\"line\">chown_uploads=NO</span><br><span class=\"line\">chown_username=root</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">This option is the name of the file to which we write the vsftpd style log file.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">This log is only written if the option xferlog_enable is set, and xferlog_std_format is NOT set.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Alternatively, it is written if you have set the option dual_log_enable.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">One further complication - if you have set syslog_enable, then this file is not written and output is sent to the system log instead.</span></span></span><br><span class=\"line\">vsftpd_log_file=/var/log/vsftpd/vsftpd.log</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">This option is the name of the file to which we write the wu-ftpd style transfer log.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">The transfer log is only written if the option xferlog_enable is set, along with xferlog_std_format.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Alternatively, it is written if you have set the option dual_log_enable.</span></span></span><br><span class=\"line\">xferlog_file=/var/log/vsftpd/xferlog.log</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">If you want, you can have your log file in standard ftpd xferlog format.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Note that the default log file location is /var/log/xferlog in this case.</span></span></span><br><span class=\"line\">xferlog_std_format=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may change the default value for timing out an idle session.</span></span></span><br><span class=\"line\">idle_session_timeout=600</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may change the default value for timing out a data connection.</span></span></span><br><span class=\"line\">data_connection_timeout=300</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">It is recommended that you define on your system a unique user which the</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">ftp server can use as a totally isolated and unprivileged user.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">nopriv_user=ftpsecure</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Enable this and the server will recognise asynchronous ABOR requests. Not</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">recommended for security (the code is non-trivial). Not enabling it,</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">however, may confuse older FTP clients.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">async_abor_enable=YES</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">By default the server will pretend to allow ASCII mode but in fact ignore</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">the request. Turn on the below options to have the server actually do ASCII</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">mangling on files when in ASCII mode. The vsftpd.conf(5) man page explains</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">the behaviour when these options are disabled.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Beware that on some FTP servers, ASCII support allows a denial of service</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">predicted this attack and has always been safe, reporting the size of the</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">raw file.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">ASCII mangling is a horrible feature of the protocol.</span></span></span><br><span class=\"line\">ascii_upload_enable=NO</span><br><span class=\"line\">ascii_download_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may specify a file of disallowed anonymous e-mail addresses. Apparently</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">useful for combatting certain DoS attacks.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">deny_email_enable=YES</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">(default follows)</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">banned_email_file=/etc/vsftpd/banned_emails</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may specify an explicit list of local users to chroot() to their home</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">directory. If chroot_local_user is YES, then this list becomes a list of</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">users to NOT chroot().</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">(Warning! chroot&#x27;</span>ing can be very dangerous. If using <span class=\"built_in\">chroot</span>, make sure that</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">the user does not have write access to the top level directory within the</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">chroot</span>)</span></span><br><span class=\"line\">chroot_local_user=YES</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">chroot_list_enable=YES</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">(default follows)</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">chroot_list_file=/etc/vsftpd/chroot_list</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Allow <span class=\"built_in\">chroot</span> writeable</span></span><br><span class=\"line\">allow_writeable_chroot=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This option should be the name of a directory <span class=\"built_in\">which</span> is empty.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Also, the directory should not be writable by the ftp user.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This directory is used as a secure <span class=\"built_in\">chroot</span>() jail at <span class=\"built_in\">times</span> vsftpd does not require filesystem access.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Default: /usr/share/empty</span></span><br><span class=\"line\">secure_chroot_dir=/var/run/vsftpd/empty</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">You may activate the <span class=\"string\">&quot;-R&quot;</span> option to the <span class=\"built_in\">builtin</span> <span class=\"built_in\">ls</span>. This is disabled by</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">default to avoid remote <span class=\"built_in\">users</span> being able to cause excessive I/O on large</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sites. However, some broken FTP clients such as <span class=\"string\">&quot;ncftp&quot;</span> and <span class=\"string\">&quot;mirror&quot;</span> assume</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">the presence of the <span class=\"string\">&quot;-R&quot;</span> option, so there is a strong <span class=\"keyword\">case</span> <span class=\"keyword\">for</span> enabling it.</span></span><br><span class=\"line\">ls_recurse_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">When <span class=\"string\">&quot;listen&quot;</span> directive is enabled, vsftpd runs <span class=\"keyword\">in</span> standalone mode and</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">listens on IPv4 sockets. This directive cannot be used <span class=\"keyword\">in</span> conjunction</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">with the listen_ipv6 directive.</span></span><br><span class=\"line\">listen=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This directive enables listening on IPv6 sockets. By default, listening</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">on the IPv6 <span class=\"string\">&quot;any&quot;</span> address (::) will accept connections from both IPv6</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sockets. If you want that (perhaps because you want to listen on specific</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">addresses) <span class=\"keyword\">then</span> you must run two copies of vsftpd with two configuration</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">files.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Make sure, that one of the listen options is commented !!</span></span><br><span class=\"line\">listen_ipv6=NO</span><br><span class=\"line\"></span><br><span class=\"line\">pam_service_name=vsftpd</span><br><span class=\"line\">userlist_enable=YES</span><br><span class=\"line\">tcp_wrappers=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Logging</span></span><br><span class=\"line\">log_ftp_protocol=YES</span><br><span class=\"line\">syslog_enable=NO</span><br><span class=\"line\">dual_log_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Variables <span class=\"built_in\">set</span> at container runtime</span></span><br><span class=\"line\">ftpd_banner=FTP_SERVER_NAME_CUSTOM</span><br><span class=\"line\">pasv_address=PASV_ADDRESS_CUSTOM</span><br><span class=\"line\">pasv_addr_resolve=NO</span><br><span class=\"line\">pasv_enable=YES</span><br></pre></td></tr></table></figure>\n\n<p>将以上三个文件放到同一目录中，使用<code>docker build -t hackerbs/vsftpd:latest .</code>构建即可。</p>\n<p>git仓库地址：<a href=\"https://github.com/1949hacker/vsftpd\">https://github.com/1949hacker/vsftpd</a></p>\n","site":{"data":{}},"length":1660,"excerpt":"<p>因客户使用飞腾2000平台需要部署vsftpd，但因系统环境不同存在诸多部署问题，且无适配的armv8版本vsftpd容器，特此专门构建vsftpd镜像并记录构建过程</p>","more":"<p>Dockerfile代码如下</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> arm64v8/debian</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"language-bash\"> maintainer=<span class=\"string\">&quot;0@hackerbs.com&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">rm</span> /etc/apt/sources.list.d/debian.sources -f</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;deb http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware\\</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-bash\">deb-src http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware&quot;</span> &gt; /etc/apt/sources.list</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt update -y &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">\tapt install -y openssl netcat-openbsd vsftpd --no-install-recommends &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">\tapt autoremove -y &amp;&amp; apt clean -y &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">\t<span class=\"built_in\">rm</span> -rf /var/lib/apt/lists/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VSFTPD configuration</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> vsftpd.conf /etc/vsftpd.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VSFTPD pre-configurations</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> docker-entrypoint.sh /var/tmp/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">chmod</span> +x /var/tmp/docker-entrypoint.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"language-bash\"> [<span class=\"string\">&quot;/var/tmp/docker-entrypoint.sh&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">20</span>/tcp <span class=\"number\">21</span>/tcp</span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">4559</span>/tcp <span class=\"number\">4560</span>/tcp <span class=\"number\">4561</span>/tcp <span class=\"number\">4562</span>/tcp <span class=\"number\">4563</span>/tcp <span class=\"number\">4564</span>/tcp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">HEALTHCHECK</span><span class=\"language-bash\"> --interval=5m --<span class=\"built_in\">timeout</span>=3s \\</span></span><br><span class=\"line\"><span class=\"language-bash\">  CMD nc -z localhost 21 || <span class=\"built_in\">exit</span> 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;vsftpd&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker build -t hackerbs/vsftpd:latest .</span></span><br></pre></td></tr></table></figure>\n\n<p>docker-entrypoint.sh代码如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">set -x</span><br><span class=\"line\"></span><br><span class=\"line\">if [ &quot;$1&quot; = &quot;vsftpd&quot; ]; then</span><br><span class=\"line\">\tVSFTPDDIR=&quot;/etc&quot;</span><br><span class=\"line\">\tPIDDIR=&quot;/var/run/vsftpd&quot;</span><br><span class=\"line\">\tLOGDIR=&quot;/var/log/vsftpd&quot;</span><br><span class=\"line\">\tSECURECHROOTDIR=&quot;/var/run/vsftpd/empty&quot;</span><br><span class=\"line\">\tPRIVATEKEY_FILE=&quot;/etc/ssl/private/vsftpd.key&quot;</span><br><span class=\"line\">\tCERTIFICATE_FILE=&quot;/etc/ssl/certs/vsftpd.crt&quot;</span><br><span class=\"line\">\tCSR_FILE=&quot;/etc/ssl/certs/vsftpd.csr&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_SERVER_NAME&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_SERVER_NAME=&quot;Welcome to [hackerbs&#x27;s vsftpd for armv8] service&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_REPOSITORY&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_REPOSITORY=&quot;/srv_volume&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_USER&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_USER=&quot;admin&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FTP_PASSWORD&quot; ]; then</span><br><span class=\"line\">\t\texport FTP_PASSWORD=&quot;$(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c 18)&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_ADDRESS&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_ADDRESS=&quot;$(tail -n 1 /etc/hosts | awk &#x27;&#123;print $1&#125;&#x27;)&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_PROMISCUOUS&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_PROMISCUOUS=&quot;false&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_MIN_PORT&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_MIN_PORT=&quot;4559&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$PASV_MAX_PORT&quot; ]; then</span><br><span class=\"line\">\t\texport PASV_MAX_PORT=&quot;4564&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$USESSL&quot; ]; then</span><br><span class=\"line\">\t\texport USESSL=&quot;false&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ -z &quot;$FORCESSL&quot; ]; then</span><br><span class=\"line\">\t\texport FORCESSL=&quot;false&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\tEXIST=1</span><br><span class=\"line\">\tgrep -qw ^&quot;$FTP_USER&quot; /etc/passwd || EXIST=0</span><br><span class=\"line\"></span><br><span class=\"line\">\tif [ &quot;$EXIST&quot; -eq 0 ]; then</span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">Neccesary directories creation</span></span><br><span class=\"line\">\t\tmkdir -p &quot;$LOGDIR&quot; &quot;$PIDDIR&quot; &quot;$SECURECHROOTDIR&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">VSFTPd <span class=\"built_in\">log</span> file creation</span></span><br><span class=\"line\">\t\ttouch &quot;$&#123;LOGDIR&#125;&quot;/vsftpd.log</span><br><span class=\"line\">\t\ttouch &quot;$&#123;LOGDIR&#125;&quot;/xferlog.log</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t\t# </span><span class=\"language-bash\">User creation / configuration</span></span><br><span class=\"line\">\t\tuseradd -c &quot;User for send files using vSFTPD&quot; -d &quot;$FTP_REPOSITORY&quot; -m &quot;$FTP_USER&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;FTP user creation [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\tchown &quot;$FTP_USER&quot;. &quot;$FTP_REPOSITORY&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;FTP user directory configuration [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\techo -e &quot;$FTP_PASSWORD\\\\n$FTP_PASSWORD&quot; | passwd &quot;$FTP_USER&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;FTP user password configuration [ OK ]&quot; || exit 2</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tsed -i &quot;s/PASV_ADDRESS_CUSTOM/$PASV_ADDRESS/g&quot; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\">\t\tsed -i &quot;s/FTP_SERVER_NAME_CUSTOM/$FTP_SERVER_NAME/g&quot; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif [ &quot;$PASV_PROMISCUOUS&quot; == &quot;true&quot; ]; then</span><br><span class=\"line\">\t\t\techo &quot;pasv_promiscuous=YES&quot; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\">\t\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\techo &quot;pasv_min_port=$PASV_MIN_PORT&quot;</span><br><span class=\"line\">\t\t\techo &quot;pasv_max_port=$PASV_MAX_PORT&quot;</span><br><span class=\"line\">\t\t&#125; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif [ &quot;$USESSL&quot; == &quot;true&quot; ]; then</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_enable=YES&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;allow_anon_ssl=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_tlsv1=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_sslv2=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;ssl_sslv3=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;rsa_cert_file=$CERTIFICATE_FILE&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;rsa_private_key_file=$PRIVATEKEY_FILE&quot;</span><br><span class=\"line\">\t\t\t&#125; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif [ -z &quot;$SSL_CERTIFICATE&quot; ]; then</span><br><span class=\"line\">\t\t\t\topenssl genrsa -out &quot;$PRIVATEKEY_FILE&quot; 4096 &amp;&gt; /dev/null &amp;&amp; echo &quot;Private key generate [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\t\t\topenssl req -subj &quot;/CN=$HOSTNAME/C=ES/ST=Catalunya/L=Barcelona/O=Arroyof Solutions/OU=Sistemas/emailAddress=enzo@arroyof.com&quot; -sha256 -new -key &quot;$PRIVATEKEY_FILE&quot; -out &quot;$CSR_FILE&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;CSR generate [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\t\t\topenssl x509 -req -days 365 -in &quot;$CSR_FILE&quot; -signkey &quot;$PRIVATEKEY_FILE&quot; -sha256 -out &quot;$CERTIFICATE_FILE&quot; &amp;&gt; /dev/null &amp;&amp; echo &quot;Self-signed certificate generate [ OK ]&quot; || exit 2</span><br><span class=\"line\">\t\t\tfi</span><br><span class=\"line\">\t\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif [ &quot;$FORCESSL&quot; == &quot;false&quot; ]; then</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\techo &quot;force_local_logins_ssl=NO&quot;</span><br><span class=\"line\">\t\t\t\techo &quot;force_local_data_ssl=NO&quot;</span><br><span class=\"line\">\t\t\t&#125; &gt;&gt; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot;</span><br><span class=\"line\">\t\tfi</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttouch &quot;$&#123;VSFTPDDIR&#125;/vsftpd.user_list&quot;</span><br><span class=\"line\">\tfi</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">VSFTPd standard <span class=\"built_in\">log</span> container redirection</span></span><br><span class=\"line\">\ttail -f &quot;$&#123;LOGDIR&#125;&quot;/vsftpd.log | tee /dev/stdout &amp;</span><br><span class=\"line\">\ttail -f &quot;$&#123;LOGDIR&#125;&quot;/xferlog.log | tee /dev/stdout &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt; EOB</span><br><span class=\"line\"></span><br><span class=\"line\">****************************************************</span><br><span class=\"line\">*                                                  *</span><br><span class=\"line\">*    Docker image: oscarenzo/vsftpd                *</span><br><span class=\"line\">*    https://gitlab.com/docker-files1/vsftpd       *</span><br><span class=\"line\">*                                                  *</span><br><span class=\"line\">****************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">SERVER SETTINGS</span><br><span class=\"line\">---------------</span><br><span class=\"line\">· FTP host: $PASV_ADDRESS</span><br><span class=\"line\">· FTP user: $FTP_USER</span><br><span class=\"line\">· FTP password: $FTP_PASSWORD</span><br><span class=\"line\">· PATH: $FTP_REPOSITORY</span><br><span class=\"line\">· Promiscuous: $PASV_PROMISCUOUS</span><br><span class=\"line\">· SSL enabled: $USESSL</span><br><span class=\"line\">· SSL forced: $FORCESSL</span><br><span class=\"line\">---------------</span><br><span class=\"line\"></span><br><span class=\"line\">EOB</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;$@&quot; &quot;$&#123;VSFTPDDIR&#125;/vsftpd.conf&quot; &amp;</span><br><span class=\"line\">pid=&quot;$&#123;!&#125;&quot;</span><br><span class=\"line\">wait &quot;$&#123;pid&#125;&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<p>vsftpd.conf配置文件如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Run <span class=\"keyword\">in</span> the foreground to keep the container running:</span></span><br><span class=\"line\">background=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Allow anonymous FTP? (Beware - allowed by default <span class=\"keyword\">if</span> you comment this out).</span></span><br><span class=\"line\">anonymous_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Uncomment this to allow <span class=\"built_in\">local</span> <span class=\"built_in\">users</span> to <span class=\"built_in\">log</span> <span class=\"keyword\">in</span>.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">When SELinux is enforcing check <span class=\"keyword\">for</span> SE bool ftp_home_dir</span></span><br><span class=\"line\">local_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Uncomment this to <span class=\"built_in\">enable</span> any form of FTP write <span class=\"built_in\">command</span>.</span></span><br><span class=\"line\">write_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Default <span class=\"built_in\">umask</span> <span class=\"keyword\">for</span> <span class=\"built_in\">local</span> <span class=\"built_in\">users</span> is 077. You may wish to change this to 022,</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">if</span> your <span class=\"built_in\">users</span> expect that (022 is used by most other ftpd<span class=\"string\">&#x27;s)</span></span></span><br><span class=\"line\">local_umask=022</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Uncomment this to allow the anonymous FTP user to upload files. This only</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">has an effect if the above global write enable is activated. Also, you will</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">obviously need to create a directory writable by the FTP user.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</span></span></span><br><span class=\"line\">anon_upload_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Uncomment this if you want the anonymous FTP user to be able to create</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">new directories.</span></span></span><br><span class=\"line\">anon_mkdir_write_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Activate directory messages - messages given to remote users when they</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">go into a certain directory.</span></span></span><br><span class=\"line\">dirmessage_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Activate logging of uploads/downloads.</span></span></span><br><span class=\"line\">xferlog_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Make sure PORT transfer connections originate from port 20 (ftp-data).</span></span></span><br><span class=\"line\">connect_from_port_20=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">If you want, you can arrange for uploaded anonymous files to be owned by</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">a different user. Note! Using &quot;root&quot; for uploaded files is not</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">recommended!</span></span></span><br><span class=\"line\">chown_uploads=NO</span><br><span class=\"line\">chown_username=root</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">This option is the name of the file to which we write the vsftpd style log file.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">This log is only written if the option xferlog_enable is set, and xferlog_std_format is NOT set.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Alternatively, it is written if you have set the option dual_log_enable.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">One further complication - if you have set syslog_enable, then this file is not written and output is sent to the system log instead.</span></span></span><br><span class=\"line\">vsftpd_log_file=/var/log/vsftpd/vsftpd.log</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">This option is the name of the file to which we write the wu-ftpd style transfer log.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">The transfer log is only written if the option xferlog_enable is set, along with xferlog_std_format.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Alternatively, it is written if you have set the option dual_log_enable.</span></span></span><br><span class=\"line\">xferlog_file=/var/log/vsftpd/xferlog.log</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">If you want, you can have your log file in standard ftpd xferlog format.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Note that the default log file location is /var/log/xferlog in this case.</span></span></span><br><span class=\"line\">xferlog_std_format=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may change the default value for timing out an idle session.</span></span></span><br><span class=\"line\">idle_session_timeout=600</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may change the default value for timing out a data connection.</span></span></span><br><span class=\"line\">data_connection_timeout=300</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">It is recommended that you define on your system a unique user which the</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">ftp server can use as a totally isolated and unprivileged user.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">nopriv_user=ftpsecure</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Enable this and the server will recognise asynchronous ABOR requests. Not</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">recommended for security (the code is non-trivial). Not enabling it,</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">however, may confuse older FTP clients.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">async_abor_enable=YES</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">By default the server will pretend to allow ASCII mode but in fact ignore</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">the request. Turn on the below options to have the server actually do ASCII</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">mangling on files when in ASCII mode. The vsftpd.conf(5) man page explains</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">the behaviour when these options are disabled.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Beware that on some FTP servers, ASCII support allows a denial of service</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">predicted this attack and has always been safe, reporting the size of the</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">raw file.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">ASCII mangling is a horrible feature of the protocol.</span></span></span><br><span class=\"line\">ascii_upload_enable=NO</span><br><span class=\"line\">ascii_download_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may specify a file of disallowed anonymous e-mail addresses. Apparently</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">useful for combatting certain DoS attacks.</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">deny_email_enable=YES</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">(default follows)</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">banned_email_file=/etc/vsftpd/banned_emails</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">You may specify an explicit list of local users to chroot() to their home</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">directory. If chroot_local_user is YES, then this list becomes a list of</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">users to NOT chroot().</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">(Warning! chroot&#x27;</span>ing can be very dangerous. If using <span class=\"built_in\">chroot</span>, make sure that</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">the user does not have write access to the top level directory within the</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">chroot</span>)</span></span><br><span class=\"line\">chroot_local_user=YES</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">chroot_list_enable=YES</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">(default follows)</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">chroot_list_file=/etc/vsftpd/chroot_list</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Allow <span class=\"built_in\">chroot</span> writeable</span></span><br><span class=\"line\">allow_writeable_chroot=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This option should be the name of a directory <span class=\"built_in\">which</span> is empty.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Also, the directory should not be writable by the ftp user.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This directory is used as a secure <span class=\"built_in\">chroot</span>() jail at <span class=\"built_in\">times</span> vsftpd does not require filesystem access.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Default: /usr/share/empty</span></span><br><span class=\"line\">secure_chroot_dir=/var/run/vsftpd/empty</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">You may activate the <span class=\"string\">&quot;-R&quot;</span> option to the <span class=\"built_in\">builtin</span> <span class=\"built_in\">ls</span>. This is disabled by</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">default to avoid remote <span class=\"built_in\">users</span> being able to cause excessive I/O on large</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sites. However, some broken FTP clients such as <span class=\"string\">&quot;ncftp&quot;</span> and <span class=\"string\">&quot;mirror&quot;</span> assume</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">the presence of the <span class=\"string\">&quot;-R&quot;</span> option, so there is a strong <span class=\"keyword\">case</span> <span class=\"keyword\">for</span> enabling it.</span></span><br><span class=\"line\">ls_recurse_enable=NO</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">When <span class=\"string\">&quot;listen&quot;</span> directive is enabled, vsftpd runs <span class=\"keyword\">in</span> standalone mode and</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">listens on IPv4 sockets. This directive cannot be used <span class=\"keyword\">in</span> conjunction</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">with the listen_ipv6 directive.</span></span><br><span class=\"line\">listen=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This directive enables listening on IPv6 sockets. By default, listening</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">on the IPv6 <span class=\"string\">&quot;any&quot;</span> address (::) will accept connections from both IPv6</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sockets. If you want that (perhaps because you want to listen on specific</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">addresses) <span class=\"keyword\">then</span> you must run two copies of vsftpd with two configuration</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">files.</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Make sure, that one of the listen options is commented !!</span></span><br><span class=\"line\">listen_ipv6=NO</span><br><span class=\"line\"></span><br><span class=\"line\">pam_service_name=vsftpd</span><br><span class=\"line\">userlist_enable=YES</span><br><span class=\"line\">tcp_wrappers=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Logging</span></span><br><span class=\"line\">log_ftp_protocol=YES</span><br><span class=\"line\">syslog_enable=NO</span><br><span class=\"line\">dual_log_enable=YES</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Variables <span class=\"built_in\">set</span> at container runtime</span></span><br><span class=\"line\">ftpd_banner=FTP_SERVER_NAME_CUSTOM</span><br><span class=\"line\">pasv_address=PASV_ADDRESS_CUSTOM</span><br><span class=\"line\">pasv_addr_resolve=NO</span><br><span class=\"line\">pasv_enable=YES</span><br></pre></td></tr></table></figure>\n\n<p>将以上三个文件放到同一目录中，使用<code>docker build -t hackerbs/vsftpd:latest .</code>构建即可。</p>\n<p>git仓库地址：<a href=\"https://github.com/1949hacker/vsftpd\">https://github.com/1949hacker/vsftpd</a></p>"},{"title":"记录初学Python开发fio测试工具","comments":1,"date":"2023-03-20T10:19:44.000Z","keywords":"python,fio","_content":"\n# 使用Python自动测试IOPS性能并格式化输出\n\n>代码过多,请点击**阅读全文**查看\n\n<!-- more -->\n\n```python\n#!/usr/bin/python3\n\n\"\"\"\nTODO:\n    此脚本已测试兼容环境为Debian 11.6\n    此脚本的测试路径为\"/iopsTest\",请提前将你要测试的设备挂载到\"/iopsTest\"\n    注意自行根据盘位修改下列numjobs参数\n\"\"\"\n\nimport subprocess, re, os\n\n\n# 随机写\ndef randwrite():\n    # 初始化用于存储运行结果的列表\n    bw = [0, 0, 0]\n    iops = [0, 0, 0]\n\n    # fio重复运行4次\n    print(\"随机写进行中...\")\n    for i in range(4):\n        cmd = [\n            \"fio\",\n            \"-name=YEOS\",\n            \"-size=32G\",\n            \"-runtime=60s\",\n            \"-time_base\",\n            \"-bs=4k\",\n            \"-direct=1\",\n            \"-rw=randwrite\",\n            \"-ioengine=libaio\",\n            \"-numjobs=8\",\n            \"-group_reporting\",\n            \"-iodepth=64\",\n            f\"-filename=/iopsTest/{i}\",\n            \"-randrepeat=0\",\n        ]\n\n        # 将fio运行结果标准输出到管道\n        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n        fio2 = subprocess.Popen(\n            [\"grep\", \"samples\"], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=False\n        )\n\n        # 使用communicate获取子进程的标准输出并格式化为utf-8编码\n        fio = fio2.communicate()[0].decode(\"utf-8\")\n\n        # 初始化列表\n        bw_num = []\n        iops_num = []\n\n        # 匹配数字和小数点，并将其元素更新\n        for line in fio.split(\"\\n\"):\n            if \"bw\" in line:\n                bw_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n            elif \"iops\" in line:\n                iops_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n\n        # 将str类型转换为float后再转换为int\n        bw_num = [int(float(e)) for e in bw_num]\n        iops_num = [int(float(e)) for e in iops_num]\n        print(f\"单次带宽运行结果:{bw_num}\")\n        print(f\"单次IOPS运行结果:{iops_num}\")\n\n        # 跳过第一次运行结果\n        if i == 0:\n            continue\n        else:\n            # 格式化fio结果\n            for KorM in fio.split(\"\\n\"):\n                # 判断格式化的结果中是否存在MiB单位的值\n                if \"MiB\" in KorM:\n                    # 若有则转换为KiB\n                    print(\"输出结果为MiB单位,将进行转换\")\n                    bw[0] += bw_num[0] * 1024\n                    bw[1] += bw_num[1] * 1024\n                    bw[2] += bw_num[3] * 1024\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                elif \"KiB\" in KorM:\n                    print(\"输出结果为KiB单位,不转换\")\n                    bw[0] += bw_num[0]\n                    bw[1] += bw_num[1]\n                    bw[2] += bw_num[3]\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n\n    bwMin = int(bw[0] / 3)\n    bwMax = int(bw[1] / 3)\n    bwAvg = int(bw[2] / 3)\n    iopsMin = int(iops[0] / 3)\n    iopsMax = int(iops[1] / 3)\n    iopsAvg = int(iops[2] / 3)\n\n    print(\n        f\"\\n\\n\\n随机写均值如下:\\n带宽最小值:{bwMin},最大值{bwMax},均值{bwAvg}\\nIOPS最小值:{iopsMin},\"\n        f\"最大值{iopsMax},均值{iopsAvg}\"\n    )\n\n\n# 创建读文件\ndef create_readFile():\n    print(\"初始化读测试环境,至少需要十几分钟甚至几十分钟,等着...\")\n    clear = subprocess.Popen([\"rm\", \"-rf\", \"/iopsTest/*\"], shell=False)\n    clear.wait()\n    print(\"环境检测完成,创建读测试文件...\")\n    cmd = [\n        \"fio\",\n        \"-name=create_read\",\n        \"-size=32G\",\n        \"-bs=1M\",\n        \"-direct=1\",\n        \"-rw=write\",\n        \"-ioengine=libaio\",\n        \"-numjobs=8\",\n        \"-filename=/iopsTest/read\",\n    ]\n    create = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n    done = create.communicate()[0].decode(\"utf-8\")\n\n\n# 随机读\ndef randread():\n    # 初始化用于存储运行结果的列表\n    bw = [0, 0, 0]\n    iops = [0, 0, 0]\n    # fio重复运行4次\n    print(\"随机读进行中...\")\n\n    for i in range(4):\n        cmd = [\n            \"fio\",\n            \"-name=YEOS\",\n            \"-size=32G\",\n            \"-runtime=60s\",\n            \"-time_base\",\n            \"-bs=4k\",\n            \"-direct=1\",\n            \"-rw=randwrite\",\n            \"-ioengine=libaio\",\n            \"-numjobs=8\",\n            \"-group_reporting\",\n            \"-iodepth=64\",\n            \"-filename=/iopsTest/read\",\n            \"-randrepeat=0\",\n        ]\n\n        # 将fio运行结果标准输出到管道\n        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n        fio2 = subprocess.Popen(\n            [\"grep\", \"samples\"], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=False\n        )\n\n        # 使用communicate获取子进程的标准输出并格式化为utf-8编码\n        fio = fio2.communicate()[0].decode(\"utf-8\")\n\n        # 初始化列表\n        bw_num = []\n        iops_num = []\n\n        # 匹配数字和小数点，并将其元素更新\n        for line in fio.split(\"\\n\"):\n            if \"bw\" in line:\n                bw_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n            elif \"iops\" in line:\n                iops_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n\n        # 将str类型转换为float后再转换为int\n        bw_num = [int(float(e)) for e in bw_num]\n        iops_num = [int(float(e)) for e in iops_num]\n        print(f\"单次带宽运行结果:{bw_num}\")\n        print(f\"单次IOPS运行结果:{iops_num}\")\n\n        # 跳过第一次运行结果\n        if i == 0:\n            continue\n        else:\n            # 格式化fio结果\n            for KorM in fio.split(\"\\n\"):\n                # 判断格式化的结果中是否存在MiB单位的值\n                if \"MiB\" in KorM:\n                    # 若有则转换为KiB\n                    print(\"输出结果为MiB单位,将进行转换\")\n                    bw[0] += bw_num[0] * 1024\n                    bw[1] += bw_num[1] * 1024\n                    bw[2] += bw_num[3] * 1024\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                elif \"KiB\" in KorM:\n                    print(\"输出结果为KiB单位,不转换\")\n                    bw[0] += bw_num[0]\n                    bw[1] += bw_num[1]\n                    bw[2] += bw_num[3]\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n\n    bwMin = int(bw[0] / 3)\n    bwMax = int(bw[1] / 3)\n    bwAvg = int(bw[2] / 3)\n    iopsMin = int(iops[0] / 3)\n    iopsMax = int(iops[1] / 3)\n    iopsAvg = int(iops[2] / 3)\n\n    print(\n        f\"\\n\\n\\n随机读均值如下:\\n带宽最小值:{bwMin},最大值{bwMax},均值{bwAvg}\\nIOPS最小值:{iopsMin},\"\n        f\"最大值{iopsMax},均值{iopsAvg}\"\n    )\n\n\n# 随机读写\ndef randrw():\n    # 初始化用于存储运行结果的列表\n    bw = [0, 0, 0, 0, 0, 0]\n    iops = [0, 0, 0, 0, 0, 0]\n    # fio重复运行4次\n    print(\"随机读写进行中...\")\n    for i in range(4):\n        cmd = [\n            \"fio\",\n            \"-name=YEOS\",\n            \"-size=32G\",\n            \"-runtime=60s\",\n            \"-time_base\",\n            \"-bs=4k\",\n            \"-direct=1\",\n            \"-rw=randrw\",\n            \"-ioengine=libaio\",\n            \"-numjobs=8\",\n            \"-group_reporting\",\n            \"-iodepth=64\",\n            \"-filename=/iopsTest/read\",\n            \"-rwmixwrite=30\",\n            \"-randrepeat=0\",\n        ]\n\n        # 将fio运行结果标准输出到管道\n        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n\n        fio2 = subprocess.Popen(\n            [\"grep\", \"samples\"], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=False\n        )\n\n        # 使用communicate获取子进程的标准输出并格式化为utf-8编码\n        fio = fio2.communicate()[0].decode(\"utf-8\")\n\n        # 初始化列表\n        bw_num = []\n        iops_num = []\n        # 匹配数字和小数点，并将其元素更新\n        for line in fio.split(\"\\n\"):\n            if \"bw\" in line:\n                bw_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n            elif \"iops\" in line:\n                iops_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n\n        # 将str类型转换为float后再转换为int\n        bw_num = [int(float(e)) for e in bw_num]\n        iops_num = [int(float(e)) for e in iops_num]\n\n        print(f\"单次带宽运行结果:{bw_num}\")\n        print(f\"单次IOPS运行结果:{iops_num}\")\n        # 跳过第一次运行结果\n        if i == 0:\n            continue\n        else:\n            # 格式化fio结果\n            for KorM in fio.split(\"\\n\"):\n                # 判断格式化的结果中是否存在MiB单位的值\n                if \"MiB\" in KorM:\n                    print(\"输出结果为MiB单位,将进行转换\")\n                    # 若有则转换为KiB\n                    # 读带宽\n                    bw[0] += bw_num[0] * 1024\n                    bw[1] += bw_num[1] * 1024\n                    bw[2] += bw_num[3] * 1024\n                    # 写带宽\n                    bw[3] += bw_num[6] * 1024\n                    bw[4] += bw_num[7] * 1024\n                    bw[5] += bw_num[9] * 1024\n                    # 读IOPS\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    # 写IOPS\n                    iops[3] += iops_num[5]\n                    iops[4] += iops_num[6]\n                    iops[5] += iops_num[7]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                    # 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环\n                    break\n                elif \"KiB\" in KorM:\n                    print(\"输出结果为KiB单位,不转换\")\n                    # 读带宽\n                    bw[0] += bw_num[0]\n                    bw[1] += bw_num[1]\n                    bw[2] += bw_num[3]\n                    # 写带宽\n                    bw[3] += bw_num[6]\n                    bw[4] += bw_num[7]\n                    bw[5] += bw_num[9]\n                    # 读IOPS\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    # 写IOPS\n                    iops[3] += iops_num[5]\n                    iops[4] += iops_num[6]\n                    iops[5] += iops_num[7]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                    # 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环\n                    break\n\n    RbwMin = int(bw[0] / 3)\n    RbwMax = int(bw[1] / 3)\n    RbwAvg = int(bw[2] / 3)\n\n    WbwMin = int(bw[3] / 3)\n    WbwMax = int(bw[4] / 3)\n    WbwAvg = int(bw[5] / 3)\n\n    RiopsMin = int(iops[3] / 3)\n    RiopsMax = int(iops[4] / 3)\n    RiopsAvg = int(iops[5] / 3)\n\n    WiopsMin = int(iops[0] / 3)\n    WiopsMax = int(iops[1] / 3)\n    WiopsAvg = int(iops[2] / 3)\n    print(\n        f\"\\n\\n\\n随机读写均值如下:\\n\"\n        f\"读:\\n带宽最小值:{RbwMin},最大值{RbwMax},均值{RbwAvg}\\nIOPS最小值:{RiopsMin},\"\n        f\"最大值{RiopsMax},均值{RiopsAvg}\"\n        \"\\n\"\n        f\"写:\\n带宽最小值:{WbwMin},最大值{WbwMax},均值{WbwAvg}\\nIOPS最小值:{WiopsMin},\"\n        f\"最大值{WiopsMax},均值{WiopsAvg}\"\n    )\n\n\ndef rm_file():\n    print(\"请等待程序清除测试残留文件...\")\n    rm = os.system(\"rm -rf /smbTest/*\")\n    print(\"清除完毕,程序结束!\")\n\n\nif __name__ == \"__main__\":\n    print(\"欢迎使用群晖测试工具\\n本工具测试内容:\\n路径挂载模式下IOPS性能测试\")\n    rm_file()\n    randwrite()\n    rm_file()\n    create_readFile()\n    randread()\n    randrw()\n    rm_file()\n```","source":"_posts/记录初学Python开发fio测试工具.md","raw":"---\ntitle: 记录初学Python开发fio测试工具\ncategories: [软件开发]\ncomments: true\ndate: 2023-03-20 18:19:44\nkeywords: python,fio\ntags:\n    - python\n---\n\n# 使用Python自动测试IOPS性能并格式化输出\n\n>代码过多,请点击**阅读全文**查看\n\n<!-- more -->\n\n```python\n#!/usr/bin/python3\n\n\"\"\"\nTODO:\n    此脚本已测试兼容环境为Debian 11.6\n    此脚本的测试路径为\"/iopsTest\",请提前将你要测试的设备挂载到\"/iopsTest\"\n    注意自行根据盘位修改下列numjobs参数\n\"\"\"\n\nimport subprocess, re, os\n\n\n# 随机写\ndef randwrite():\n    # 初始化用于存储运行结果的列表\n    bw = [0, 0, 0]\n    iops = [0, 0, 0]\n\n    # fio重复运行4次\n    print(\"随机写进行中...\")\n    for i in range(4):\n        cmd = [\n            \"fio\",\n            \"-name=YEOS\",\n            \"-size=32G\",\n            \"-runtime=60s\",\n            \"-time_base\",\n            \"-bs=4k\",\n            \"-direct=1\",\n            \"-rw=randwrite\",\n            \"-ioengine=libaio\",\n            \"-numjobs=8\",\n            \"-group_reporting\",\n            \"-iodepth=64\",\n            f\"-filename=/iopsTest/{i}\",\n            \"-randrepeat=0\",\n        ]\n\n        # 将fio运行结果标准输出到管道\n        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n        fio2 = subprocess.Popen(\n            [\"grep\", \"samples\"], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=False\n        )\n\n        # 使用communicate获取子进程的标准输出并格式化为utf-8编码\n        fio = fio2.communicate()[0].decode(\"utf-8\")\n\n        # 初始化列表\n        bw_num = []\n        iops_num = []\n\n        # 匹配数字和小数点，并将其元素更新\n        for line in fio.split(\"\\n\"):\n            if \"bw\" in line:\n                bw_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n            elif \"iops\" in line:\n                iops_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n\n        # 将str类型转换为float后再转换为int\n        bw_num = [int(float(e)) for e in bw_num]\n        iops_num = [int(float(e)) for e in iops_num]\n        print(f\"单次带宽运行结果:{bw_num}\")\n        print(f\"单次IOPS运行结果:{iops_num}\")\n\n        # 跳过第一次运行结果\n        if i == 0:\n            continue\n        else:\n            # 格式化fio结果\n            for KorM in fio.split(\"\\n\"):\n                # 判断格式化的结果中是否存在MiB单位的值\n                if \"MiB\" in KorM:\n                    # 若有则转换为KiB\n                    print(\"输出结果为MiB单位,将进行转换\")\n                    bw[0] += bw_num[0] * 1024\n                    bw[1] += bw_num[1] * 1024\n                    bw[2] += bw_num[3] * 1024\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                elif \"KiB\" in KorM:\n                    print(\"输出结果为KiB单位,不转换\")\n                    bw[0] += bw_num[0]\n                    bw[1] += bw_num[1]\n                    bw[2] += bw_num[3]\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n\n    bwMin = int(bw[0] / 3)\n    bwMax = int(bw[1] / 3)\n    bwAvg = int(bw[2] / 3)\n    iopsMin = int(iops[0] / 3)\n    iopsMax = int(iops[1] / 3)\n    iopsAvg = int(iops[2] / 3)\n\n    print(\n        f\"\\n\\n\\n随机写均值如下:\\n带宽最小值:{bwMin},最大值{bwMax},均值{bwAvg}\\nIOPS最小值:{iopsMin},\"\n        f\"最大值{iopsMax},均值{iopsAvg}\"\n    )\n\n\n# 创建读文件\ndef create_readFile():\n    print(\"初始化读测试环境,至少需要十几分钟甚至几十分钟,等着...\")\n    clear = subprocess.Popen([\"rm\", \"-rf\", \"/iopsTest/*\"], shell=False)\n    clear.wait()\n    print(\"环境检测完成,创建读测试文件...\")\n    cmd = [\n        \"fio\",\n        \"-name=create_read\",\n        \"-size=32G\",\n        \"-bs=1M\",\n        \"-direct=1\",\n        \"-rw=write\",\n        \"-ioengine=libaio\",\n        \"-numjobs=8\",\n        \"-filename=/iopsTest/read\",\n    ]\n    create = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n    done = create.communicate()[0].decode(\"utf-8\")\n\n\n# 随机读\ndef randread():\n    # 初始化用于存储运行结果的列表\n    bw = [0, 0, 0]\n    iops = [0, 0, 0]\n    # fio重复运行4次\n    print(\"随机读进行中...\")\n\n    for i in range(4):\n        cmd = [\n            \"fio\",\n            \"-name=YEOS\",\n            \"-size=32G\",\n            \"-runtime=60s\",\n            \"-time_base\",\n            \"-bs=4k\",\n            \"-direct=1\",\n            \"-rw=randwrite\",\n            \"-ioengine=libaio\",\n            \"-numjobs=8\",\n            \"-group_reporting\",\n            \"-iodepth=64\",\n            \"-filename=/iopsTest/read\",\n            \"-randrepeat=0\",\n        ]\n\n        # 将fio运行结果标准输出到管道\n        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n        fio2 = subprocess.Popen(\n            [\"grep\", \"samples\"], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=False\n        )\n\n        # 使用communicate获取子进程的标准输出并格式化为utf-8编码\n        fio = fio2.communicate()[0].decode(\"utf-8\")\n\n        # 初始化列表\n        bw_num = []\n        iops_num = []\n\n        # 匹配数字和小数点，并将其元素更新\n        for line in fio.split(\"\\n\"):\n            if \"bw\" in line:\n                bw_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n            elif \"iops\" in line:\n                iops_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n\n        # 将str类型转换为float后再转换为int\n        bw_num = [int(float(e)) for e in bw_num]\n        iops_num = [int(float(e)) for e in iops_num]\n        print(f\"单次带宽运行结果:{bw_num}\")\n        print(f\"单次IOPS运行结果:{iops_num}\")\n\n        # 跳过第一次运行结果\n        if i == 0:\n            continue\n        else:\n            # 格式化fio结果\n            for KorM in fio.split(\"\\n\"):\n                # 判断格式化的结果中是否存在MiB单位的值\n                if \"MiB\" in KorM:\n                    # 若有则转换为KiB\n                    print(\"输出结果为MiB单位,将进行转换\")\n                    bw[0] += bw_num[0] * 1024\n                    bw[1] += bw_num[1] * 1024\n                    bw[2] += bw_num[3] * 1024\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                elif \"KiB\" in KorM:\n                    print(\"输出结果为KiB单位,不转换\")\n                    bw[0] += bw_num[0]\n                    bw[1] += bw_num[1]\n                    bw[2] += bw_num[3]\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n\n    bwMin = int(bw[0] / 3)\n    bwMax = int(bw[1] / 3)\n    bwAvg = int(bw[2] / 3)\n    iopsMin = int(iops[0] / 3)\n    iopsMax = int(iops[1] / 3)\n    iopsAvg = int(iops[2] / 3)\n\n    print(\n        f\"\\n\\n\\n随机读均值如下:\\n带宽最小值:{bwMin},最大值{bwMax},均值{bwAvg}\\nIOPS最小值:{iopsMin},\"\n        f\"最大值{iopsMax},均值{iopsAvg}\"\n    )\n\n\n# 随机读写\ndef randrw():\n    # 初始化用于存储运行结果的列表\n    bw = [0, 0, 0, 0, 0, 0]\n    iops = [0, 0, 0, 0, 0, 0]\n    # fio重复运行4次\n    print(\"随机读写进行中...\")\n    for i in range(4):\n        cmd = [\n            \"fio\",\n            \"-name=YEOS\",\n            \"-size=32G\",\n            \"-runtime=60s\",\n            \"-time_base\",\n            \"-bs=4k\",\n            \"-direct=1\",\n            \"-rw=randrw\",\n            \"-ioengine=libaio\",\n            \"-numjobs=8\",\n            \"-group_reporting\",\n            \"-iodepth=64\",\n            \"-filename=/iopsTest/read\",\n            \"-rwmixwrite=30\",\n            \"-randrepeat=0\",\n        ]\n\n        # 将fio运行结果标准输出到管道\n        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=False)\n\n        fio2 = subprocess.Popen(\n            [\"grep\", \"samples\"], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=False\n        )\n\n        # 使用communicate获取子进程的标准输出并格式化为utf-8编码\n        fio = fio2.communicate()[0].decode(\"utf-8\")\n\n        # 初始化列表\n        bw_num = []\n        iops_num = []\n        # 匹配数字和小数点，并将其元素更新\n        for line in fio.split(\"\\n\"):\n            if \"bw\" in line:\n                bw_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n            elif \"iops\" in line:\n                iops_num.extend(re.findall(r\"\\d+\\.\\d+|\\d+\", line))\n\n        # 将str类型转换为float后再转换为int\n        bw_num = [int(float(e)) for e in bw_num]\n        iops_num = [int(float(e)) for e in iops_num]\n\n        print(f\"单次带宽运行结果:{bw_num}\")\n        print(f\"单次IOPS运行结果:{iops_num}\")\n        # 跳过第一次运行结果\n        if i == 0:\n            continue\n        else:\n            # 格式化fio结果\n            for KorM in fio.split(\"\\n\"):\n                # 判断格式化的结果中是否存在MiB单位的值\n                if \"MiB\" in KorM:\n                    print(\"输出结果为MiB单位,将进行转换\")\n                    # 若有则转换为KiB\n                    # 读带宽\n                    bw[0] += bw_num[0] * 1024\n                    bw[1] += bw_num[1] * 1024\n                    bw[2] += bw_num[3] * 1024\n                    # 写带宽\n                    bw[3] += bw_num[6] * 1024\n                    bw[4] += bw_num[7] * 1024\n                    bw[5] += bw_num[9] * 1024\n                    # 读IOPS\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    # 写IOPS\n                    iops[3] += iops_num[5]\n                    iops[4] += iops_num[6]\n                    iops[5] += iops_num[7]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                    # 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环\n                    break\n                elif \"KiB\" in KorM:\n                    print(\"输出结果为KiB单位,不转换\")\n                    # 读带宽\n                    bw[0] += bw_num[0]\n                    bw[1] += bw_num[1]\n                    bw[2] += bw_num[3]\n                    # 写带宽\n                    bw[3] += bw_num[6]\n                    bw[4] += bw_num[7]\n                    bw[5] += bw_num[9]\n                    # 读IOPS\n                    iops[0] += iops_num[0]\n                    iops[1] += iops_num[1]\n                    iops[2] += iops_num[2]\n                    # 写IOPS\n                    iops[3] += iops_num[5]\n                    iops[4] += iops_num[6]\n                    iops[5] += iops_num[7]\n                    print(f\"带宽第{i}次值:{bw}\")\n                    print(f\"IOPS第{i}次值:{iops}\")\n                    # 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环\n                    break\n\n    RbwMin = int(bw[0] / 3)\n    RbwMax = int(bw[1] / 3)\n    RbwAvg = int(bw[2] / 3)\n\n    WbwMin = int(bw[3] / 3)\n    WbwMax = int(bw[4] / 3)\n    WbwAvg = int(bw[5] / 3)\n\n    RiopsMin = int(iops[3] / 3)\n    RiopsMax = int(iops[4] / 3)\n    RiopsAvg = int(iops[5] / 3)\n\n    WiopsMin = int(iops[0] / 3)\n    WiopsMax = int(iops[1] / 3)\n    WiopsAvg = int(iops[2] / 3)\n    print(\n        f\"\\n\\n\\n随机读写均值如下:\\n\"\n        f\"读:\\n带宽最小值:{RbwMin},最大值{RbwMax},均值{RbwAvg}\\nIOPS最小值:{RiopsMin},\"\n        f\"最大值{RiopsMax},均值{RiopsAvg}\"\n        \"\\n\"\n        f\"写:\\n带宽最小值:{WbwMin},最大值{WbwMax},均值{WbwAvg}\\nIOPS最小值:{WiopsMin},\"\n        f\"最大值{WiopsMax},均值{WiopsAvg}\"\n    )\n\n\ndef rm_file():\n    print(\"请等待程序清除测试残留文件...\")\n    rm = os.system(\"rm -rf /smbTest/*\")\n    print(\"清除完毕,程序结束!\")\n\n\nif __name__ == \"__main__\":\n    print(\"欢迎使用群晖测试工具\\n本工具测试内容:\\n路径挂载模式下IOPS性能测试\")\n    rm_file()\n    randwrite()\n    rm_file()\n    create_readFile()\n    randread()\n    randrw()\n    rm_file()\n```","slug":"记录初学Python开发fio测试工具","published":1,"updated":"2025-09-04T06:44:07.229Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwu8002d9szw2nq29jz8","content":"<h1 id=\"使用Python自动测试IOPS性能并格式化输出\"><a href=\"#使用Python自动测试IOPS性能并格式化输出\" class=\"headerlink\" title=\"使用Python自动测试IOPS性能并格式化输出\"></a>使用Python自动测试IOPS性能并格式化输出</h1><blockquote>\n<p>代码过多,请点击<strong>阅读全文</strong>查看</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">TODO:</span></span><br><span class=\"line\"><span class=\"string\">    此脚本已测试兼容环境为Debian 11.6</span></span><br><span class=\"line\"><span class=\"string\">    此脚本的测试路径为&quot;/iopsTest&quot;,请提前将你要测试的设备挂载到&quot;/iopsTest&quot;</span></span><br><span class=\"line\"><span class=\"string\">    注意自行根据盘位修改下列numjobs参数</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess, re, os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机写</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">randwrite</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 初始化用于存储运行结果的列表</span></span><br><span class=\"line\">    bw = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    iops = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># fio重复运行4次</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;随机写进行中...&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        cmd = [</span><br><span class=\"line\">            <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-name=YEOS&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-runtime=60s&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-time_base&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-bs=4k&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rw=randwrite&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-group_reporting&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-iodepth=64&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">f&quot;-filename=/iopsTest/<span class=\"subst\">&#123;i&#125;</span>&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-randrepeat=0&quot;</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将fio运行结果标准输出到管道</span></span><br><span class=\"line\">        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        fio2 = subprocess.Popen(</span><br><span class=\"line\">            [<span class=\"string\">&quot;grep&quot;</span>, <span class=\"string\">&quot;samples&quot;</span>], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用communicate获取子进程的标准输出并格式化为utf-8编码</span></span><br><span class=\"line\">        fio = fio2.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 初始化列表</span></span><br><span class=\"line\">        bw_num = []</span><br><span class=\"line\">        iops_num = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 匹配数字和小数点，并将其元素更新</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;bw&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                bw_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> <span class=\"string\">&quot;iops&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                iops_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将str类型转换为float后再转换为int</span></span><br><span class=\"line\">        bw_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> bw_num]</span><br><span class=\"line\">        iops_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> iops_num]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次带宽运行结果:<span class=\"subst\">&#123;bw_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次IOPS运行结果:<span class=\"subst\">&#123;iops_num&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 跳过第一次运行结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 格式化fio结果</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> KorM <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">                <span class=\"comment\"># 判断格式化的结果中是否存在MiB单位的值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&quot;MiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"comment\"># 若有则转换为KiB</span></span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为MiB单位,将进行转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"string\">&quot;KiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为KiB单位,不转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    bwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(</span><br><span class=\"line\">        <span class=\"string\">f&quot;\\n\\n\\n随机写均值如下:\\n带宽最小值:<span class=\"subst\">&#123;bwMin&#125;</span>,最大值<span class=\"subst\">&#123;bwMax&#125;</span>,均值<span class=\"subst\">&#123;bwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;iopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;iopsMax&#125;</span>,均值<span class=\"subst\">&#123;iopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建读文件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_readFile</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;初始化读测试环境,至少需要十几分钟甚至几十分钟,等着...&quot;</span>)</span><br><span class=\"line\">    clear = subprocess.Popen([<span class=\"string\">&quot;rm&quot;</span>, <span class=\"string\">&quot;-rf&quot;</span>, <span class=\"string\">&quot;/iopsTest/*&quot;</span>], shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    clear.wait()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;环境检测完成,创建读测试文件...&quot;</span>)</span><br><span class=\"line\">    cmd = [</span><br><span class=\"line\">        <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-name=create_read&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-bs=1M&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-rw=write&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-filename=/iopsTest/read&quot;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    create = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    done = create.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机读</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">randread</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 初始化用于存储运行结果的列表</span></span><br><span class=\"line\">    bw = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    iops = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># fio重复运行4次</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;随机读进行中...&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        cmd = [</span><br><span class=\"line\">            <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-name=YEOS&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-runtime=60s&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-time_base&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-bs=4k&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rw=randwrite&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-group_reporting&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-iodepth=64&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-filename=/iopsTest/read&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-randrepeat=0&quot;</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将fio运行结果标准输出到管道</span></span><br><span class=\"line\">        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        fio2 = subprocess.Popen(</span><br><span class=\"line\">            [<span class=\"string\">&quot;grep&quot;</span>, <span class=\"string\">&quot;samples&quot;</span>], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用communicate获取子进程的标准输出并格式化为utf-8编码</span></span><br><span class=\"line\">        fio = fio2.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 初始化列表</span></span><br><span class=\"line\">        bw_num = []</span><br><span class=\"line\">        iops_num = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 匹配数字和小数点，并将其元素更新</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;bw&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                bw_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> <span class=\"string\">&quot;iops&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                iops_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将str类型转换为float后再转换为int</span></span><br><span class=\"line\">        bw_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> bw_num]</span><br><span class=\"line\">        iops_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> iops_num]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次带宽运行结果:<span class=\"subst\">&#123;bw_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次IOPS运行结果:<span class=\"subst\">&#123;iops_num&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 跳过第一次运行结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 格式化fio结果</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> KorM <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">                <span class=\"comment\"># 判断格式化的结果中是否存在MiB单位的值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&quot;MiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"comment\"># 若有则转换为KiB</span></span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为MiB单位,将进行转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"string\">&quot;KiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为KiB单位,不转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    bwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(</span><br><span class=\"line\">        <span class=\"string\">f&quot;\\n\\n\\n随机读均值如下:\\n带宽最小值:<span class=\"subst\">&#123;bwMin&#125;</span>,最大值<span class=\"subst\">&#123;bwMax&#125;</span>,均值<span class=\"subst\">&#123;bwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;iopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;iopsMax&#125;</span>,均值<span class=\"subst\">&#123;iopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机读写</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">randrw</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 初始化用于存储运行结果的列表</span></span><br><span class=\"line\">    bw = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    iops = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># fio重复运行4次</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;随机读写进行中...&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        cmd = [</span><br><span class=\"line\">            <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-name=YEOS&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-runtime=60s&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-time_base&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-bs=4k&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rw=randrw&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-group_reporting&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-iodepth=64&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-filename=/iopsTest/read&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rwmixwrite=30&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-randrepeat=0&quot;</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将fio运行结果标准输出到管道</span></span><br><span class=\"line\">        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        fio2 = subprocess.Popen(</span><br><span class=\"line\">            [<span class=\"string\">&quot;grep&quot;</span>, <span class=\"string\">&quot;samples&quot;</span>], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用communicate获取子进程的标准输出并格式化为utf-8编码</span></span><br><span class=\"line\">        fio = fio2.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 初始化列表</span></span><br><span class=\"line\">        bw_num = []</span><br><span class=\"line\">        iops_num = []</span><br><span class=\"line\">        <span class=\"comment\"># 匹配数字和小数点，并将其元素更新</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;bw&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                bw_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> <span class=\"string\">&quot;iops&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                iops_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将str类型转换为float后再转换为int</span></span><br><span class=\"line\">        bw_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> bw_num]</span><br><span class=\"line\">        iops_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> iops_num]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次带宽运行结果:<span class=\"subst\">&#123;bw_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次IOPS运行结果:<span class=\"subst\">&#123;iops_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 跳过第一次运行结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 格式化fio结果</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> KorM <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">                <span class=\"comment\"># 判断格式化的结果中是否存在MiB单位的值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&quot;MiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为MiB单位,将进行转换&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 若有则转换为KiB</span></span><br><span class=\"line\">                    <span class=\"comment\"># 读带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    <span class=\"comment\"># 写带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">3</span>] += bw_num[<span class=\"number\">6</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">4</span>] += bw_num[<span class=\"number\">7</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">5</span>] += bw_num[<span class=\"number\">9</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    <span class=\"comment\"># 读IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 写IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">3</span>] += iops_num[<span class=\"number\">5</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">4</span>] += iops_num[<span class=\"number\">6</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">5</span>] += iops_num[<span class=\"number\">7</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"string\">&quot;KiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为KiB单位,不转换&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 读带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 写带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">3</span>] += bw_num[<span class=\"number\">6</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">4</span>] += bw_num[<span class=\"number\">7</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">5</span>] += bw_num[<span class=\"number\">9</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 读IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 写IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">3</span>] += iops_num[<span class=\"number\">5</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">4</span>] += iops_num[<span class=\"number\">6</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">5</span>] += iops_num[<span class=\"number\">7</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    RbwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RbwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RbwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    WbwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">3</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WbwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">4</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WbwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">5</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    RiopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">3</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RiopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">4</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RiopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">5</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    WiopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WiopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WiopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(</span><br><span class=\"line\">        <span class=\"string\">f&quot;\\n\\n\\n随机读写均值如下:\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;读:\\n带宽最小值:<span class=\"subst\">&#123;RbwMin&#125;</span>,最大值<span class=\"subst\">&#123;RbwMax&#125;</span>,均值<span class=\"subst\">&#123;RbwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;RiopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;RiopsMax&#125;</span>,均值<span class=\"subst\">&#123;RiopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;写:\\n带宽最小值:<span class=\"subst\">&#123;WbwMin&#125;</span>,最大值<span class=\"subst\">&#123;WbwMax&#125;</span>,均值<span class=\"subst\">&#123;WbwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;WiopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;WiopsMax&#125;</span>,均值<span class=\"subst\">&#123;WiopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rm_file</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请等待程序清除测试残留文件...&quot;</span>)</span><br><span class=\"line\">    rm = os.system(<span class=\"string\">&quot;rm -rf /smbTest/*&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;清除完毕,程序结束!&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;欢迎使用群晖测试工具\\n本工具测试内容:\\n路径挂载模式下IOPS性能测试&quot;</span>)</span><br><span class=\"line\">    rm_file()</span><br><span class=\"line\">    randwrite()</span><br><span class=\"line\">    rm_file()</span><br><span class=\"line\">    create_readFile()</span><br><span class=\"line\">    randread()</span><br><span class=\"line\">    randrw()</span><br><span class=\"line\">    rm_file()</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1863,"excerpt":"<h1 id=\"使用Python自动测试IOPS性能并格式化输出\"><a href=\"#使用Python自动测试IOPS性能并格式化输出\" class=\"headerlink\" title=\"使用Python自动测试IOPS性能并格式化输出\"></a>使用Python自动测试IOPS性能并格式化输出</h1><blockquote>\n<p>代码过多,请点击<strong>阅读全文</strong>查看</p>\n</blockquote>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">TODO:</span></span><br><span class=\"line\"><span class=\"string\">    此脚本已测试兼容环境为Debian 11.6</span></span><br><span class=\"line\"><span class=\"string\">    此脚本的测试路径为&quot;/iopsTest&quot;,请提前将你要测试的设备挂载到&quot;/iopsTest&quot;</span></span><br><span class=\"line\"><span class=\"string\">    注意自行根据盘位修改下列numjobs参数</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess, re, os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机写</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">randwrite</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 初始化用于存储运行结果的列表</span></span><br><span class=\"line\">    bw = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    iops = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># fio重复运行4次</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;随机写进行中...&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        cmd = [</span><br><span class=\"line\">            <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-name=YEOS&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-runtime=60s&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-time_base&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-bs=4k&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rw=randwrite&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-group_reporting&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-iodepth=64&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">f&quot;-filename=/iopsTest/<span class=\"subst\">&#123;i&#125;</span>&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-randrepeat=0&quot;</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将fio运行结果标准输出到管道</span></span><br><span class=\"line\">        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        fio2 = subprocess.Popen(</span><br><span class=\"line\">            [<span class=\"string\">&quot;grep&quot;</span>, <span class=\"string\">&quot;samples&quot;</span>], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用communicate获取子进程的标准输出并格式化为utf-8编码</span></span><br><span class=\"line\">        fio = fio2.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 初始化列表</span></span><br><span class=\"line\">        bw_num = []</span><br><span class=\"line\">        iops_num = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 匹配数字和小数点，并将其元素更新</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;bw&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                bw_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> <span class=\"string\">&quot;iops&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                iops_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将str类型转换为float后再转换为int</span></span><br><span class=\"line\">        bw_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> bw_num]</span><br><span class=\"line\">        iops_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> iops_num]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次带宽运行结果:<span class=\"subst\">&#123;bw_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次IOPS运行结果:<span class=\"subst\">&#123;iops_num&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 跳过第一次运行结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 格式化fio结果</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> KorM <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">                <span class=\"comment\"># 判断格式化的结果中是否存在MiB单位的值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&quot;MiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"comment\"># 若有则转换为KiB</span></span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为MiB单位,将进行转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"string\">&quot;KiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为KiB单位,不转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    bwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(</span><br><span class=\"line\">        <span class=\"string\">f&quot;\\n\\n\\n随机写均值如下:\\n带宽最小值:<span class=\"subst\">&#123;bwMin&#125;</span>,最大值<span class=\"subst\">&#123;bwMax&#125;</span>,均值<span class=\"subst\">&#123;bwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;iopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;iopsMax&#125;</span>,均值<span class=\"subst\">&#123;iopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建读文件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_readFile</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;初始化读测试环境,至少需要十几分钟甚至几十分钟,等着...&quot;</span>)</span><br><span class=\"line\">    clear = subprocess.Popen([<span class=\"string\">&quot;rm&quot;</span>, <span class=\"string\">&quot;-rf&quot;</span>, <span class=\"string\">&quot;/iopsTest/*&quot;</span>], shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    clear.wait()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;环境检测完成,创建读测试文件...&quot;</span>)</span><br><span class=\"line\">    cmd = [</span><br><span class=\"line\">        <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-name=create_read&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-bs=1M&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-rw=write&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-filename=/iopsTest/read&quot;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    create = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    done = create.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机读</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">randread</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 初始化用于存储运行结果的列表</span></span><br><span class=\"line\">    bw = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    iops = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># fio重复运行4次</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;随机读进行中...&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        cmd = [</span><br><span class=\"line\">            <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-name=YEOS&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-runtime=60s&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-time_base&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-bs=4k&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rw=randwrite&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-group_reporting&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-iodepth=64&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-filename=/iopsTest/read&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-randrepeat=0&quot;</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将fio运行结果标准输出到管道</span></span><br><span class=\"line\">        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        fio2 = subprocess.Popen(</span><br><span class=\"line\">            [<span class=\"string\">&quot;grep&quot;</span>, <span class=\"string\">&quot;samples&quot;</span>], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用communicate获取子进程的标准输出并格式化为utf-8编码</span></span><br><span class=\"line\">        fio = fio2.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 初始化列表</span></span><br><span class=\"line\">        bw_num = []</span><br><span class=\"line\">        iops_num = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 匹配数字和小数点，并将其元素更新</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;bw&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                bw_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> <span class=\"string\">&quot;iops&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                iops_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将str类型转换为float后再转换为int</span></span><br><span class=\"line\">        bw_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> bw_num]</span><br><span class=\"line\">        iops_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> iops_num]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次带宽运行结果:<span class=\"subst\">&#123;bw_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次IOPS运行结果:<span class=\"subst\">&#123;iops_num&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 跳过第一次运行结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 格式化fio结果</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> KorM <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">                <span class=\"comment\"># 判断格式化的结果中是否存在MiB单位的值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&quot;MiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"comment\"># 若有则转换为KiB</span></span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为MiB单位,将进行转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"string\">&quot;KiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为KiB单位,不转换&quot;</span>)</span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    bwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    bwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    iopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(</span><br><span class=\"line\">        <span class=\"string\">f&quot;\\n\\n\\n随机读均值如下:\\n带宽最小值:<span class=\"subst\">&#123;bwMin&#125;</span>,最大值<span class=\"subst\">&#123;bwMax&#125;</span>,均值<span class=\"subst\">&#123;bwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;iopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;iopsMax&#125;</span>,均值<span class=\"subst\">&#123;iopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 随机读写</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">randrw</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 初始化用于存储运行结果的列表</span></span><br><span class=\"line\">    bw = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    iops = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># fio重复运行4次</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;随机读写进行中...&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">        cmd = [</span><br><span class=\"line\">            <span class=\"string\">&quot;fio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-name=YEOS&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-size=32G&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-runtime=60s&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-time_base&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-bs=4k&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-direct=1&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rw=randrw&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-ioengine=libaio&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-numjobs=8&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-group_reporting&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-iodepth=64&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-filename=/iopsTest/read&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-rwmixwrite=30&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;-randrepeat=0&quot;</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将fio运行结果标准输出到管道</span></span><br><span class=\"line\">        fio1 = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        fio2 = subprocess.Popen(</span><br><span class=\"line\">            [<span class=\"string\">&quot;grep&quot;</span>, <span class=\"string\">&quot;samples&quot;</span>], stdin=fio1.stdout, stdout=subprocess.PIPE, shell=<span class=\"literal\">False</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用communicate获取子进程的标准输出并格式化为utf-8编码</span></span><br><span class=\"line\">        fio = fio2.communicate()[<span class=\"number\">0</span>].decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 初始化列表</span></span><br><span class=\"line\">        bw_num = []</span><br><span class=\"line\">        iops_num = []</span><br><span class=\"line\">        <span class=\"comment\"># 匹配数字和小数点，并将其元素更新</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;bw&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                bw_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> <span class=\"string\">&quot;iops&quot;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                iops_num.extend(re.findall(<span class=\"string\">r&quot;\\d+\\.\\d+|\\d+&quot;</span>, line))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 将str类型转换为float后再转换为int</span></span><br><span class=\"line\">        bw_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> bw_num]</span><br><span class=\"line\">        iops_num = [<span class=\"built_in\">int</span>(<span class=\"built_in\">float</span>(e)) <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> iops_num]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次带宽运行结果:<span class=\"subst\">&#123;bw_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;单次IOPS运行结果:<span class=\"subst\">&#123;iops_num&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 跳过第一次运行结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 格式化fio结果</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> KorM <span class=\"keyword\">in</span> fio.split(<span class=\"string\">&quot;\\n&quot;</span>):</span><br><span class=\"line\">                <span class=\"comment\"># 判断格式化的结果中是否存在MiB单位的值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">&quot;MiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为MiB单位,将进行转换&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 若有则转换为KiB</span></span><br><span class=\"line\">                    <span class=\"comment\"># 读带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    <span class=\"comment\"># 写带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">3</span>] += bw_num[<span class=\"number\">6</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">4</span>] += bw_num[<span class=\"number\">7</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    bw[<span class=\"number\">5</span>] += bw_num[<span class=\"number\">9</span>] * <span class=\"number\">1024</span></span><br><span class=\"line\">                    <span class=\"comment\"># 读IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 写IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">3</span>] += iops_num[<span class=\"number\">5</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">4</span>] += iops_num[<span class=\"number\">6</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">5</span>] += iops_num[<span class=\"number\">7</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">elif</span> <span class=\"string\">&quot;KiB&quot;</span> <span class=\"keyword\">in</span> KorM:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出结果为KiB单位,不转换&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 读带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">0</span>] += bw_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">1</span>] += bw_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">2</span>] += bw_num[<span class=\"number\">3</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 写带宽</span></span><br><span class=\"line\">                    bw[<span class=\"number\">3</span>] += bw_num[<span class=\"number\">6</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">4</span>] += bw_num[<span class=\"number\">7</span>]</span><br><span class=\"line\">                    bw[<span class=\"number\">5</span>] += bw_num[<span class=\"number\">9</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 读IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">0</span>] += iops_num[<span class=\"number\">0</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">1</span>] += iops_num[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">2</span>] += iops_num[<span class=\"number\">2</span>]</span><br><span class=\"line\">                    <span class=\"comment\"># 写IOPS</span></span><br><span class=\"line\">                    iops[<span class=\"number\">3</span>] += iops_num[<span class=\"number\">5</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">4</span>] += iops_num[<span class=\"number\">6</span>]</span><br><span class=\"line\">                    iops[<span class=\"number\">5</span>] += iops_num[<span class=\"number\">7</span>]</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;带宽第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;bw&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;IOPS第<span class=\"subst\">&#123;i&#125;</span>次值:<span class=\"subst\">&#123;iops&#125;</span>&quot;</span>)</span><br><span class=\"line\">                    <span class=\"comment\"># 因fio结果存在读写两行，避免重复执行，所以直接跳过后续循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    RbwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RbwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RbwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    WbwMin = <span class=\"built_in\">int</span>(bw[<span class=\"number\">3</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WbwMax = <span class=\"built_in\">int</span>(bw[<span class=\"number\">4</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WbwAvg = <span class=\"built_in\">int</span>(bw[<span class=\"number\">5</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    RiopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">3</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RiopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">4</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    RiopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">5</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    WiopsMin = <span class=\"built_in\">int</span>(iops[<span class=\"number\">0</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WiopsMax = <span class=\"built_in\">int</span>(iops[<span class=\"number\">1</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    WiopsAvg = <span class=\"built_in\">int</span>(iops[<span class=\"number\">2</span>] / <span class=\"number\">3</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(</span><br><span class=\"line\">        <span class=\"string\">f&quot;\\n\\n\\n随机读写均值如下:\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;读:\\n带宽最小值:<span class=\"subst\">&#123;RbwMin&#125;</span>,最大值<span class=\"subst\">&#123;RbwMax&#125;</span>,均值<span class=\"subst\">&#123;RbwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;RiopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;RiopsMax&#125;</span>,均值<span class=\"subst\">&#123;RiopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;写:\\n带宽最小值:<span class=\"subst\">&#123;WbwMin&#125;</span>,最大值<span class=\"subst\">&#123;WbwMax&#125;</span>,均值<span class=\"subst\">&#123;WbwAvg&#125;</span>\\nIOPS最小值:<span class=\"subst\">&#123;WiopsMin&#125;</span>,&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;最大值<span class=\"subst\">&#123;WiopsMax&#125;</span>,均值<span class=\"subst\">&#123;WiopsAvg&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rm_file</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请等待程序清除测试残留文件...&quot;</span>)</span><br><span class=\"line\">    rm = os.system(<span class=\"string\">&quot;rm -rf /smbTest/*&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;清除完毕,程序结束!&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;欢迎使用群晖测试工具\\n本工具测试内容:\\n路径挂载模式下IOPS性能测试&quot;</span>)</span><br><span class=\"line\">    rm_file()</span><br><span class=\"line\">    randwrite()</span><br><span class=\"line\">    rm_file()</span><br><span class=\"line\">    create_readFile()</span><br><span class=\"line\">    randread()</span><br><span class=\"line\">    randrw()</span><br><span class=\"line\">    rm_file()</span><br></pre></td></tr></table></figure>"},{"title":"记录用docker部署nextcloud及配套mariadb、redis和持久化存储","comments":1,"date":"2024-06-13T08:45:32.000Z","keywords":["nextcloud","docker","docker compose","mariadb","redis"],"_content":"\n# 使用docker compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\n\n**安装docker的教程在[apt等各种源列表（持续更新）](https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html)，docker hub被禁，处理的办法在[国内docker hub无法使用的解决办法](https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html)**\n\n新的docker已经自带`docker compose`命令了，所以不需要再安装`docker-compose`，且需注意是`docker空格compose`而不是以前的`-`\n\n## docker compose基础命令如下：\n\n<!-- more -->\n\n```shell\n# 指定配置文件并后台启动\ndocker compose -f 指定配置文件.yaml up -d\n\n# 停止容器并删除容器\ndocker compose -f 指定配置文件.yaml down\n```\n\n## nextcloud.yaml配置文件如下\n\n```yaml\nservices:\n  db:\n    image: mariadb:latest\n    container_name: nextcloud-db\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: 设置你的数据库root密码\n      MYSQL_DATABASE: 设置你的数据库名\n      MYSQL_USER: 设置你的数据库用户名\n      MYSQL_PASSWORD: 设置你的数据库用户密码\n    volumes:\n      - /mnt/nextcloud/db:/var/lib/mysql\n      - 你的物理机路径:/var/lib/mysql # 这条是示例，该配置的作用是让数据库的所有文件持久存储到本地的该目录\n\n  redis:\n    image: redis:alpine\n    container_name: nextcloud-redis\n    restart: always\n\n  app:\n    image: nextcloud:latest\n    container_name: nextcloud-app\n    restart: always\n    ports:\n      - 80:80\n    environment:\n      MYSQL_HOST: db\n      MYSQL_DATABASE: 你的数据库名\n      MYSQL_USER: 你的数据库用户名\n      MYSQL_PASSWORD: 你的数据库用户密码\n      REDIS_HOST: redis\n    volumes:\n      - /mnt/nextcloud/data:/var/www/html\n      - 你的服务器路径:/var/www/html # 这条是示例，该配置的作用是让nextcloud的所有文件持久存储到本地的该目录\n    depends_on:\n      - db\n      - redis\n```\n\n## crontab自动执行\n\n```shell\n# 每5分钟执行一次cron\n*/5  *  *  *  * docker exec -u www-data nextcloud-app php -f /var/www/html/cron.php\n\n# 每天0点down掉容器然后拉取nextcloud的更新，再启动，然后执行命令行更新\n0 0 * * * docker compose -f /mnt/docker-compose.yaml down && docker pull nextcloud && docker compose -f /mnt/docker-compose.yaml up -d && docker exec -it -u 33 nextcloud-app php occ upgrade\n```\n","source":"_posts/记录用docker部署nextcloud及配套mariadb、redis和持久化存储.md","raw":"---\ntitle: 记录用docker部署nextcloud及配套mariadb、redis和持久化存储\ncomments: true\ncategories: [知识库]\ndate: 2024-06-13 16:45:32\nkeywords:\n    - nextcloud\n    - docker\n    - docker compose\n    - mariadb\n    - redis\ntags:\n    - nextcloud\n    - docker\n    - docker compose\n    - mariadb\n    - redis\n---\n\n# 使用docker compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\n\n**安装docker的教程在[apt等各种源列表（持续更新）](https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html)，docker hub被禁，处理的办法在[国内docker hub无法使用的解决办法](https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html)**\n\n新的docker已经自带`docker compose`命令了，所以不需要再安装`docker-compose`，且需注意是`docker空格compose`而不是以前的`-`\n\n## docker compose基础命令如下：\n\n<!-- more -->\n\n```shell\n# 指定配置文件并后台启动\ndocker compose -f 指定配置文件.yaml up -d\n\n# 停止容器并删除容器\ndocker compose -f 指定配置文件.yaml down\n```\n\n## nextcloud.yaml配置文件如下\n\n```yaml\nservices:\n  db:\n    image: mariadb:latest\n    container_name: nextcloud-db\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: 设置你的数据库root密码\n      MYSQL_DATABASE: 设置你的数据库名\n      MYSQL_USER: 设置你的数据库用户名\n      MYSQL_PASSWORD: 设置你的数据库用户密码\n    volumes:\n      - /mnt/nextcloud/db:/var/lib/mysql\n      - 你的物理机路径:/var/lib/mysql # 这条是示例，该配置的作用是让数据库的所有文件持久存储到本地的该目录\n\n  redis:\n    image: redis:alpine\n    container_name: nextcloud-redis\n    restart: always\n\n  app:\n    image: nextcloud:latest\n    container_name: nextcloud-app\n    restart: always\n    ports:\n      - 80:80\n    environment:\n      MYSQL_HOST: db\n      MYSQL_DATABASE: 你的数据库名\n      MYSQL_USER: 你的数据库用户名\n      MYSQL_PASSWORD: 你的数据库用户密码\n      REDIS_HOST: redis\n    volumes:\n      - /mnt/nextcloud/data:/var/www/html\n      - 你的服务器路径:/var/www/html # 这条是示例，该配置的作用是让nextcloud的所有文件持久存储到本地的该目录\n    depends_on:\n      - db\n      - redis\n```\n\n## crontab自动执行\n\n```shell\n# 每5分钟执行一次cron\n*/5  *  *  *  * docker exec -u www-data nextcloud-app php -f /var/www/html/cron.php\n\n# 每天0点down掉容器然后拉取nextcloud的更新，再启动，然后执行命令行更新\n0 0 * * * docker compose -f /mnt/docker-compose.yaml down && docker pull nextcloud && docker compose -f /mnt/docker-compose.yaml up -d && docker exec -it -u 33 nextcloud-app php occ upgrade\n```\n","slug":"记录用docker部署nextcloud及配套mariadb、redis和持久化存储","published":1,"updated":"2025-09-04T06:44:07.229Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwuv00859szw2cdl7myh","content":"<h1 id=\"使用docker-compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\"><a href=\"#使用docker-compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\" class=\"headerlink\" title=\"使用docker compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\"></a>使用docker compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法</h1><p><strong>安装docker的教程在<a href=\"https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html\">apt等各种源列表（持续更新）</a>，docker hub被禁，处理的办法在<a href=\"https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html\">国内docker hub无法使用的解决办法</a></strong></p>\n<p>新的docker已经自带<code>docker compose</code>命令了，所以不需要再安装<code>docker-compose</code>，且需注意是<code>docker空格compose</code>而不是以前的<code>-</code></p>\n<h2 id=\"docker-compose基础命令如下：\"><a href=\"#docker-compose基础命令如下：\" class=\"headerlink\" title=\"docker compose基础命令如下：\"></a>docker compose基础命令如下：</h2><span id=\"more\"></span>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">指定配置文件并后台启动</span></span><br><span class=\"line\">docker compose -f 指定配置文件.yaml up -d</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止容器并删除容器</span></span><br><span class=\"line\">docker compose -f 指定配置文件.yaml down</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nextcloud-yaml配置文件如下\"><a href=\"#nextcloud-yaml配置文件如下\" class=\"headerlink\" title=\"nextcloud.yaml配置文件如下\"></a>nextcloud.yaml配置文件如下</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">db:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mariadb:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">nextcloud-db</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"string\">设置你的数据库root密码</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_DATABASE:</span> <span class=\"string\">设置你的数据库名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_USER:</span> <span class=\"string\">设置你的数据库用户名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_PASSWORD:</span> <span class=\"string\">设置你的数据库用户密码</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/mnt/nextcloud/db:/var/lib/mysql</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">你的物理机路径:/var/lib/mysql</span> <span class=\"comment\"># 这条是示例，该配置的作用是让数据库的所有文件持久存储到本地的该目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">redis:alpine</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">nextcloud-redis</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">app:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">nextcloud:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">nextcloud-app</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">80</span><span class=\"string\">:80</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_HOST:</span> <span class=\"string\">db</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_DATABASE:</span> <span class=\"string\">你的数据库名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_USER:</span> <span class=\"string\">你的数据库用户名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_PASSWORD:</span> <span class=\"string\">你的数据库用户密码</span></span><br><span class=\"line\">      <span class=\"attr\">REDIS_HOST:</span> <span class=\"string\">redis</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/mnt/nextcloud/data:/var/www/html</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">你的服务器路径:/var/www/html</span> <span class=\"comment\"># 这条是示例，该配置的作用是让nextcloud的所有文件持久存储到本地的该目录</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">db</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"crontab自动执行\"><a href=\"#crontab自动执行\" class=\"headerlink\" title=\"crontab自动执行\"></a>crontab自动执行</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">每5分钟执行一次cron</span></span><br><span class=\"line\">*/5  *  *  *  * docker exec -u www-data nextcloud-app php -f /var/www/html/cron.php</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">每天0点down掉容器然后拉取nextcloud的更新，再启动，然后执行命令行更新</span></span><br><span class=\"line\">0 0 * * * docker compose -f /mnt/docker-compose.yaml down &amp;&amp; docker pull nextcloud &amp;&amp; docker compose -f /mnt/docker-compose.yaml up -d &amp;&amp; docker exec -it -u 33 nextcloud-app php occ upgrade</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":461,"excerpt":"<h1 id=\"使用docker-compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\"><a href=\"#使用docker-compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\" class=\"headerlink\" title=\"使用docker compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法\"></a>使用docker compose便捷的部署nextcloud及其配套的mariadb和redis并实现数据持久存储在本地的办法</h1><p><strong>安装docker的教程在<a href=\"https://hackerbs.com/apt%E7%AD%89%E5%90%84%E7%A7%8D%E6%BA%90%E5%88%97%E8%A1%A8%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html\">apt等各种源列表（持续更新）</a>，docker hub被禁，处理的办法在<a href=\"https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html\">国内docker hub无法使用的解决办法</a></strong></p>\n<p>新的docker已经自带<code>docker compose</code>命令了，所以不需要再安装<code>docker-compose</code>，且需注意是<code>docker空格compose</code>而不是以前的<code>-</code></p>\n<h2 id=\"docker-compose基础命令如下：\"><a href=\"#docker-compose基础命令如下：\" class=\"headerlink\" title=\"docker compose基础命令如下：\"></a>docker compose基础命令如下：</h2>","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">指定配置文件并后台启动</span></span><br><span class=\"line\">docker compose -f 指定配置文件.yaml up -d</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止容器并删除容器</span></span><br><span class=\"line\">docker compose -f 指定配置文件.yaml down</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nextcloud-yaml配置文件如下\"><a href=\"#nextcloud-yaml配置文件如下\" class=\"headerlink\" title=\"nextcloud.yaml配置文件如下\"></a>nextcloud.yaml配置文件如下</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">db:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mariadb:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">nextcloud-db</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"string\">设置你的数据库root密码</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_DATABASE:</span> <span class=\"string\">设置你的数据库名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_USER:</span> <span class=\"string\">设置你的数据库用户名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_PASSWORD:</span> <span class=\"string\">设置你的数据库用户密码</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/mnt/nextcloud/db:/var/lib/mysql</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">你的物理机路径:/var/lib/mysql</span> <span class=\"comment\"># 这条是示例，该配置的作用是让数据库的所有文件持久存储到本地的该目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">redis:alpine</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">nextcloud-redis</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">app:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">nextcloud:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">nextcloud-app</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">80</span><span class=\"string\">:80</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_HOST:</span> <span class=\"string\">db</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_DATABASE:</span> <span class=\"string\">你的数据库名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_USER:</span> <span class=\"string\">你的数据库用户名</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_PASSWORD:</span> <span class=\"string\">你的数据库用户密码</span></span><br><span class=\"line\">      <span class=\"attr\">REDIS_HOST:</span> <span class=\"string\">redis</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/mnt/nextcloud/data:/var/www/html</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">你的服务器路径:/var/www/html</span> <span class=\"comment\"># 这条是示例，该配置的作用是让nextcloud的所有文件持久存储到本地的该目录</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">db</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">redis</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"crontab自动执行\"><a href=\"#crontab自动执行\" class=\"headerlink\" title=\"crontab自动执行\"></a>crontab自动执行</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">每5分钟执行一次cron</span></span><br><span class=\"line\">*/5  *  *  *  * docker exec -u www-data nextcloud-app php -f /var/www/html/cron.php</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">每天0点down掉容器然后拉取nextcloud的更新，再启动，然后执行命令行更新</span></span><br><span class=\"line\">0 0 * * * docker compose -f /mnt/docker-compose.yaml down &amp;&amp; docker pull nextcloud &amp;&amp; docker compose -f /mnt/docker-compose.yaml up -d &amp;&amp; docker exec -it -u 33 nextcloud-app php occ upgrade</span><br></pre></td></tr></table></figure>"},{"title":"飞腾arm平台使用docker部署ftp教程","comments":1,"date":"2023-09-12T12:50:38.000Z","keywords":"vsftpd","_content":"\n**因飞腾平台为armv8，暂未发现简单易用的vsftpd Docker镜像，特此提供打包完毕的Docker镜像及教程以供各位使用**\n\n<!-- more -->\n\n**该docker镜像为armv8版本，已测试适用飞腾2000平台**\n\n第一步，拉取docker vsftpd映像\n\n*因docker hub已被墙，拉去docker images请参考[国内docker hub无法使用的解决办法](https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html)，或者使用下面手动导入的方式*\n\n`docker pull hackerbs/vsftpd`\n\n如果你的环境为离线环境，则采用导入vsftpd映像方案\n\ndocker离线镜像位于[网盘](https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa)docker_images文件夹中，名为`hackerbs-vsftpd-arm.tar`\n\n将下载的`hackerbs-vsftpd-arm.tar`导入到你的系统中，使用`docker load -i hackerbs-vsftpd-arm.tar`将该映像导入\n\n第二步，使用该映像启动容器\n\n```shell\n# 首先，创建一个路径用于存放ftp文件\nmkdir -p 路径\n# 示例\nmkdir -p /opt/ftp\n\n# 请用你的参数替代{参数}内容\ndocker run -d --name {容器名} -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER={ftp用户名} -e FTP_PASSWORD={ftp密码} -e PASV_ADDRESS={服务器地址}  -e FTP_REPOSITORY=/opt/ftp -v {主机FTP目录}:/opt/ftp --restart=always oscarenzo/vsftpd\n\n# 若无特别需求，仅更改“容器名、ftp用户名、密码、服务器地址”即可\n# 示例如下\ndocker run -d --name vsftpd-server -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER=ftptest -e FTP_PASSWORD=123456 -e PASV_ADDRESS=192.168.2.254 -e FTP_REPOSITORY=/opt/ftp -v /opt/ftp:/opt/ftp --restart=always f8044caf3727\n\n# 注：离线环境导入images需要将命令中的fauria/vsftpd替换为images ID f8044caf3727，如上方示例\n\n# 上述命令执行后可以使用docker ps查看容器是否运行成功\n# 容器运行成功后修改本机FTP目录权限为777，示例\n\nchmod -R 777 /opt/ftp\n\n# docker开机自动运行命令\nsystemctl enable docker\n```\n\n完整过程如下图所示，若有任何问题可以通过文末联系方式咨询\n\n![20230912213003](https://img.hackerbs.com//20230912213003.png)","source":"_posts/飞腾arm平台使用docker部署ftp教程.md","raw":"---\ntitle: 飞腾arm平台使用docker部署ftp教程\ncategories: [知识库]\ncomments: true\ndate: 2023-09-12 20:50:38\nkeywords: vsftpd\ntags:\n    - Docker\n---\n\n**因飞腾平台为armv8，暂未发现简单易用的vsftpd Docker镜像，特此提供打包完毕的Docker镜像及教程以供各位使用**\n\n<!-- more -->\n\n**该docker镜像为armv8版本，已测试适用飞腾2000平台**\n\n第一步，拉取docker vsftpd映像\n\n*因docker hub已被墙，拉去docker images请参考[国内docker hub无法使用的解决办法](https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html)，或者使用下面手动导入的方式*\n\n`docker pull hackerbs/vsftpd`\n\n如果你的环境为离线环境，则采用导入vsftpd映像方案\n\ndocker离线镜像位于[网盘](https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa)docker_images文件夹中，名为`hackerbs-vsftpd-arm.tar`\n\n将下载的`hackerbs-vsftpd-arm.tar`导入到你的系统中，使用`docker load -i hackerbs-vsftpd-arm.tar`将该映像导入\n\n第二步，使用该映像启动容器\n\n```shell\n# 首先，创建一个路径用于存放ftp文件\nmkdir -p 路径\n# 示例\nmkdir -p /opt/ftp\n\n# 请用你的参数替代{参数}内容\ndocker run -d --name {容器名} -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER={ftp用户名} -e FTP_PASSWORD={ftp密码} -e PASV_ADDRESS={服务器地址}  -e FTP_REPOSITORY=/opt/ftp -v {主机FTP目录}:/opt/ftp --restart=always oscarenzo/vsftpd\n\n# 若无特别需求，仅更改“容器名、ftp用户名、密码、服务器地址”即可\n# 示例如下\ndocker run -d --name vsftpd-server -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER=ftptest -e FTP_PASSWORD=123456 -e PASV_ADDRESS=192.168.2.254 -e FTP_REPOSITORY=/opt/ftp -v /opt/ftp:/opt/ftp --restart=always f8044caf3727\n\n# 注：离线环境导入images需要将命令中的fauria/vsftpd替换为images ID f8044caf3727，如上方示例\n\n# 上述命令执行后可以使用docker ps查看容器是否运行成功\n# 容器运行成功后修改本机FTP目录权限为777，示例\n\nchmod -R 777 /opt/ftp\n\n# docker开机自动运行命令\nsystemctl enable docker\n```\n\n完整过程如下图所示，若有任何问题可以通过文末联系方式咨询\n\n![20230912213003](https://img.hackerbs.com//20230912213003.png)","slug":"飞腾arm平台使用docker部署ftp教程","published":1,"updated":"2025-09-04T06:44:07.232Z","layout":"post","photos":[],"link":"","_id":"cmfdkuwuw00869szwcl1a7d8t","content":"<p><strong>因飞腾平台为armv8，暂未发现简单易用的vsftpd Docker镜像，特此提供打包完毕的Docker镜像及教程以供各位使用</strong></p>\n<span id=\"more\"></span>\n\n<p><strong>该docker镜像为armv8版本，已测试适用飞腾2000平台</strong></p>\n<p>第一步，拉取docker vsftpd映像</p>\n<p><em>因docker hub已被墙，拉去docker images请参考<a href=\"https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html\">国内docker hub无法使用的解决办法</a>，或者使用下面手动导入的方式</em></p>\n<p><code>docker pull hackerbs/vsftpd</code></p>\n<p>如果你的环境为离线环境，则采用导入vsftpd映像方案</p>\n<p>docker离线镜像位于<a href=\"https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa\">网盘</a>docker_images文件夹中，名为<code>hackerbs-vsftpd-arm.tar</code></p>\n<p>将下载的<code>hackerbs-vsftpd-arm.tar</code>导入到你的系统中，使用<code>docker load -i hackerbs-vsftpd-arm.tar</code>将该映像导入</p>\n<p>第二步，使用该映像启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">首先，创建一个路径用于存放ftp文件</span></span><br><span class=\"line\">mkdir -p 路径</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例</span></span><br><span class=\"line\">mkdir -p /opt/ftp</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">请用你的参数替代&#123;参数&#125;内容</span></span><br><span class=\"line\">docker run -d --name &#123;容器名&#125; -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER=&#123;ftp用户名&#125; -e FTP_PASSWORD=&#123;ftp密码&#125; -e PASV_ADDRESS=&#123;服务器地址&#125;  -e FTP_REPOSITORY=/opt/ftp -v &#123;主机FTP目录&#125;:/opt/ftp --restart=always oscarenzo/vsftpd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">若无特别需求，仅更改“容器名、ftp用户名、密码、服务器地址”即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例如下</span></span><br><span class=\"line\">docker run -d --name vsftpd-server -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER=ftptest -e FTP_PASSWORD=123456 -e PASV_ADDRESS=192.168.2.254 -e FTP_REPOSITORY=/opt/ftp -v /opt/ftp:/opt/ftp --restart=always f8044caf3727</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注：离线环境导入images需要将命令中的fauria/vsftpd替换为images ID f8044caf3727，如上方示例</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">上述命令执行后可以使用docker ps查看容器是否运行成功</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">容器运行成功后修改本机FTP目录权限为777，示例</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod -R 777 /opt/ftp</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">docker开机自动运行命令</span></span><br><span class=\"line\">systemctl enable docker</span><br></pre></td></tr></table></figure>\n\n<p>完整过程如下图所示，若有任何问题可以通过文末联系方式咨询</p>\n<p><img src=\"https://img.hackerbs.com//20230912213003.png\" alt=\"20230912213003\"></p>\n","site":{"data":{}},"length":466,"excerpt":"<p><strong>因飞腾平台为armv8，暂未发现简单易用的vsftpd Docker镜像，特此提供打包完毕的Docker镜像及教程以供各位使用</strong></p>","more":"<p><strong>该docker镜像为armv8版本，已测试适用飞腾2000平台</strong></p>\n<p>第一步，拉取docker vsftpd映像</p>\n<p><em>因docker hub已被墙，拉去docker images请参考<a href=\"https://hackerbs.com/%E5%9B%BD%E5%86%85docker-hub%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html\">国内docker hub无法使用的解决办法</a>，或者使用下面手动导入的方式</em></p>\n<p><code>docker pull hackerbs/vsftpd</code></p>\n<p>如果你的环境为离线环境，则采用导入vsftpd映像方案</p>\n<p>docker离线镜像位于<a href=\"https://disk.ygeit.cn/s/RpAtcoJcbpYtaoa\">网盘</a>docker_images文件夹中，名为<code>hackerbs-vsftpd-arm.tar</code></p>\n<p>将下载的<code>hackerbs-vsftpd-arm.tar</code>导入到你的系统中，使用<code>docker load -i hackerbs-vsftpd-arm.tar</code>将该映像导入</p>\n<p>第二步，使用该映像启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">首先，创建一个路径用于存放ftp文件</span></span><br><span class=\"line\">mkdir -p 路径</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例</span></span><br><span class=\"line\">mkdir -p /opt/ftp</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">请用你的参数替代&#123;参数&#125;内容</span></span><br><span class=\"line\">docker run -d --name &#123;容器名&#125; -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER=&#123;ftp用户名&#125; -e FTP_PASSWORD=&#123;ftp密码&#125; -e PASV_ADDRESS=&#123;服务器地址&#125;  -e FTP_REPOSITORY=/opt/ftp -v &#123;主机FTP目录&#125;:/opt/ftp --restart=always oscarenzo/vsftpd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">若无特别需求，仅更改“容器名、ftp用户名、密码、服务器地址”即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">示例如下</span></span><br><span class=\"line\">docker run -d --name vsftpd-server -p 20:20 -p 21:21 -p 4559-4564:4559-4564 -e FTP_USER=ftptest -e FTP_PASSWORD=123456 -e PASV_ADDRESS=192.168.2.254 -e FTP_REPOSITORY=/opt/ftp -v /opt/ftp:/opt/ftp --restart=always f8044caf3727</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注：离线环境导入images需要将命令中的fauria/vsftpd替换为images ID f8044caf3727，如上方示例</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">上述命令执行后可以使用docker ps查看容器是否运行成功</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">容器运行成功后修改本机FTP目录权限为777，示例</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod -R 777 /opt/ftp</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">docker开机自动运行命令</span></span><br><span class=\"line\">systemctl enable docker</span><br></pre></td></tr></table></figure>\n\n<p>完整过程如下图所示，若有任何问题可以通过文末联系方式咨询</p>\n<p><img src=\"https://img.hackerbs.com//20230912213003.png\" alt=\"20230912213003\"></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cmfdkuwtm00059szw9j7u98up","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtp000c9szwa6xrdwit"},{"post_id":"cmfdkuwtg00009szw49v815qm","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtq000h9szw2fr9cm2h"},{"post_id":"cmfdkuwtm00069szw718u5a99","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtq000j9szwb9ak3sig"},{"post_id":"cmfdkuwto000a9szwgbxz1mg0","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtr000m9szwce0xdyul"},{"post_id":"cmfdkuwti00019szwd6kf360k","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwts000o9szw76tb4bjz"},{"post_id":"cmfdkuwto000b9szwbllgg54u","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwts000r9szwbog1gk6i"},{"post_id":"cmfdkuwtp000g9szw168lepa2","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtt000t9szwftmn6qut"},{"post_id":"cmfdkuwtl00049szwhp7gf9av","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtt000w9szw81108gev"},{"post_id":"cmfdkuwtq000i9szw2r8j5u1p","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtu000y9szw70ambtdi"},{"post_id":"cmfdkuwtr000l9szwffgg3ql3","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtv00119szwdsakhas6"},{"post_id":"cmfdkuwtr000n9szw7wkod0p4","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtw00149szwen5r9w3c"},{"post_id":"cmfdkuwts000q9szwdy96a2bm","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtw00169szwebfz6upw"},{"post_id":"cmfdkuwts000s9szw7gm59ejo","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtx00199szw4bkvfstl"},{"post_id":"cmfdkuwtu000x9szwgqtb9zd4","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtx001b9szwgf756x77"},{"post_id":"cmfdkuwtv00109szw0sc2em38","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwty001e9szw27roeg3f"},{"post_id":"cmfdkuwtv00139szw6fhybuy0","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwtz001h9szw8tkvfm1f"},{"post_id":"cmfdkuwtt000v9szwciawbwn5","category_id":"cmfdkuwtu000z9szw1cmc5216","_id":"cmfdkuwtz001l9szwg9875fw8"},{"post_id":"cmfdkuwtw00159szw1zxzgg1b","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu0001o9szw3ul7dvly"},{"post_id":"cmfdkuwtw00189szw7isafqrj","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu4001r9szw9hk3h98y"},{"post_id":"cmfdkuwtx001a9szwakvqg6a8","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu5001v9szw6rb6h4jk"},{"post_id":"cmfdkuwty001d9szw2568bcey","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu5001z9szw4zcc4ftt"},{"post_id":"cmfdkuwty001g9szwflutcep2","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu600239szw4ngk2ydh"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu600269szwaf43fzml"},{"post_id":"cmfdkuwtz001n9szwh8gb5ad7","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu700299szw6y4e7szh"},{"post_id":"cmfdkuwu4001u9szw7btxaocx","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu7002b9szwfep05ifr"},{"post_id":"cmfdkuwu5001y9szw6h2b0gi4","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu8002e9szwc3n73yib"},{"post_id":"cmfdkuwu600229szw18ph6gx6","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu8002g9szwdlrudj7x"},{"post_id":"cmfdkuwu3001q9szw1okcc1ad","category_id":"cmfdkuwu5001x9szwg3uo7g9t","_id":"cmfdkuwu9002k9szw3ryc071q"},{"post_id":"cmfdkuwu600259szwfih81kch","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu9002m9szw9m3a4nfg"},{"post_id":"cmfdkuwu700289szw16ar7lbe","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu9002o9szw0iq530kb"},{"post_id":"cmfdkuwu7002a9szwgkkmghy1","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwu9002p9szw6flpf39c"},{"post_id":"cmfdkuwu8002d9szw2nq29jz8","category_id":"cmfdkuwu9002j9szw8nqde9qc","_id":"cmfdkuwu9002r9szw0v9d4co6"},{"post_id":"cmfdkuwuv00859szw2cdl7myh","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwux00899szw6pmjesn7"},{"post_id":"cmfdkuwuw00869szwcl1a7d8t","category_id":"cmfdkuwtj00029szwab9h2g13","_id":"cmfdkuwux008a9szw2j87ar0v"}],"PostTag":[{"post_id":"cmfdkuwtg00009szw49v815qm","tag_id":"cmfdkuwtl00039szw91ljak31","_id":"cmfdkuwto00099szw6d8og5cr"},{"post_id":"cmfdkuwti00019szwd6kf360k","tag_id":"cmfdkuwtl00039szw91ljak31","_id":"cmfdkuwtp000f9szwgt64hznd"},{"post_id":"cmfdkuwtl00049szwhp7gf9av","tag_id":"cmfdkuwtp000e9szw5khg2l1m","_id":"cmfdkuwty001f9szw6m6e2aj9"},{"post_id":"cmfdkuwtl00049szwhp7gf9av","tag_id":"cmfdkuwtr000k9szwg24hdi1n","_id":"cmfdkuwtz001i9szw7het9f2n"},{"post_id":"cmfdkuwtl00049szwhp7gf9av","tag_id":"cmfdkuwts000p9szw12gmfpgv","_id":"cmfdkuwtz001m9szw5r7iacx5"},{"post_id":"cmfdkuwtl00049szwhp7gf9av","tag_id":"cmfdkuwtt000u9szwa6jg0o1a","_id":"cmfdkuwu3001p9szwfpcdbdu1"},{"post_id":"cmfdkuwtl00049szwhp7gf9av","tag_id":"cmfdkuwtv00129szwbk9ke54b","_id":"cmfdkuwu4001t9szwfaqg8hyk"},{"post_id":"cmfdkuwtl00049szwhp7gf9av","tag_id":"cmfdkuwtw00179szw2a5v34v2","_id":"cmfdkuwu5001w9szwhuzn1y7x"},{"post_id":"cmfdkuwtm00059szw9j7u98up","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwu500219szw05qy5m7k"},{"post_id":"cmfdkuwtm00059szw9j7u98up","tag_id":"cmfdkuwtz001j9szw7p6gg0ni","_id":"cmfdkuwu600249szw087cgubr"},{"post_id":"cmfdkuwtm00069szw718u5a99","tag_id":"cmfdkuwu4001s9szw9ucf7bil","_id":"cmfdkuwu8002f9szwcfv98yvr"},{"post_id":"cmfdkuwtm00069szw718u5a99","tag_id":"cmfdkuwts000p9szw12gmfpgv","_id":"cmfdkuwu8002h9szw7djdapec"},{"post_id":"cmfdkuwtm00069szw718u5a99","tag_id":"cmfdkuwtt000u9szwa6jg0o1a","_id":"cmfdkuwu9002l9szwgwz4g5fi"},{"post_id":"cmfdkuwto000a9szwgbxz1mg0","tag_id":"cmfdkuwtz001j9szw7p6gg0ni","_id":"cmfdkuwua002u9szw8i7d5zap"},{"post_id":"cmfdkuwto000a9szwgbxz1mg0","tag_id":"cmfdkuwu8002i9szw1xklhdjd","_id":"cmfdkuwua002v9szw7clsap31"},{"post_id":"cmfdkuwto000a9szwgbxz1mg0","tag_id":"cmfdkuwu9002n9szwcvlvcyy3","_id":"cmfdkuwua002x9szwgvvl6ada"},{"post_id":"cmfdkuwto000a9szwgbxz1mg0","tag_id":"cmfdkuwu9002q9szwhpnbgys9","_id":"cmfdkuwua002y9szwgt6d3ecc"},{"post_id":"cmfdkuwto000a9szwgbxz1mg0","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwua00309szw87gi9gp6"},{"post_id":"cmfdkuwto000b9szwbllgg54u","tag_id":"cmfdkuwua002t9szwcd2e1qiv","_id":"cmfdkuwua00319szw94lbhvt2"},{"post_id":"cmfdkuwto000b9szwbllgg54u","tag_id":"cmfdkuwua002w9szwdm5n9xh3","_id":"cmfdkuwub00339szw3si41is6"},{"post_id":"cmfdkuwtp000g9szw168lepa2","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwub00349szw9y1q0epf"},{"post_id":"cmfdkuwtq000i9szw2r8j5u1p","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwuc00399szw9f3i8oqj"},{"post_id":"cmfdkuwtq000i9szw2r8j5u1p","tag_id":"cmfdkuwub00359szw1yoodn5l","_id":"cmfdkuwuc003a9szw73ig3wlu"},{"post_id":"cmfdkuwtq000i9szw2r8j5u1p","tag_id":"cmfdkuwub00369szw493e4ezc","_id":"cmfdkuwuc003c9szw24b3d1ud"},{"post_id":"cmfdkuwtq000i9szw2r8j5u1p","tag_id":"cmfdkuwub00379szw9nks8vk1","_id":"cmfdkuwuc003d9szw8qm4866z"},{"post_id":"cmfdkuwtr000l9szwffgg3ql3","tag_id":"cmfdkuwub00389szw2cwo7aqf","_id":"cmfdkuwuc003f9szwabc5dz4u"},{"post_id":"cmfdkuwtr000l9szwffgg3ql3","tag_id":"cmfdkuwuc003b9szwc9qg917h","_id":"cmfdkuwuc003g9szwdqqm8alc"},{"post_id":"cmfdkuwtr000n9szw7wkod0p4","tag_id":"cmfdkuwuc003e9szwav3w487o","_id":"cmfdkuwuc003j9szw258z58p1"},{"post_id":"cmfdkuwtr000n9szw7wkod0p4","tag_id":"cmfdkuwuc003h9szw9e5y0zot","_id":"cmfdkuwuc003k9szwdeq76cr7"},{"post_id":"cmfdkuwts000q9szwdy96a2bm","tag_id":"cmfdkuwuc003i9szw19df9lbn","_id":"cmfdkuwue003r9szw0ggg45mz"},{"post_id":"cmfdkuwts000q9szwdy96a2bm","tag_id":"cmfdkuwud003l9szw2qldds9w","_id":"cmfdkuwue003s9szw96nm2jyh"},{"post_id":"cmfdkuwts000q9szwdy96a2bm","tag_id":"cmfdkuwud003m9szw9t5r46nm","_id":"cmfdkuwue003u9szw5lh61mcx"},{"post_id":"cmfdkuwts000q9szwdy96a2bm","tag_id":"cmfdkuwud003n9szw7voq17t1","_id":"cmfdkuwue003v9szw1g5e831n"},{"post_id":"cmfdkuwts000q9szwdy96a2bm","tag_id":"cmfdkuwud003o9szw3jqe9zth","_id":"cmfdkuwue003x9szw7itufxr5"},{"post_id":"cmfdkuwts000q9szwdy96a2bm","tag_id":"cmfdkuwud003p9szw3y1q5lwb","_id":"cmfdkuwue003y9szwavg35zsn"},{"post_id":"cmfdkuwts000s9szw7gm59ejo","tag_id":"cmfdkuwud003q9szw962b3px9","_id":"cmfdkuwuf00429szw9x4z5822"},{"post_id":"cmfdkuwts000s9szw7gm59ejo","tag_id":"cmfdkuwue003t9szwg4m4h7b5","_id":"cmfdkuwuf00439szw07yufw8z"},{"post_id":"cmfdkuwts000s9szw7gm59ejo","tag_id":"cmfdkuwu9002n9szwcvlvcyy3","_id":"cmfdkuwuf00459szwb2cvcuwd"},{"post_id":"cmfdkuwts000s9szw7gm59ejo","tag_id":"cmfdkuwue003z9szw52oi1dzz","_id":"cmfdkuwuf00469szw2zsq324u"},{"post_id":"cmfdkuwts000s9szw7gm59ejo","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwuf00489szw2bhkgf86"},{"post_id":"cmfdkuwtt000v9szwciawbwn5","tag_id":"cmfdkuwub00389szw2cwo7aqf","_id":"cmfdkuwuf00499szw5ofbgb4e"},{"post_id":"cmfdkuwtt000v9szwciawbwn5","tag_id":"cmfdkuwuf00449szw7ni65473","_id":"cmfdkuwug004b9szwes083yej"},{"post_id":"cmfdkuwtu000x9szwgqtb9zd4","tag_id":"cmfdkuwuf00479szwbn0s3d5n","_id":"cmfdkuwug004c9szw558y5ria"},{"post_id":"cmfdkuwtv00109szw0sc2em38","tag_id":"cmfdkuwuf004a9szwb4ex0mbm","_id":"cmfdkuwug004e9szwg339g7he"},{"post_id":"cmfdkuwtv00139szw6fhybuy0","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwuh004k9szwa3b9724v"},{"post_id":"cmfdkuwtv00139szw6fhybuy0","tag_id":"cmfdkuwug004f9szwa6o9byz5","_id":"cmfdkuwuh004l9szw7mc57wh2"},{"post_id":"cmfdkuwtv00139szw6fhybuy0","tag_id":"cmfdkuwug004g9szwd6dpdnpd","_id":"cmfdkuwuh004n9szwhxscg22i"},{"post_id":"cmfdkuwtv00139szw6fhybuy0","tag_id":"cmfdkuwug004h9szwa6o3dtyr","_id":"cmfdkuwuh004o9szwa9r2hotg"},{"post_id":"cmfdkuwtv00139szw6fhybuy0","tag_id":"cmfdkuwug004i9szwams2321w","_id":"cmfdkuwuh004q9szwawha5t6g"},{"post_id":"cmfdkuwtw00159szw1zxzgg1b","tag_id":"cmfdkuwub00389szw2cwo7aqf","_id":"cmfdkuwuh004r9szwej0qhjlk"},{"post_id":"cmfdkuwtw00159szw1zxzgg1b","tag_id":"cmfdkuwuh004m9szwakok6egm","_id":"cmfdkuwui004t9szwes7s01pu"},{"post_id":"cmfdkuwtw00189szw7isafqrj","tag_id":"cmfdkuwuh004p9szw5hho0evm","_id":"cmfdkuwui004x9szw9kvg6lvv"},{"post_id":"cmfdkuwtw00189szw7isafqrj","tag_id":"cmfdkuwuh004s9szw87gs2z64","_id":"cmfdkuwui004y9szwbaq42suk"},{"post_id":"cmfdkuwtw00189szw7isafqrj","tag_id":"cmfdkuwui004u9szw9lia7wt2","_id":"cmfdkuwui00509szw5lyr7q8t"},{"post_id":"cmfdkuwtw00189szw7isafqrj","tag_id":"cmfdkuwuc003e9szwav3w487o","_id":"cmfdkuwui00519szw988464r5"},{"post_id":"cmfdkuwtx001a9szwakvqg6a8","tag_id":"cmfdkuwui004w9szwbca10jcq","_id":"cmfdkuwuj00559szwazpv4de9"},{"post_id":"cmfdkuwtx001a9szwakvqg6a8","tag_id":"cmfdkuwui004z9szwe6yf6nry","_id":"cmfdkuwuj00569szw98b5b5eg"},{"post_id":"cmfdkuwtx001a9szwakvqg6a8","tag_id":"cmfdkuwui00529szwg2fw0wxn","_id":"cmfdkuwuj00589szwguy7a22f"},{"post_id":"cmfdkuwtx001a9szwakvqg6a8","tag_id":"cmfdkuwuj00539szw9l4x9w1a","_id":"cmfdkuwuj00599szwg2w22n7a"},{"post_id":"cmfdkuwty001d9szw2568bcey","tag_id":"cmfdkuwtz001j9szw7p6gg0ni","_id":"cmfdkuwuj005b9szwfhb0cyor"},{"post_id":"cmfdkuwty001d9szw2568bcey","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwuj005c9szw7czid8f2"},{"post_id":"cmfdkuwty001d9szw2568bcey","tag_id":"cmfdkuwuj00579szwf9fwgdf0","_id":"cmfdkuwuk005e9szw6m2k0c7y"},{"post_id":"cmfdkuwty001g9szwflutcep2","tag_id":"cmfdkuwuj005a9szwfltdfgc2","_id":"cmfdkuwul005l9szwcz7421j9"},{"post_id":"cmfdkuwty001g9szwflutcep2","tag_id":"cmfdkuwuj005d9szw640fdk0n","_id":"cmfdkuwul005m9szw3x675e3y"},{"post_id":"cmfdkuwty001g9szwflutcep2","tag_id":"cmfdkuwuk005f9szw0eap5gyw","_id":"cmfdkuwul005o9szwh8gv6yy0"},{"post_id":"cmfdkuwty001g9szwflutcep2","tag_id":"cmfdkuwuk005g9szw78kt9f9n","_id":"cmfdkuwul005p9szw3vzqcimp"},{"post_id":"cmfdkuwty001g9szwflutcep2","tag_id":"cmfdkuwuk005h9szwf229aj5y","_id":"cmfdkuwul005r9szw5q98ca0y"},{"post_id":"cmfdkuwty001g9szwflutcep2","tag_id":"cmfdkuwuk005i9szwcuuqg4vr","_id":"cmfdkuwul005s9szwcvtsckxp"},{"post_id":"cmfdkuwty001g9szwflutcep2","tag_id":"cmfdkuwuk005j9szwcjdvhx9k","_id":"cmfdkuwum005u9szwf9ppg1l0"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwul005k9szwfrgs8sot","_id":"cmfdkuwun00609szwe69wg4zp"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwul005n9szw5nm2hjr6","_id":"cmfdkuwun00619szwa0yt05lq"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwul005q9szwaria6bgg","_id":"cmfdkuwun00639szw84cgbkmz"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwtx001c9szwcuii9juu","_id":"cmfdkuwun00649szwedhw6q7o"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwul005t9szw8cc7ebeo","_id":"cmfdkuwun00669szw55na1p5o"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwum005v9szwdf0g6hlt","_id":"cmfdkuwun00679szweyze28wi"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwum005w9szw6vv4g2ai","_id":"cmfdkuwun00699szw2ppfdcxx"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwum005x9szwh87245rt","_id":"cmfdkuwun006a9szwceza2b9j"},{"post_id":"cmfdkuwtz001k9szw38ngbfkt","tag_id":"cmfdkuwum005y9szwbffh73w8","_id":"cmfdkuwun006c9szwbhk1hxpa"},{"post_id":"cmfdkuwtz001n9szwh8gb5ad7","tag_id":"cmfdkuwul005t9szw8cc7ebeo","_id":"cmfdkuwuo006f9szwa1fp9jla"},{"post_id":"cmfdkuwtz001n9szwh8gb5ad7","tag_id":"cmfdkuwun00629szw1v605ws7","_id":"cmfdkuwuo006g9szwh746ggp1"},{"post_id":"cmfdkuwtz001n9szwh8gb5ad7","tag_id":"cmfdkuwum005v9szwdf0g6hlt","_id":"cmfdkuwuo006i9szwgiy72mfm"},{"post_id":"cmfdkuwtz001n9szwh8gb5ad7","tag_id":"cmfdkuwun00689szwgft5706j","_id":"cmfdkuwuo006j9szwgomldyam"},{"post_id":"cmfdkuwtz001n9szwh8gb5ad7","tag_id":"cmfdkuwun006b9szw5qfndry8","_id":"cmfdkuwuo006l9szw9ht5bwox"},{"post_id":"cmfdkuwtz001n9szwh8gb5ad7","tag_id":"cmfdkuwuo006d9szw8nqpe29p","_id":"cmfdkuwuo006m9szw9mj3hod6"},{"post_id":"cmfdkuwu3001q9szw1okcc1ad","tag_id":"cmfdkuwuh004p9szw5hho0evm","_id":"cmfdkuwup006p9szw0j35gt7l"},{"post_id":"cmfdkuwu3001q9szw1okcc1ad","tag_id":"cmfdkuwuj00579szwf9fwgdf0","_id":"cmfdkuwup006q9szw64xn32ep"},{"post_id":"cmfdkuwu3001q9szw1okcc1ad","tag_id":"cmfdkuwuo006k9szw801l88nm","_id":"cmfdkuwup006s9szwa95gftyi"},{"post_id":"cmfdkuwu3001q9szw1okcc1ad","tag_id":"cmfdkuwuc003e9szwav3w487o","_id":"cmfdkuwup006t9szwcahghp6p"},{"post_id":"cmfdkuwu4001u9szw7btxaocx","tag_id":"cmfdkuwup006o9szw0r6wgbu9","_id":"cmfdkuwup006v9szw7vvxb9bw"},{"post_id":"cmfdkuwu4001u9szw7btxaocx","tag_id":"cmfdkuwup006r9szwcxzq44oj","_id":"cmfdkuwup006w9szwfuaqhwy5"},{"post_id":"cmfdkuwu5001y9szw6h2b0gi4","tag_id":"cmfdkuwub00389szw2cwo7aqf","_id":"cmfdkuwuq00719szw8oxc7s2p"},{"post_id":"cmfdkuwu5001y9szw6h2b0gi4","tag_id":"cmfdkuwuh004m9szwakok6egm","_id":"cmfdkuwuq00729szw6i2457hw"},{"post_id":"cmfdkuwu5001y9szw6h2b0gi4","tag_id":"cmfdkuwuq006y9szwdinbask0","_id":"cmfdkuwur00749szw4ct98a0d"},{"post_id":"cmfdkuwu5001y9szw6h2b0gi4","tag_id":"cmfdkuwuq006z9szwbhpudrk1","_id":"cmfdkuwur00759szwcomfgwdd"},{"post_id":"cmfdkuwu600229szw18ph6gx6","tag_id":"cmfdkuwtp000e9szw5khg2l1m","_id":"cmfdkuwur00789szwe1cl1wnh"},{"post_id":"cmfdkuwu600229szw18ph6gx6","tag_id":"cmfdkuwuq00709szwdbhl30je","_id":"cmfdkuwur00799szw693a57i7"},{"post_id":"cmfdkuwu600229szw18ph6gx6","tag_id":"cmfdkuwts000p9szw12gmfpgv","_id":"cmfdkuwur007b9szwg9xkfjiq"},{"post_id":"cmfdkuwu600229szw18ph6gx6","tag_id":"cmfdkuwtt000u9szwa6jg0o1a","_id":"cmfdkuwur007c9szw6y92hv98"},{"post_id":"cmfdkuwu600229szw18ph6gx6","tag_id":"cmfdkuwuq00739szwcmt6hggh","_id":"cmfdkuwus007e9szw67hudq6n"},{"post_id":"cmfdkuwu600229szw18ph6gx6","tag_id":"cmfdkuwur00769szw5isxdiln","_id":"cmfdkuwus007f9szw5jceeqgy"},{"post_id":"cmfdkuwu600259szwfih81kch","tag_id":"cmfdkuwur00779szw5yqm500a","_id":"cmfdkuwus007i9szwhptl60bz"},{"post_id":"cmfdkuwu600259szwfih81kch","tag_id":"cmfdkuwur007a9szwgm3hddfq","_id":"cmfdkuwus007j9szw4lszhwew"},{"post_id":"cmfdkuwu600259szwfih81kch","tag_id":"cmfdkuwur007d9szwft1k491g","_id":"cmfdkuwus007l9szw5cc41btp"},{"post_id":"cmfdkuwu600259szwfih81kch","tag_id":"cmfdkuwus007g9szwb0ne3lsm","_id":"cmfdkuwus007m9szw9lcc9weq"},{"post_id":"cmfdkuwu700289szw16ar7lbe","tag_id":"cmfdkuwus007h9szwgjjqdvrk","_id":"cmfdkuwut007r9szw1k8u8rod"},{"post_id":"cmfdkuwu700289szw16ar7lbe","tag_id":"cmfdkuwus007k9szw54q10c0u","_id":"cmfdkuwut007s9szw8x543byz"},{"post_id":"cmfdkuwu700289szw16ar7lbe","tag_id":"cmfdkuwts000p9szw12gmfpgv","_id":"cmfdkuwuu007u9szw3wx747rp"},{"post_id":"cmfdkuwu700289szw16ar7lbe","tag_id":"cmfdkuwtt000u9szwa6jg0o1a","_id":"cmfdkuwuu007v9szw3v41ffzy"},{"post_id":"cmfdkuwu700289szw16ar7lbe","tag_id":"cmfdkuwus007n9szw6ze4ayn1","_id":"cmfdkuwuu007x9szwf8enenga"},{"post_id":"cmfdkuwu700289szw16ar7lbe","tag_id":"cmfdkuwut007o9szwgu7ubskg","_id":"cmfdkuwuu007y9szw5557cnor"},{"post_id":"cmfdkuwu700289szw16ar7lbe","tag_id":"cmfdkuwut007p9szw589681r6","_id":"cmfdkuwuu00809szwediphr2q"},{"post_id":"cmfdkuwu7002a9szwgkkmghy1","tag_id":"cmfdkuwua002t9szwcd2e1qiv","_id":"cmfdkuwuu00819szw6bnr22sr"},{"post_id":"cmfdkuwu7002a9szwgkkmghy1","tag_id":"cmfdkuwut007t9szw0i0j4vv8","_id":"cmfdkuwuu00829szw86ne68te"},{"post_id":"cmfdkuwu7002a9szwgkkmghy1","tag_id":"cmfdkuwuu007w9szw8uzp9lx0","_id":"cmfdkuwuu00839szw1974h2bw"},{"post_id":"cmfdkuwu8002d9szw2nq29jz8","tag_id":"cmfdkuwuu007z9szw5v29dmny","_id":"cmfdkuwuu00849szw0pukam9q"},{"post_id":"cmfdkuwuw00869szwcl1a7d8t","tag_id":"cmfdkuwua002t9szwcd2e1qiv","_id":"cmfdkuwux00889szwgt3sdi0v"},{"post_id":"cmfdkuwuv00859szw2cdl7myh","tag_id":"cmfdkuwuw00879szw7qzk738o","_id":"cmfdkuwux008e9szwbz18ajs9"},{"post_id":"cmfdkuwuv00859szw2cdl7myh","tag_id":"cmfdkuwui004w9szwbca10jcq","_id":"cmfdkuwux008f9szwf6lt11e4"},{"post_id":"cmfdkuwuv00859szw2cdl7myh","tag_id":"cmfdkuwux008b9szw893j2qaz","_id":"cmfdkuwux008g9szwcp1kcd6c"},{"post_id":"cmfdkuwuv00859szw2cdl7myh","tag_id":"cmfdkuwux008c9szwaqkvapch","_id":"cmfdkuwux008h9szw5yp7hwtw"},{"post_id":"cmfdkuwuv00859szw2cdl7myh","tag_id":"cmfdkuwux008d9szw1jnb4nsl","_id":"cmfdkuwux008i9szw6vfv660j"}],"Tag":[{"name":"嵌入式开发","_id":"cmfdkuwtl00039szw91ljak31"},{"name":"DELL","_id":"cmfdkuwtp000e9szw5khg2l1m"},{"name":"PERC","_id":"cmfdkuwtr000k9szwg24hdi1n"},{"name":"IT知识","_id":"cmfdkuwts000p9szw12gmfpgv"},{"name":"百科","_id":"cmfdkuwtt000u9szwa6jg0o1a"},{"name":"BBU","_id":"cmfdkuwtv00129szwbk9ke54b"},{"name":"阵列卡","_id":"cmfdkuwtw00179szw2a5v34v2"},{"name":"Linux","_id":"cmfdkuwtx001c9szwcuii9juu"},{"name":"Debian","_id":"cmfdkuwtz001j9szw7p6gg0ni"},{"name":"基础","_id":"cmfdkuwu4001s9szw9ucf7bil"},{"name":"Debian安装","_id":"cmfdkuwu8002i9szw1xklhdjd"},{"name":"Linux安装","_id":"cmfdkuwu9002n9szwcvlvcyy3"},{"name":"Debian服务器","_id":"cmfdkuwu9002q9szwhpnbgys9"},{"name":"Docker","_id":"cmfdkuwua002t9szwcd2e1qiv"},{"name":"ARM","_id":"cmfdkuwua002w9szwdm5n9xh3"},{"name":"ssh","_id":"cmfdkuwub00359szw1yoodn5l"},{"name":"网络安全","_id":"cmfdkuwub00369szw493e4ezc"},{"name":"ssh爆破","_id":"cmfdkuwub00379szw9nks8vk1"},{"name":"Proxmox-VE","_id":"cmfdkuwub00389szw2cwo7aqf"},{"name":"SylixOS","_id":"cmfdkuwuc003b9szwc9qg917h"},{"name":"apt源","_id":"cmfdkuwuc003e9szwav3w487o"},{"name":"docker源","_id":"cmfdkuwuc003h9szw9e5y0zot"},{"name":"Python","_id":"cmfdkuwuc003i9szw19df9lbn"},{"name":"Clash","_id":"cmfdkuwud003l9szw2qldds9w"},{"name":"代理","_id":"cmfdkuwud003m9szw9t5r46nm"},{"name":"GFWList","_id":"cmfdkuwud003n9szw7voq17t1"},{"name":"GEO","_id":"cmfdkuwud003o9szw3jqe9zth"},{"name":"分流","_id":"cmfdkuwud003p9szw3y1q5lwb"},{"name":"Ubuntu","_id":"cmfdkuwud003q9szw962b3px9"},{"name":"Ubuntu安装","_id":"cmfdkuwue003t9szwg4m4h7b5"},{"name":"Ubuntu服务器","_id":"cmfdkuwue003z9szw52oi1dzz"},{"name":"批量","_id":"cmfdkuwuf00449szw7ni65473"},{"name":"C++ - C - fio - 脚本","_id":"cmfdkuwuf00479szwbn0s3d5n"},{"name":"markdown","_id":"cmfdkuwuf004a9szwb4ex0mbm"},{"name":"lvm","_id":"cmfdkuwug004f9szwa6o9byz5"},{"name":"磁盘","_id":"cmfdkuwug004g9szwd6dpdnpd"},{"name":"解决办法","_id":"cmfdkuwug004h9szwa6o3dtyr"},{"name":"dmsetup","_id":"cmfdkuwug004i9szwams2321w"},{"name":"虚拟机","_id":"cmfdkuwuh004m9szwakok6egm"},{"name":"apt","_id":"cmfdkuwuh004p9szw5hho0evm"},{"name":"GPG key","_id":"cmfdkuwuh004s9szw87gs2z64"},{"name":"可信任apt源","_id":"cmfdkuwui004u9szw9lia7wt2"},{"name":"docker","_id":"cmfdkuwui004w9szwbca10jcq"},{"name":"docker hub","_id":"cmfdkuwui004z9szwe6yf6nry"},{"name":"docker pull","_id":"cmfdkuwui00529szwg2fw0wxn"},{"name":"docker 代理","_id":"cmfdkuwuj00539szw9l4x9w1a"},{"name":"deb","_id":"cmfdkuwuj00579szwf9fwgdf0"},{"name":"wireguard","_id":"cmfdkuwuj005a9szwfltdfgc2"},{"name":"局域网","_id":"cmfdkuwuj005d9szw640fdk0n"},{"name":"云计算","_id":"cmfdkuwuk005f9szw0eap5gyw"},{"name":"计算资源本地化","_id":"cmfdkuwuk005g9szw78kt9f9n"},{"name":"异地组网","_id":"cmfdkuwuk005h9szwf229aj5y"},{"name":"Nginx","_id":"cmfdkuwuk005i9szwcuuqg4vr"},{"name":"反向代理","_id":"cmfdkuwuk005j9szwcjdvhx9k"},{"name":"IT技术","_id":"cmfdkuwul005k9szwfrgs8sot"},{"name":"知识库","_id":"cmfdkuwul005n9szw5nm2hjr6"},{"name":"随手记","_id":"cmfdkuwul005q9szwaria6bgg"},{"name":"NAS","_id":"cmfdkuwul005t9szw8cc7ebeo"},{"name":"存储","_id":"cmfdkuwum005v9szwdf0g6hlt"},{"name":"网络","_id":"cmfdkuwum005w9szw6vv4g2ai"},{"name":"虚拟化","_id":"cmfdkuwum005x9szwh87245rt"},{"name":"Shell","_id":"cmfdkuwum005y9szwbffh73w8"},{"name":"DDNS","_id":"cmfdkuwun00629szw1v605ws7"},{"name":"zfs","_id":"cmfdkuwun00689szwgft5706j"},{"name":"RAID","_id":"cmfdkuwun006b9szw5qfndry8"},{"name":"磁盘阵列","_id":"cmfdkuwuo006d9szw8nqpe29p"},{"name":"aptdownloader","_id":"cmfdkuwuo006k9szw801l88nm"},{"name":"相变","_id":"cmfdkuwup006o9szw0r6wgbu9"},{"name":"相变硅脂","_id":"cmfdkuwup006r9szwcxzq44oj"},{"name":"虚拟网卡","_id":"cmfdkuwuq006y9szwdinbask0"},{"name":"qemu","_id":"cmfdkuwuq006z9szwbhpudrk1"},{"name":"ECC","_id":"cmfdkuwuq00709szwdbhl30je"},{"name":"内存","_id":"cmfdkuwuq00739szwcmt6hggh"},{"name":"iDRAC","_id":"cmfdkuwur00769szw5isxdiln"},{"name":"debian","_id":"cmfdkuwur00779szw5yqm500a"},{"name":"v2ray","_id":"cmfdkuwur007a9szwgm3hddfq"},{"name":"v2ray客户端","_id":"cmfdkuwur007d9szwft1k491g"},{"name":"config.json","_id":"cmfdkuwus007g9szwb0ne3lsm"},{"name":"Inspur","_id":"cmfdkuwus007h9szwgjjqdvrk"},{"name":"浪潮","_id":"cmfdkuwus007k9szw54q10c0u"},{"name":"硬盘","_id":"cmfdkuwus007n9szw6ze4ayn1"},{"name":"带外","_id":"cmfdkuwut007o9szwgu7ubskg"},{"name":"BMC","_id":"cmfdkuwut007p9szw589681r6"},{"name":"armv8","_id":"cmfdkuwut007t9szw0i0j4vv8"},{"name":"vsftpd","_id":"cmfdkuwuu007w9szw8uzp9lx0"},{"name":"python","_id":"cmfdkuwuu007z9szw5v29dmny"},{"name":"nextcloud","_id":"cmfdkuwuw00879szw7qzk738o"},{"name":"docker compose","_id":"cmfdkuwux008b9szw893j2qaz"},{"name":"mariadb","_id":"cmfdkuwux008c9szwaqkvapch"},{"name":"redis","_id":"cmfdkuwux008d9szw1jnb4nsl"}]}}